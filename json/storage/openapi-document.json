{
 "components": {
  "schemas": {
   "schemas:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "OperationListResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/OperationListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Result of the request to list Storage operations. It contains a list of operations and a URL link to get the next set of results.",
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:1",
      "description": "List of Storage operations supported by the Storage resource provider."
     }
    }
   },
   "schemas:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "OperationListResult-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/OperationListResult-value"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:2"
    },
    "description": "List of Storage operations supported by the Storage resource provider."
   },
   "schemas:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Operation",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Operation"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Storage REST API operation definition.",
    "type": "object",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:3",
      "description": "Operation name: {provider}/{resource}/{operation}"
     },
     "display": {
      "$ref": "#/components/schemas/schemas:4",
      "description": "Display metadata associated with the operation."
     },
     "origin": {
      "$ref": "#/components/schemas/schemas:9",
      "description": "The origin of operations."
     },
     "properties": {
      "description": "Properties of operation, include metric specifications.",
      "x-ms-client-flatten": true,
      "x-ms-client-name": "OperationProperties",
      "$ref": "#/components/schemas/schemas:10"
     }
    }
   },
   "schemas:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Operation-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Operation-name"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Operation name: {provider}/{resource}/{operation}",
    "type": "string"
   },
   "schemas:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Operation-display",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Operation-display"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Display metadata associated with the operation.",
    "properties": {
     "provider": {
      "$ref": "#/components/schemas/schemas:5",
      "description": "Service provider: Microsoft Storage."
     },
     "resource": {
      "$ref": "#/components/schemas/schemas:6",
      "description": "Resource on which the operation is performed etc."
     },
     "operation": {
      "$ref": "#/components/schemas/schemas:7",
      "description": "Type of operation: get, read, delete, etc."
     },
     "description": {
      "$ref": "#/components/schemas/schemas:8",
      "description": "Description of the operation."
     }
    }
   },
   "schemas:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Operation-display-provider",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Operation-display-provider"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Service provider: Microsoft Storage.",
    "type": "string"
   },
   "schemas:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Operation-display-resource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Operation-display-resource"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Resource on which the operation is performed etc.",
    "type": "string"
   },
   "schemas:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Operation-display-operation",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Operation-display-operation"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Type of operation: get, read, delete, etc.",
    "type": "string"
   },
   "schemas:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Operation-display-description",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Operation-display-description"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Description of the operation.",
    "type": "string"
   },
   "schemas:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Operation-origin",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Operation-origin"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The origin of operations."
   },
   "schemas:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "OperationProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/OperationProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of operation, include metric specifications.",
    "properties": {
     "serviceSpecification": {
      "$ref": "#/components/schemas/schemas:11",
      "description": "One property of operation, include metric specifications."
     }
    }
   },
   "schemas:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSpecification",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSpecification"
     ],
     "x-ms-secondary-file": false
    },
    "description": "One property of operation, include metric specifications.",
    "properties": {
     "metricSpecifications": {
      "$ref": "#/components/schemas/schemas:12",
      "description": "Metric specifications of operation."
     }
    }
   },
   "schemas:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSpecification-metricSpecifications",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSpecification-metricSpecifications"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Metric specifications of operation.",
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:13"
    }
   },
   "schemas:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Metric specification of operation.",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:14",
      "description": "Name of metric specification."
     },
     "displayName": {
      "$ref": "#/components/schemas/schemas:15",
      "description": "Display name of metric specification."
     },
     "displayDescription": {
      "$ref": "#/components/schemas/schemas:16",
      "description": "Display description of metric specification."
     },
     "unit": {
      "$ref": "#/components/schemas/schemas:17",
      "description": "Unit could be Bytes or Count."
     },
     "dimensions": {
      "$ref": "#/components/schemas/schemas:18",
      "description": "Dimensions of blobs, including blob type and access tier."
     },
     "aggregationType": {
      "$ref": "#/components/schemas/schemas:19",
      "description": "Aggregation type could be Average."
     },
     "fillGapWithZero": {
      "type": "boolean",
      "description": "The property to decide fill gap with zero or not."
     },
     "category": {
      "$ref": "#/components/schemas/schemas:20",
      "description": "The category this metric specification belong to, could be Capacity."
     },
     "resourceIdDimensionNameOverride": {
      "$ref": "#/components/schemas/schemas:21",
      "description": "Account Resource Id."
     }
    }
   },
   "schemas:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Name of metric specification."
   },
   "schemas:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification-displayName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification-displayName"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Display name of metric specification."
   },
   "schemas:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification-displayDescription",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification-displayDescription"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Display description of metric specification."
   },
   "schemas:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification-unit",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification-unit"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Unit could be Bytes or Count."
   },
   "schemas:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification-dimensions",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification-dimensions"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Dimensions of blobs, including blob type and access tier.",
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:22"
    }
   },
   "schemas:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification-aggregationType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification-aggregationType"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Aggregation type could be Average."
   },
   "schemas:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification-category",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification-category"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The category this metric specification belong to, could be Capacity."
   },
   "schemas:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MetricSpecification-resourceIdDimensionNameOverride",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/MetricSpecification-resourceIdDimensionNameOverride"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Account Resource Id."
   },
   "schemas:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Dimension",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Dimension"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Dimension of blobs, possibly be blob type or access tier.",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:23",
      "description": "Display name of dimension."
     },
     "displayName": {
      "$ref": "#/components/schemas/schemas:24",
      "description": "Display name of dimension."
     }
    }
   },
   "schemas:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Dimension-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Dimension-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Display name of dimension."
   },
   "schemas:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Dimension-displayName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Dimension-displayName"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Display name of dimension."
   },
   "schemas:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountCheckNameAvailabilityParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountCheckNameAvailabilityParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:26",
      "description": "The storage account name."
     },
     "type": {
      "x-ms-enum": {
       "name": "Type",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/Type",
      "description": "The type of resource, Microsoft.Storage/storageAccounts"
     }
    },
    "description": "The parameters used to check the availability of the storage account name.",
    "required": [
     "name",
     "type"
    ]
   },
   "schemas:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountCheckNameAvailabilityParameters-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountCheckNameAvailabilityParameters-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The storage account name."
   },
   "schemas:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SKUCapability",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SKUCapability"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:29",
      "description": "The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.",
      "readOnly": true
     },
     "value": {
      "$ref": "#/components/schemas/schemas:30",
      "description": "A string value to indicate states of given capability. Possibly 'true' or 'false'.",
      "readOnly": true
     }
    },
    "description": "The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc."
   },
   "schemas:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SKUCapability-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SKUCapability-name"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc."
   },
   "schemas:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SKUCapability-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SKUCapability-value"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "A string value to indicate states of given capability. Possibly 'true' or 'false'."
   },
   "schemas:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Restriction",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Restriction"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "type": {
      "$ref": "#/components/schemas/schemas:32",
      "description": "The type of restrictions. As of now only possible value for this is location.",
      "readOnly": true
     },
     "values": {
      "$ref": "#/components/schemas/schemas:33",
      "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
      "readOnly": true
     },
     "reasonCode": {
      "x-ms-enum": {
       "name": "ReasonCode",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/ReasonCode",
      "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC."
     }
    },
    "description": "The restriction because of which SKU cannot be used."
   },
   "schemas:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Restriction-type",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Restriction-type"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The type of restrictions. As of now only possible value for this is location."
   },
   "schemas:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Restriction-values",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Restriction-values"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:34"
    },
    "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted."
   },
   "schemas:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Restriction-valuesItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Restriction-valuesItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageSkuListResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageSkuListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:37",
      "description": "Get the list result of storage SKUs and their properties.",
      "readOnly": true
     }
    },
    "description": "The response from the List Storage SKUs operation."
   },
   "schemas:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageSkuListResult-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageSkuListResult-value"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:41"
    },
    "description": "Get the list result of storage SKUs and their properties."
   },
   "schemas:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "CheckNameAvailabilityResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/CheckNameAvailabilityResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "nameAvailable": {
      "readOnly": true,
      "type": "boolean",
      "description": "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used."
     },
     "reason": {
      "x-ms-enum": {
       "name": "Reason",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/Reason",
      "description": "Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.",
      "readOnly": true
     },
     "message": {
      "$ref": "#/components/schemas/schemas:40",
      "description": "Gets an error message explaining the Reason value in more detail.",
      "readOnly": true
     }
    },
    "description": "The CheckNameAvailability operation response."
   },
   "schemas:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "CheckNameAvailabilityResult-message",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/CheckNameAvailabilityResult-message"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets an error message explaining the Reason value in more detail."
   },
   "schemas:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SkuInformation",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SkuInformation"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/SkuName"
     },
     "tier": {
      "$ref": "#/components/schemas/SkuTier"
     },
     "resourceType": {
      "$ref": "#/components/schemas/schemas:42",
      "description": "The type of the resource, usually it is 'storageAccounts'.",
      "readOnly": true
     },
     "kind": {
      "x-ms-enum": {
       "name": "Kind",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/Kind",
      "description": "Indicates the type of storage account.",
      "readOnly": true
     },
     "locations": {
      "$ref": "#/components/schemas/schemas:44",
      "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).",
      "readOnly": true
     },
     "capabilities": {
      "$ref": "#/components/schemas/schemas:46",
      "description": "The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.",
      "readOnly": true
     },
     "restrictions": {
      "$ref": "#/components/schemas/schemas:47",
      "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
     }
    },
    "description": "Storage SKU and its properties",
    "required": [
     "name"
    ]
   },
   "schemas:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SkuInformation-resourceType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SkuInformation-resourceType"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The type of the resource, usually it is 'storageAccounts'."
   },
   "schemas:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SkuInformation-locations",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SkuInformation-locations"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:45"
    },
    "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.)."
   },
   "schemas:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SkuInformation-locationsItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SkuInformation-locationsItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SkuInformation-capabilities",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SkuInformation-capabilities"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:28"
    },
    "description": "The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc."
   },
   "schemas:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SkuInformation-restrictions",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SkuInformation-restrictions"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:31"
    },
    "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
   },
   "schemas:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "CustomDomain",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/CustomDomain"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:49",
      "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
     },
     "useSubDomainName": {
      "type": "boolean",
      "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
     }
    },
    "description": "The custom domain assigned to this storage account. This can be set via Update.",
    "required": [
     "name"
    ]
   },
   "schemas:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "CustomDomain-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/CustomDomain-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
   },
   "schemas:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SasPolicy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SasPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "sasExpirationPeriod": {
      "$ref": "#/components/schemas/schemas:51",
      "description": "The SAS expiration period, DD.HH:MM:SS."
     },
     "expirationAction": {
      "x-ms-enum": {
       "name": "ExpirationAction",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/ExpirationAction",
      "description": "The SAS Expiration Action defines the action to be performed when sasPolicy.sasExpirationPeriod is violated. The 'Log' action can be used for audit purposes and the 'Block' action can be used to block and deny the usage of SAS tokens that do not adhere to the sas policy expiration period."
     }
    },
    "description": "SasPolicy assigned to the storage account.",
    "required": [
     "sasExpirationPeriod",
     "expirationAction"
    ]
   },
   "schemas:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SasPolicy-sasExpirationPeriod",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SasPolicy-sasExpirationPeriod"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "example": "1.15:59:59",
    "description": "The SAS expiration period, DD.HH:MM:SS."
   },
   "schemas:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyPolicy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "keyExpirationPeriodInDays": {
      "$ref": "#/components/schemas/schemas:54",
      "description": "The key expiration period in days."
     }
    },
    "description": "KeyPolicy assigned to the storage account.",
    "required": [
     "keyExpirationPeriodInDays"
    ]
   },
   "schemas:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyPolicy-keyExpirationPeriodInDays",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyPolicy-keyExpirationPeriodInDays"
     ],
     "x-ms-secondary-file": false
    },
    "type": "integer",
    "description": "The key expiration period in days.",
    "format": "int32"
   },
   "schemas:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyCreationTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyCreationTime"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "key1": {
      "$ref": "#/components/schemas/schemas:56"
     },
     "key2": {
      "$ref": "#/components/schemas/schemas:57"
     }
    },
    "description": "Storage account keys creation time."
   },
   "schemas:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyCreationTime-key1",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyCreationTime-key1"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "format": "date-time",
    "example": "2021-02-03T05:57:30.917Z"
   },
   "schemas:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyCreationTime-key2",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyCreationTime-key2"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "format": "date-time",
    "example": "2021-02-03T05:57:30.917Z"
   },
   "schemas:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionService",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionService"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled."
     },
     "lastEnabledTime": {
      "$ref": "#/components/schemas/schemas:59",
      "description": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled.",
      "readOnly": true
     },
     "keyType": {
      "x-ms-enum": {
       "name": "KeyType",
       "modelAsString": true
      },
      "x-ms-mutability": [
       "create",
       "read"
      ],
      "$ref": "#/components/schemas/KeyType",
      "description": "Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used."
     }
    },
    "description": "A service that allows server-side encryption to be used."
   },
   "schemas:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionService-lastEnabledTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionService-lastEnabledTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled."
   },
   "schemas:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionServices",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionServices"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "blob": {
      "$ref": "#/components/schemas/schemas:58",
      "description": "The encryption function of the blob storage service."
     },
     "file": {
      "$ref": "#/components/schemas/schemas:58",
      "description": "The encryption function of the file storage service."
     },
     "table": {
      "$ref": "#/components/schemas/schemas:58",
      "description": "The encryption function of the table storage service."
     },
     "queue": {
      "$ref": "#/components/schemas/schemas:58",
      "description": "The encryption function of the queue storage service."
     }
    },
    "description": "A list of services that support encryption."
   },
   "schemas:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyVaultProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of key vault.",
    "properties": {
     "keyname": {
      "x-ms-client-name": "KeyName",
      "$ref": "#/components/schemas/schemas:63",
      "description": "The name of KeyVault key."
     },
     "keyversion": {
      "x-ms-client-name": "KeyVersion",
      "$ref": "#/components/schemas/schemas:64",
      "description": "The version of KeyVault key."
     },
     "keyvaulturi": {
      "x-ms-client-name": "KeyVaultUri",
      "$ref": "#/components/schemas/schemas:65",
      "description": "The Uri of KeyVault."
     },
     "currentVersionedKeyIdentifier": {
      "x-ms-client-name": "CurrentVersionedKeyIdentifier",
      "$ref": "#/components/schemas/schemas:66",
      "description": "The object identifier of the current versioned Key Vault Key in use.",
      "readOnly": true
     },
     "lastKeyRotationTimestamp": {
      "x-ms-client-name": "LastKeyRotationTimestamp",
      "$ref": "#/components/schemas/schemas:67",
      "description": "Timestamp of last rotation of the Key Vault Key.",
      "readOnly": true
     },
     "currentVersionedKeyExpirationTimestamp": {
      "x-ms-client-name": "CurrentVersionedKeyExpirationTimestamp",
      "$ref": "#/components/schemas/schemas:68",
      "description": "This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.",
      "readOnly": true
     }
    }
   },
   "schemas:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-keyname",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyVaultProperties-keyname"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The name of KeyVault key."
   },
   "schemas:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-keyversion",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyVaultProperties-keyversion"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The version of KeyVault key."
   },
   "schemas:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-keyvaulturi",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyVaultProperties-keyvaulturi"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The Uri of KeyVault."
   },
   "schemas:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-currentVersionedKeyIdentifier",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyVaultProperties-currentVersionedKeyIdentifier"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "readOnly": true,
    "description": "The object identifier of the current versioned Key Vault Key in use."
   },
   "schemas:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-lastKeyRotationTimestamp",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyVaultProperties-lastKeyRotationTimestamp"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "readOnly": true,
    "format": "date-time",
    "description": "Timestamp of last rotation of the Key Vault Key."
   },
   "schemas:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyVaultProperties-currentVersionedKeyExpirationTimestamp",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/KeyVaultProperties-currentVersionedKeyExpirationTimestamp"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "readOnly": true,
    "format": "date-time",
    "description": "This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption."
   },
   "schemas:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Encryption",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Encryption"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "services": {
      "$ref": "#/components/schemas/schemas:61",
      "description": "List of services which support encryption."
     },
     "keySource": {
      "x-ms-enum": {
       "name": "KeySource",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/KeySource",
      "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault"
     },
     "requireInfrastructureEncryption": {
      "type": "boolean",
      "x-ms-client-name": "RequireInfrastructureEncryption",
      "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
     },
     "keyvaultproperties": {
      "$ref": "#/components/schemas/schemas:62",
      "x-ms-client-name": "KeyVaultProperties",
      "description": "Properties provided by key vault."
     },
     "identity": {
      "$ref": "#/components/schemas/schemas:71",
      "x-ms-client-name": "EncryptionIdentity",
      "description": "The identity to be used with service-side encryption at rest."
     }
    },
    "description": "The encryption settings on the storage account."
   },
   "schemas:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionIdentity",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionIdentity"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "userAssignedIdentity": {
      "x-ms-client-name": "EncryptionUserAssignedIdentity",
      "$ref": "#/components/schemas/schemas:72",
      "description": "Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account."
     },
     "federatedIdentityClientId": {
      "x-ms-client-name": "EncryptionFederatedIdentityClientId",
      "$ref": "#/components/schemas/schemas:73",
      "description": "ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account."
     }
    },
    "description": "Encryption identity for the storage account."
   },
   "schemas:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionIdentity-userAssignedIdentity",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionIdentity-userAssignedIdentity"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account."
   },
   "schemas:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionIdentity-federatedIdentityClientId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionIdentity-federatedIdentityClientId"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account."
   },
   "schemas:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UserAssignedIdentity",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/UserAssignedIdentity"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "principalId": {
      "$ref": "#/components/schemas/schemas:75",
      "description": "The principal ID of the identity.",
      "readOnly": true
     },
     "clientId": {
      "$ref": "#/components/schemas/schemas:76",
      "description": "The client ID of the identity.",
      "readOnly": true
     }
    },
    "description": "UserAssignedIdentity for the resource."
   },
   "schemas:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UserAssignedIdentity-principalId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/UserAssignedIdentity-principalId"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The principal ID of the identity."
   },
   "schemas:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UserAssignedIdentity-clientId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/UserAssignedIdentity-clientId"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The client ID of the identity."
   },
   "schemas:77": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ResourceAccessRule",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ResourceAccessRule"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "tenantId": {
      "$ref": "#/components/schemas/schemas:78",
      "description": "Tenant Id"
     },
     "resourceId": {
      "$ref": "#/components/schemas/schemas:79",
      "description": "Resource Id"
     }
    },
    "description": "Resource Access Rule."
   },
   "schemas:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ResourceAccessRule-tenantId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ResourceAccessRule-tenantId"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Tenant Id"
   },
   "schemas:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ResourceAccessRule-resourceId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ResourceAccessRule-resourceId"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Resource Id"
   },
   "schemas:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "VirtualNetworkRule",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/VirtualNetworkRule"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "id": {
      "x-ms-client-name": "VirtualNetworkResourceId",
      "$ref": "#/components/schemas/schemas:81",
      "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."
     },
     "action": {
      "x-ms-enum": {
       "name": "Action",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/Action",
      "description": "The action of virtual network rule."
     },
     "state": {
      "x-ms-enum": {
       "name": "State",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/State",
      "description": "Gets the state of virtual network rule."
     }
    },
    "description": "Virtual Network rule.",
    "required": [
     "id"
    ]
   },
   "schemas:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "VirtualNetworkRule-id",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/VirtualNetworkRule-id"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."
   },
   "schemas:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "IPRule",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/IPRule"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "x-ms-client-name": "IPAddressOrRange",
      "$ref": "#/components/schemas/schemas:85",
      "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."
     },
     "action": {
      "x-ms-enum": {
       "name": "Action",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/Action",
      "description": "The action of IP ACL rule."
     }
    },
    "description": "IP rule with specific IP or IP range in CIDR format.",
    "required": [
     "value"
    ]
   },
   "schemas:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "IPRule-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/IPRule-value"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."
   },
   "schemas:87": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "NetworkRuleSet",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/NetworkRuleSet"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "bypass": {
      "x-ms-enum": {
       "name": "Bypass",
       "modelAsString": true
      },
      "x-ms-client-name": "Bypass",
      "$ref": "#/components/schemas/Bypass",
      "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."
     },
     "resourceAccessRules": {
      "$ref": "#/components/schemas/schemas:89",
      "description": "Sets the resource access rules"
     },
     "virtualNetworkRules": {
      "$ref": "#/components/schemas/schemas:90",
      "description": "Sets the virtual network rules"
     },
     "ipRules": {
      "$ref": "#/components/schemas/schemas:91",
      "description": "Sets the IP ACL rules"
     },
     "defaultAction": {
      "x-ms-enum": {
       "name": "DefaultAction",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/DefaultAction",
      "description": "Specifies the default action of allow or deny when no other rules match."
     }
    },
    "description": "Network rule set",
    "required": [
     "defaultAction"
    ]
   },
   "schemas:89": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "NetworkRuleSet-resourceAccessRules",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/NetworkRuleSet-resourceAccessRules"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "description": "Resource Access Rules.",
     "$ref": "#/components/schemas/schemas:77"
    },
    "description": "Sets the resource access rules"
   },
   "schemas:90": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "NetworkRuleSet-virtualNetworkRules",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/NetworkRuleSet-virtualNetworkRules"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "description": "Virtual Network rule.",
     "$ref": "#/components/schemas/schemas:80"
    },
    "description": "Sets the virtual network rules"
   },
   "schemas:91": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "NetworkRuleSet-ipRules",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/NetworkRuleSet-ipRules"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "description": "IP rule with specific IP or IP range in CIDR format.",
     "$ref": "#/components/schemas/schemas:84"
    },
    "description": "Sets the IP ACL rules"
   },
   "schemas:93": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AzureFilesIdentityBasedAuthentication",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AzureFilesIdentityBasedAuthentication"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "directoryServiceOptions": {
      "x-ms-enum": {
       "name": "DirectoryServiceOptions",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/DirectoryServiceOptions",
      "description": "Indicates the directory service used. Note that this enum may be extended in the future."
     },
     "activeDirectoryProperties": {
      "$ref": "#/components/schemas/schemas:96",
      "description": "Required if directoryServiceOptions are AD, optional if they are AADKERB."
     },
     "defaultSharePermission": {
      "x-ms-enum": {
       "name": "DefaultSharePermission",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/DefaultSharePermission",
      "description": "Default share permission for users using Kerberos authentication if RBAC role is not assigned."
     }
    },
    "description": "Settings for Azure Files identity based authentication.",
    "required": [
     "directoryServiceOptions"
    ]
   },
   "schemas:96": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "domainName": {
      "$ref": "#/components/schemas/schemas:97",
      "description": "Specifies the primary domain that the AD DNS server is authoritative for."
     },
     "netBiosDomainName": {
      "$ref": "#/components/schemas/schemas:98",
      "description": "Specifies the NetBIOS domain name."
     },
     "forestName": {
      "$ref": "#/components/schemas/schemas:99",
      "description": "Specifies the Active Directory forest to get."
     },
     "domainGuid": {
      "$ref": "#/components/schemas/schemas:100",
      "description": "Specifies the domain GUID."
     },
     "domainSid": {
      "$ref": "#/components/schemas/schemas:101",
      "description": "Specifies the security identifier (SID)."
     },
     "azureStorageSid": {
      "$ref": "#/components/schemas/schemas:102",
      "description": "Specifies the security identifier (SID) for Azure Storage."
     },
     "samAccountName": {
      "$ref": "#/components/schemas/schemas:103",
      "description": "Specifies the Active Directory SAMAccountName for Azure Storage."
     },
     "accountType": {
      "x-ms-enum": {
       "name": "AccountType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/AccountType",
      "description": "Specifies the Active Directory account type for Azure Storage."
     }
    },
    "description": "Settings properties for Active Directory (AD).",
    "required": [
     "domainName",
     "domainGuid"
    ]
   },
   "schemas:97": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-domainName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties-domainName"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the primary domain that the AD DNS server is authoritative for."
   },
   "schemas:98": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-netBiosDomainName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties-netBiosDomainName"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the NetBIOS domain name."
   },
   "schemas:99": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-forestName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties-forestName"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the Active Directory forest to get."
   },
   "schemas:100": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-domainGuid",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties-domainGuid"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the domain GUID."
   },
   "schemas:101": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-domainSid",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties-domainSid"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the security identifier (SID)."
   },
   "schemas:102": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-azureStorageSid",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties-azureStorageSid"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the security identifier (SID) for Azure Storage."
   },
   "schemas:103": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ActiveDirectoryProperties-samAccountName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties-samAccountName"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the Active Directory SAMAccountName for Azure Storage."
   },
   "schemas:105": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountPropertiesCreateParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "allowedCopyScope": {
      "x-ms-enum": {
       "name": "AllowedCopyScope",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/AllowedCopyScope",
      "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet."
     },
     "publicNetworkAccess": {
      "$ref": "#/components/schemas/PublicNetworkAccess",
      "description": "Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'."
     },
     "sasPolicy": {
      "$ref": "#/components/schemas/schemas:50",
      "description": "SasPolicy assigned to the storage account."
     },
     "keyPolicy": {
      "$ref": "#/components/schemas/schemas:53",
      "description": "KeyPolicy assigned to the storage account."
     },
     "customDomain": {
      "$ref": "#/components/schemas/schemas:48",
      "description": "User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property."
     },
     "encryption": {
      "$ref": "#/components/schemas/schemas:69",
      "description": "Encryption settings to be used for server-side encryption for the storage account."
     },
     "networkAcls": {
      "$ref": "#/components/schemas/schemas:87",
      "x-ms-client-name": "NetworkRuleSet",
      "description": "Network rule set"
     },
     "accessTier": {
      "x-ms-enum": {
       "name": "AccessTier",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/AccessTier",
      "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type."
     },
     "azureFilesIdentityBasedAuthentication": {
      "$ref": "#/components/schemas/schemas:93",
      "description": "Provides the identity based authentication settings for Azure Files."
     },
     "supportsHttpsTrafficOnly": {
      "type": "boolean",
      "x-ms-client-name": "EnableHttpsTrafficOnly",
      "description": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01."
     },
     "isSftpEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsSftpEnabled",
      "description": "Enables Secure File Transfer Protocol, if set to true"
     },
     "isLocalUserEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsLocalUserEnabled",
      "description": "Enables local users feature, if set to true"
     },
     "enableExtendedGroups": {
      "type": "boolean",
      "x-ms-client-name": "EnableExtendedGroups",
      "description": "Enables extended group support with local users feature, if set to true"
     },
     "isHnsEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsHnsEnabled",
      "description": "Account HierarchicalNamespace enabled if sets to true."
     },
     "largeFileSharesState": {
      "x-ms-enum": {
       "name": "LargeFileSharesState",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/LargeFileSharesState",
      "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
     },
     "routingPreference": {
      "$ref": "#/components/schemas/schemas:148",
      "x-ms-client-name": "RoutingPreference",
      "description": "Maintains information about the network routing choice opted by the user for data transfer"
     },
     "allowBlobPublicAccess": {
      "type": "boolean",
      "x-ms-client-name": "AllowBlobPublicAccess",
      "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property."
     },
     "minimumTlsVersion": {
      "x-ms-enum": {
       "name": "MinimumTlsVersion",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/MinimumTlsVersion",
      "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
     },
     "allowSharedKeyAccess": {
      "type": "boolean",
      "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
     },
     "isNfsV3Enabled": {
      "type": "boolean",
      "x-ms-client-name": "EnableNfsV3",
      "description": "NFS 3.0 protocol support enabled if set to true."
     },
     "allowCrossTenantReplication": {
      "type": "boolean",
      "description": "Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default."
     },
     "defaultToOAuthAuthentication": {
      "type": "boolean",
      "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property."
     },
     "immutableStorageWithVersioning": {
      "$ref": "#/components/schemas/schemas:150",
      "x-ms-client-name": "ImmutableStorageWithVersioning",
      "description": "The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default."
     },
     "dnsEndpointType": {
      "x-ms-enum": {
       "name": "DnsEndpointType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/DnsEndpointType",
      "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier."
     }
    },
    "description": "The parameters used to create the storage account."
   },
   "schemas:111": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Identity",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Identity"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "principalId": {
      "$ref": "#/components/schemas/schemas:112",
      "description": "The principal ID of resource identity.",
      "readOnly": true
     },
     "tenantId": {
      "$ref": "#/components/schemas/schemas:113",
      "description": "The tenant ID of resource.",
      "readOnly": true
     },
     "type": {
      "x-ms-enum": {
       "name": "IdentityType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/IdentityType",
      "description": "The identity type."
     },
     "userAssignedIdentities": {
      "$ref": "#/components/schemas/schemas:115",
      "description": "Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here."
     }
    },
    "description": "Identity for the resource.",
    "required": [
     "type"
    ]
   },
   "schemas:112": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Identity-principalId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Identity-principalId"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The principal ID of resource identity."
   },
   "schemas:113": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Identity-tenantId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Identity-tenantId"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The tenant ID of resource."
   },
   "schemas:115": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Identity-userAssignedIdentities",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Identity-userAssignedIdentities"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:74"
    },
    "description": "Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here."
   },
   "schemas:117": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ExtendedLocation",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ExtendedLocation"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The complex type of the extended location.",
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:118",
      "description": "The name of the extended location."
     },
     "type": {
      "$ref": "#/components/schemas/ExtendedLocationTypes",
      "description": "The type of the extended location."
     }
    }
   },
   "schemas:118": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ExtendedLocation-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ExtendedLocation-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The name of the extended location."
   },
   "schemas:119": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountCreateParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountCreateParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:594",
      "description": "Required. Gets or sets the SKU name."
     },
     "kind": {
      "x-ms-enum": {
       "name": "Kind",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/Kind",
      "description": "Required. Indicates the type of storage account."
     },
     "location": {
      "$ref": "#/components/schemas/schemas:121",
      "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
     },
     "extendedLocation": {
      "$ref": "#/components/schemas/schemas:117",
      "description": "Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location"
     },
     "tags": {
      "$ref": "#/components/schemas/schemas:122",
      "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."
     },
     "identity": {
      "$ref": "#/components/schemas/schemas:111",
      "description": "The identity of the resource."
     },
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:105",
      "description": "The parameters used to create the storage account."
     }
    },
    "description": "The parameters used when creating a storage account.",
    "required": [
     "sku",
     "kind",
     "location"
    ]
   },
   "schemas:121": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountCreateParameters-location",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountCreateParameters-location"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
   },
   "schemas:122": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountCreateParameters-tags",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountCreateParameters-tags"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:123"
    },
    "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."
   },
   "schemas:123": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "components·1m4uqah·schemas·storageaccountcreateparameters·properties·tags·additionalproperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/components·1m4uqah·schemas·storageaccountcreateparameters·properties·tags·additionalproperties"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:124": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Endpoints",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Endpoints"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "blob": {
      "$ref": "#/components/schemas/schemas:125",
      "description": "Gets the blob endpoint.",
      "readOnly": true
     },
     "queue": {
      "$ref": "#/components/schemas/schemas:126",
      "description": "Gets the queue endpoint.",
      "readOnly": true
     },
     "table": {
      "$ref": "#/components/schemas/schemas:127",
      "description": "Gets the table endpoint.",
      "readOnly": true
     },
     "file": {
      "$ref": "#/components/schemas/schemas:128",
      "description": "Gets the file endpoint.",
      "readOnly": true
     },
     "web": {
      "$ref": "#/components/schemas/schemas:129",
      "description": "Gets the web endpoint.",
      "readOnly": true
     },
     "dfs": {
      "$ref": "#/components/schemas/schemas:130",
      "description": "Gets the dfs endpoint.",
      "readOnly": true
     },
     "microsoftEndpoints": {
      "x-ms-client-flatten": false,
      "$ref": "#/components/schemas/schemas:131",
      "description": "Gets the microsoft routing storage endpoints."
     },
     "internetEndpoints": {
      "x-ms-client-flatten": false,
      "$ref": "#/components/schemas/schemas:138",
      "description": "Gets the internet routing storage endpoints"
     }
    },
    "description": "The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object."
   },
   "schemas:125": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Endpoints-blob",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Endpoints-blob"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the blob endpoint."
   },
   "schemas:126": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Endpoints-queue",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Endpoints-queue"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the queue endpoint."
   },
   "schemas:127": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Endpoints-table",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Endpoints-table"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the table endpoint."
   },
   "schemas:128": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Endpoints-file",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Endpoints-file"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the file endpoint."
   },
   "schemas:129": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Endpoints-web",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Endpoints-web"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the web endpoint."
   },
   "schemas:130": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Endpoints-dfs",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Endpoints-dfs"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the dfs endpoint."
   },
   "schemas:131": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "blob": {
      "$ref": "#/components/schemas/schemas:132",
      "description": "Gets the blob endpoint.",
      "readOnly": true
     },
     "queue": {
      "$ref": "#/components/schemas/schemas:133",
      "description": "Gets the queue endpoint.",
      "readOnly": true
     },
     "table": {
      "$ref": "#/components/schemas/schemas:134",
      "description": "Gets the table endpoint.",
      "readOnly": true
     },
     "file": {
      "$ref": "#/components/schemas/schemas:135",
      "description": "Gets the file endpoint.",
      "readOnly": true
     },
     "web": {
      "$ref": "#/components/schemas/schemas:136",
      "description": "Gets the web endpoint.",
      "readOnly": true
     },
     "dfs": {
      "$ref": "#/components/schemas/schemas:137",
      "description": "Gets the dfs endpoint.",
      "readOnly": true
     }
    },
    "description": "The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint."
   },
   "schemas:132": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-blob",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-blob"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the blob endpoint."
   },
   "schemas:133": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-queue",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-queue"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the queue endpoint."
   },
   "schemas:134": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-table",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-table"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the table endpoint."
   },
   "schemas:135": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-file",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-file"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the file endpoint."
   },
   "schemas:136": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-web",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-web"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the web endpoint."
   },
   "schemas:137": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMicrosoftEndpoints-dfs",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMicrosoftEndpoints-dfs"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the dfs endpoint."
   },
   "schemas:138": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountInternetEndpoints"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "blob": {
      "$ref": "#/components/schemas/schemas:139",
      "description": "Gets the blob endpoint.",
      "readOnly": true
     },
     "file": {
      "$ref": "#/components/schemas/schemas:140",
      "description": "Gets the file endpoint.",
      "readOnly": true
     },
     "web": {
      "$ref": "#/components/schemas/schemas:141",
      "description": "Gets the web endpoint.",
      "readOnly": true
     },
     "dfs": {
      "$ref": "#/components/schemas/schemas:142",
      "description": "Gets the dfs endpoint.",
      "readOnly": true
     }
    },
    "description": "The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint."
   },
   "schemas:139": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints-blob",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountInternetEndpoints-blob"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the blob endpoint."
   },
   "schemas:140": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints-file",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountInternetEndpoints-file"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the file endpoint."
   },
   "schemas:141": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints-web",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountInternetEndpoints-web"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the web endpoint."
   },
   "schemas:142": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountInternetEndpoints-dfs",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountInternetEndpoints-dfs"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the dfs endpoint."
   },
   "schemas:143": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "GeoReplicationStats",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/GeoReplicationStats"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "status": {
      "x-ms-enum": {
       "name": "GeoReplicationStatus",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/GeoReplicationStatus",
      "description": "The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.",
      "readOnly": true
     },
     "lastSyncTime": {
      "$ref": "#/components/schemas/schemas:145",
      "description": "All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.",
      "readOnly": true
     },
     "canFailover": {
      "readOnly": true,
      "type": "boolean",
      "description": "A boolean flag which indicates whether or not account failover is supported for the account."
     },
     "canPlannedFailover": {
      "readOnly": true,
      "type": "boolean",
      "description": "A boolean flag which indicates whether or not planned account failover is supported for the account."
     },
     "postFailoverRedundancy": {
      "x-ms-enum": {
       "name": "postFailoverRedundancy",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/postFailoverRedundancy",
      "description": "The redundancy type of the account after an account failover is performed.",
      "readOnly": true
     },
     "postPlannedFailoverRedundancy": {
      "x-ms-enum": {
       "name": "postPlannedFailoverRedundancy",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/postPlannedFailoverRedundancy",
      "description": "The redundancy type of the account after a planned account failover is performed.",
      "readOnly": true
     }
    },
    "description": "Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account."
   },
   "schemas:145": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "GeoReplicationStats-lastSyncTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/GeoReplicationStats-lastSyncTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap."
   },
   "schemas:148": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "RoutingPreference",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/RoutingPreference"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "routingChoice": {
      "x-ms-enum": {
       "name": "RoutingChoice",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/RoutingChoice",
      "description": "Routing Choice defines the kind of network routing opted by the user."
     },
     "publishMicrosoftEndpoints": {
      "type": "boolean",
      "description": "A boolean flag which indicates whether microsoft routing storage endpoints are to be published"
     },
     "publishInternetEndpoints": {
      "type": "boolean",
      "description": "A boolean flag which indicates whether internet routing storage endpoints are to be published"
     }
    },
    "description": "Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing"
   },
   "schemas:150": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ImmutableStorageAccount",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ImmutableStorageAccount"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default."
     },
     "immutabilityPolicy": {
      "x-ms-client-flatten": false,
      "$ref": "#/components/schemas/schemas:151",
      "description": "Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy."
     }
    },
    "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning."
   },
   "schemas:151": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountImmutabilityPolicyProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountImmutabilityPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "immutabilityPeriodSinceCreationInDays": {
      "$ref": "#/components/schemas/schemas:152",
      "description": "The immutability period for the blobs in the container since the policy creation, in days."
     },
     "state": {
      "x-ms-enum": {
       "name": "AccountImmutabilityPolicyState",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/AccountImmutabilityPolicyState",
      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted."
     },
     "allowProtectedAppendWrites": {
      "type": "boolean",
      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted."
     }
    },
    "description": "This defines account-level immutability policy properties."
   },
   "schemas:152": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountImmutabilityPolicyProperties-immutabilityPeriodSinceCreationInDays",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountImmutabilityPolicyProperties-immutabilityPeriodSinceCreationInDays"
     ],
     "x-ms-secondary-file": false
    },
    "type": "integer",
    "minimum": 1,
    "maximum": 146000,
    "format": "int32",
    "description": "The immutability period for the blobs in the container since the policy creation, in days."
   },
   "schemas:154": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountSkuConversionStatus",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountSkuConversionStatus"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "skuConversionStatus": {
      "x-ms-enum": {
       "name": "SkuConversionStatus",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/SkuConversionStatus",
      "description": "This property indicates the current sku conversion status.",
      "readOnly": true
     },
     "targetSkuName": {
      "$ref": "#/components/schemas/SkuName",
      "description": "This property represents the target sku name to which the account sku is being converted asynchronously."
     },
     "startTime": {
      "$ref": "#/components/schemas/schemas:156",
      "description": "This property represents the sku conversion start time.",
      "readOnly": true
     },
     "endTime": {
      "$ref": "#/components/schemas/schemas:157",
      "description": "This property represents the sku conversion end time.",
      "readOnly": true
     }
    },
    "description": "This defines the sku conversion status object for asynchronous sku conversions."
   },
   "schemas:156": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountSkuConversionStatus-startTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountSkuConversionStatus-startTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "This property represents the sku conversion start time."
   },
   "schemas:157": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountSkuConversionStatus-endTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountSkuConversionStatus-endTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "This property represents the sku conversion end time."
   },
   "schemas:158": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreStatus",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreStatus"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "status": {
      "x-ms-enum": {
       "name": "BlobRestoreProgressStatus",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/BlobRestoreProgressStatus",
      "description": "The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
      "readOnly": true
     },
     "failureReason": {
      "$ref": "#/components/schemas/schemas:160",
      "description": "Failure reason when blob restore is failed.",
      "readOnly": true
     },
     "restoreId": {
      "$ref": "#/components/schemas/schemas:161",
      "description": "Id for tracking blob restore request.",
      "readOnly": true
     },
     "parameters": {
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:210",
      "description": "Blob restore request parameters."
     }
    },
    "description": "Blob restore status."
   },
   "schemas:160": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreStatus-failureReason",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreStatus-failureReason"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Failure reason when blob restore is failed."
   },
   "schemas:161": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreStatus-restoreId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreStatus-restoreId"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Id for tracking blob restore request."
   },
   "schemas:162": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "storageAccountResourceId": {
      "$ref": "#/components/schemas/schemas:163",
      "description": "Full resource id of the original storage account.",
      "readOnly": true
     },
     "location": {
      "$ref": "#/components/schemas/schemas:164",
      "description": "Location of the deleted account.",
      "readOnly": true
     },
     "restoreReference": {
      "$ref": "#/components/schemas/schemas:165",
      "description": "Can be used to attempt recovering this deleted account via PutStorageAccount API.",
      "readOnly": true
     },
     "creationTime": {
      "$ref": "#/components/schemas/schemas:166",
      "description": "Creation time of the deleted account.",
      "readOnly": true
     },
     "deletionTime": {
      "$ref": "#/components/schemas/schemas:167",
      "description": "Deletion time of the deleted account.",
      "readOnly": true
     }
    },
    "description": "Attributes of a deleted storage account."
   },
   "schemas:163": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountProperties-storageAccountResourceId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountProperties-storageAccountResourceId"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Full resource id of the original storage account."
   },
   "schemas:164": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountProperties-location",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountProperties-location"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Location of the deleted account."
   },
   "schemas:165": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountProperties-restoreReference",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountProperties-restoreReference"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Can be used to attempt recovering this deleted account via PutStorageAccount API."
   },
   "schemas:166": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountProperties-creationTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountProperties-creationTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Creation time of the deleted account."
   },
   "schemas:167": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountProperties-deletionTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountProperties-deletionTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Deletion time of the deleted account."
   },
   "schemas:168": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "provisioningState": {
      "x-ms-enum": {
       "name": "ProvisioningState",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/ProvisioningState",
      "description": "Gets the status of the storage account at the time the operation was called.",
      "readOnly": true
     },
     "primaryEndpoints": {
      "$ref": "#/components/schemas/schemas:124",
      "readOnly": true,
      "description": "Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint."
     },
     "primaryLocation": {
      "$ref": "#/components/schemas/schemas:170",
      "description": "Gets the location of the primary data center for the storage account.",
      "readOnly": true
     },
     "statusOfPrimary": {
      "x-ms-enum": {
       "name": "AccountStatus",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/AccountStatus",
      "description": "Gets the status indicating whether the primary location of the storage account is available or unavailable.",
      "readOnly": true
     },
     "lastGeoFailoverTime": {
      "$ref": "#/components/schemas/schemas:172",
      "description": "Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.",
      "readOnly": true
     },
     "secondaryLocation": {
      "$ref": "#/components/schemas/schemas:173",
      "description": "Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.",
      "readOnly": true
     },
     "statusOfSecondary": {
      "x-ms-enum": {
       "name": "AccountStatus",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/AccountStatus",
      "description": "Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.",
      "readOnly": true
     },
     "creationTime": {
      "$ref": "#/components/schemas/schemas:175",
      "description": "Gets the creation date and time of the storage account in UTC.",
      "readOnly": true
     },
     "customDomain": {
      "$ref": "#/components/schemas/schemas:48",
      "readOnly": true,
      "description": "Gets the custom domain the user assigned to this storage account."
     },
     "sasPolicy": {
      "$ref": "#/components/schemas/schemas:50",
      "readOnly": true,
      "description": "SasPolicy assigned to the storage account."
     },
     "keyPolicy": {
      "$ref": "#/components/schemas/schemas:53",
      "readOnly": true,
      "description": "KeyPolicy assigned to the storage account."
     },
     "keyCreationTime": {
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:55",
      "description": "Storage account keys creation time."
     },
     "secondaryEndpoints": {
      "$ref": "#/components/schemas/schemas:124",
      "readOnly": true,
      "description": "Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS."
     },
     "encryption": {
      "$ref": "#/components/schemas/schemas:69",
      "readOnly": true,
      "description": "Encryption settings to be used for server-side encryption for the storage account."
     },
     "accessTier": {
      "x-ms-enum": {
       "name": "AccessTier",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/AccessTier",
      "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.",
      "readOnly": true
     },
     "azureFilesIdentityBasedAuthentication": {
      "$ref": "#/components/schemas/schemas:93",
      "description": "Provides the identity based authentication settings for Azure Files."
     },
     "supportsHttpsTrafficOnly": {
      "type": "boolean",
      "x-ms-client-name": "EnableHttpsTrafficOnly",
      "description": "Allows https traffic only to storage service if sets to true."
     },
     "networkAcls": {
      "$ref": "#/components/schemas/schemas:87",
      "x-ms-client-name": "NetworkRuleSet",
      "description": "Network rule set",
      "readOnly": true
     },
     "isSftpEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsSftpEnabled",
      "description": "Enables Secure File Transfer Protocol, if set to true"
     },
     "isLocalUserEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsLocalUserEnabled",
      "description": "Enables local users feature, if set to true"
     },
     "enableExtendedGroups": {
      "type": "boolean",
      "x-ms-client-name": "EnableExtendedGroups",
      "description": "Enables extended group support with local users feature, if set to true"
     },
     "isHnsEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsHnsEnabled",
      "description": "Account HierarchicalNamespace enabled if sets to true."
     },
     "geoReplicationStats": {
      "$ref": "#/components/schemas/schemas:143",
      "x-ms-client-name": "GeoReplicationStats",
      "description": "Geo Replication Stats",
      "readOnly": true
     },
     "failoverInProgress": {
      "type": "boolean",
      "x-ms-client-name": "FailoverInProgress",
      "description": "If the failover is in progress, the value will be true, otherwise, it will be null.",
      "readOnly": true
     },
     "largeFileSharesState": {
      "x-ms-enum": {
       "name": "LargeFileSharesState",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/LargeFileSharesState",
      "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
     },
     "privateEndpointConnections": {
      "$ref": "#/components/schemas/schemas:178",
      "description": "List of private endpoint connection associated with the specified storage account",
      "readOnly": true
     },
     "routingPreference": {
      "$ref": "#/components/schemas/schemas:148",
      "x-ms-client-name": "RoutingPreference",
      "description": "Maintains information about the network routing choice opted by the user for data transfer"
     },
     "blobRestoreStatus": {
      "$ref": "#/components/schemas/schemas:158",
      "x-ms-client-name": "BlobRestoreStatus",
      "description": "Blob restore status",
      "readOnly": true
     },
     "allowBlobPublicAccess": {
      "type": "boolean",
      "x-ms-client-name": "AllowBlobPublicAccess",
      "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property."
     },
     "minimumTlsVersion": {
      "x-ms-enum": {
       "name": "MinimumTlsVersion",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/MinimumTlsVersion",
      "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
     },
     "allowSharedKeyAccess": {
      "type": "boolean",
      "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
     },
     "isNfsV3Enabled": {
      "type": "boolean",
      "x-ms-client-name": "EnableNfsV3",
      "description": "NFS 3.0 protocol support enabled if set to true."
     },
     "allowCrossTenantReplication": {
      "type": "boolean",
      "description": "Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default."
     },
     "defaultToOAuthAuthentication": {
      "type": "boolean",
      "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property."
     },
     "publicNetworkAccess": {
      "$ref": "#/components/schemas/PublicNetworkAccess",
      "description": "Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account."
     },
     "immutableStorageWithVersioning": {
      "$ref": "#/components/schemas/schemas:150",
      "x-ms-client-name": "ImmutableStorageWithVersioning",
      "description": "The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default."
     },
     "allowedCopyScope": {
      "x-ms-enum": {
       "name": "AllowedCopyScope",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/AllowedCopyScope",
      "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet."
     },
     "storageAccountSkuConversionStatus": {
      "$ref": "#/components/schemas/schemas:154",
      "x-ms-client-name": "StorageAccountSkuConversionStatus",
      "description": "This property is readOnly and is set by server during asynchronous storage account sku conversion operations."
     },
     "dnsEndpointType": {
      "x-ms-enum": {
       "name": "DnsEndpointType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/DnsEndpointType",
      "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier."
     },
     "isSkuConversionBlocked": {
      "type": "boolean",
      "x-ms-client-name": "IsSkuConversionBlocked",
      "description": "This property will be set to true or false on an event of ongoing migration. Default value is null.",
      "readOnly": true
     },
     "accountMigrationInProgress": {
      "type": "boolean",
      "x-ms-client-name": "AccountMigrationInProgress",
      "description": "If customer initiated account migration is in progress, the value will be true else it will be null.",
      "readOnly": true
     }
    },
    "description": "Properties of the storage account."
   },
   "schemas:170": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-primaryLocation",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountProperties-primaryLocation"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the location of the primary data center for the storage account."
   },
   "schemas:172": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-lastGeoFailoverTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountProperties-lastGeoFailoverTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS."
   },
   "schemas:173": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-secondaryLocation",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountProperties-secondaryLocation"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS."
   },
   "schemas:175": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-creationTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountProperties-creationTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets the creation date and time of the storage account in UTC."
   },
   "schemas:178": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountProperties-privateEndpointConnections",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountProperties-privateEndpointConnections"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:630"
    },
    "description": "List of private endpoint connection associated with the specified storage account"
   },
   "schemas:182": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccount",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccount"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:162",
      "description": "Properties of the deleted account."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:411"
     }
    ],
    "description": "Deleted storage account"
   },
   "schemas:183": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccount",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccount"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:594",
      "readOnly": true,
      "description": "Gets the SKU."
     },
     "kind": {
      "x-ms-enum": {
       "name": "Kind",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/Kind",
      "description": "Gets the Kind.",
      "readOnly": true
     },
     "identity": {
      "$ref": "#/components/schemas/schemas:111",
      "description": "The identity of the resource."
     },
     "extendedLocation": {
      "$ref": "#/components/schemas/schemas:117",
      "description": "The extendedLocation of the resource."
     },
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:168",
      "description": "Properties of the storage account."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:407"
     }
    ],
    "description": "The storage account."
   },
   "schemas:185": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountKey",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountKey"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "keyName": {
      "$ref": "#/components/schemas/schemas:186",
      "description": "Name of the key.",
      "readOnly": true
     },
     "value": {
      "$ref": "#/components/schemas/schemas:187",
      "description": "Base 64-encoded value of the key.",
      "readOnly": true
     },
     "permissions": {
      "x-ms-enum": {
       "name": "KeyPermission",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/KeyPermission",
      "description": "Permissions for the key -- read-only or full permissions.",
      "readOnly": true
     },
     "creationTime": {
      "$ref": "#/components/schemas/schemas:189",
      "description": "Creation time of the key, in round trip date format.",
      "readOnly": true
     }
    },
    "description": "An access key for the storage account."
   },
   "schemas:186": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountKey-keyName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountKey-keyName"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Name of the key."
   },
   "schemas:187": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountKey-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountKey-value"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Base 64-encoded value of the key."
   },
   "schemas:189": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountKey-creationTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountKey-creationTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Creation time of the key, in round trip date format."
   },
   "schemas:190": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountListResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:191",
      "description": "Gets the list of storage accounts and their properties.",
      "readOnly": true
     },
     "nextLink": {
      "$ref": "#/components/schemas/schemas:192",
      "description": "Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.",
      "readOnly": true
     }
    },
    "description": "The response from the List Storage Accounts operation."
   },
   "schemas:191": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountListResult-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountListResult-value"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:183"
    },
    "description": "Gets the list of storage accounts and their properties."
   },
   "schemas:192": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountListResult-nextLink",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountListResult-nextLink"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.",
    "readOnly": true
   },
   "schemas:193": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountListResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:194",
      "description": "Gets the list of deleted accounts and their properties.",
      "readOnly": true
     },
     "nextLink": {
      "$ref": "#/components/schemas/schemas:195",
      "description": "Request URL that can be used to query next page of deleted accounts. Returned when total number of requested deleted accounts exceed maximum page size.",
      "readOnly": true
     }
    },
    "description": "The response from the List Deleted Accounts operation."
   },
   "schemas:194": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountListResult-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountListResult-value"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:182"
    },
    "description": "Gets the list of deleted accounts and their properties."
   },
   "schemas:195": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountListResult-nextLink",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DeletedAccountListResult-nextLink"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Request URL that can be used to query next page of deleted accounts. Returned when total number of requested deleted accounts exceed maximum page size.",
    "readOnly": true
   },
   "schemas:196": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountListKeysResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountListKeysResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "keys": {
      "$ref": "#/components/schemas/schemas:197",
      "description": "Gets the list of storage account keys and their properties for the specified storage account.",
      "readOnly": true
     }
    },
    "description": "The response from the ListKeys operation."
   },
   "schemas:197": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountListKeysResult-keys",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountListKeysResult-keys"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:185"
    },
    "description": "Gets the list of storage account keys and their properties for the specified storage account."
   },
   "schemas:198": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountRegenerateKeyParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountRegenerateKeyParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "keyName": {
      "$ref": "#/components/schemas/schemas:199",
      "description": "The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2."
     }
    },
    "description": "The parameters used to regenerate the storage account key.",
    "required": [
     "keyName"
    ]
   },
   "schemas:199": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountRegenerateKeyParameters-keyName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountRegenerateKeyParameters-keyName"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2."
   },
   "schemas:200": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountPropertiesUpdateParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountPropertiesUpdateParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "customDomain": {
      "$ref": "#/components/schemas/schemas:48",
      "description": "Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property."
     },
     "encryption": {
      "$ref": "#/components/schemas/schemas:69",
      "description": "Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled."
     },
     "sasPolicy": {
      "$ref": "#/components/schemas/schemas:50",
      "description": "SasPolicy assigned to the storage account."
     },
     "keyPolicy": {
      "$ref": "#/components/schemas/schemas:53",
      "description": "KeyPolicy assigned to the storage account."
     },
     "accessTier": {
      "x-ms-enum": {
       "name": "AccessTier",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/AccessTier",
      "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type."
     },
     "azureFilesIdentityBasedAuthentication": {
      "$ref": "#/components/schemas/schemas:93",
      "description": "Provides the identity based authentication settings for Azure Files."
     },
     "supportsHttpsTrafficOnly": {
      "type": "boolean",
      "x-ms-client-name": "EnableHttpsTrafficOnly",
      "description": "Allows https traffic only to storage service if sets to true."
     },
     "isSftpEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsSftpEnabled",
      "description": "Enables Secure File Transfer Protocol, if set to true"
     },
     "isLocalUserEnabled": {
      "type": "boolean",
      "x-ms-client-name": "IsLocalUserEnabled",
      "description": "Enables local users feature, if set to true"
     },
     "enableExtendedGroups": {
      "type": "boolean",
      "x-ms-client-name": "EnableExtendedGroups",
      "description": "Enables extended group support with local users feature, if set to true"
     },
     "networkAcls": {
      "description": "Network rule set",
      "x-ms-client-name": "NetworkRuleSet",
      "$ref": "#/components/schemas/schemas:87"
     },
     "largeFileSharesState": {
      "x-ms-enum": {
       "name": "LargeFileSharesState",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/LargeFileSharesState",
      "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."
     },
     "routingPreference": {
      "$ref": "#/components/schemas/schemas:148",
      "x-ms-client-name": "RoutingPreference",
      "description": "Maintains information about the network routing choice opted by the user for data transfer"
     },
     "allowBlobPublicAccess": {
      "type": "boolean",
      "x-ms-client-name": "AllowBlobPublicAccess",
      "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property."
     },
     "minimumTlsVersion": {
      "x-ms-enum": {
       "name": "MinimumTlsVersion",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/MinimumTlsVersion",
      "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."
     },
     "allowSharedKeyAccess": {
      "type": "boolean",
      "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."
     },
     "allowCrossTenantReplication": {
      "type": "boolean",
      "description": "Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default."
     },
     "defaultToOAuthAuthentication": {
      "type": "boolean",
      "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property."
     },
     "publicNetworkAccess": {
      "$ref": "#/components/schemas/PublicNetworkAccess",
      "description": "Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'."
     },
     "immutableStorageWithVersioning": {
      "$ref": "#/components/schemas/schemas:150",
      "x-ms-client-name": "ImmutableStorageWithVersioning",
      "description": "The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default."
     },
     "allowedCopyScope": {
      "x-ms-enum": {
       "name": "AllowedCopyScope",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/AllowedCopyScope",
      "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet."
     },
     "dnsEndpointType": {
      "x-ms-enum": {
       "name": "DnsEndpointType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/DnsEndpointType",
      "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier."
     }
    },
    "description": "The parameters used when updating a storage account."
   },
   "schemas:206": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountUpdateParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountUpdateParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:594",
      "description": "Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value."
     },
     "tags": {
      "$ref": "#/components/schemas/schemas:207",
      "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."
     },
     "identity": {
      "$ref": "#/components/schemas/schemas:111",
      "description": "The identity of the resource."
     },
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:200",
      "description": "The parameters used when updating a storage account."
     },
     "kind": {
      "x-ms-enum": {
       "name": "Kind",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/Kind",
      "description": "Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server."
     }
    },
    "description": "The parameters that can be provided when updating the storage account properties."
   },
   "schemas:207": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountUpdateParameters-tags",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountUpdateParameters-tags"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:208"
    },
    "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."
   },
   "schemas:208": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "components·12iy6m8·schemas·storageaccountupdateparameters·properties·tags·additionalproperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/components·12iy6m8·schemas·storageaccountupdateparameters·properties·tags·additionalproperties"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:210": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "timeToRestore": {
      "$ref": "#/components/schemas/schemas:211",
      "description": "Restore blob to the specified time."
     },
     "blobRanges": {
      "$ref": "#/components/schemas/schemas:212",
      "description": "Blob ranges to restore."
     }
    },
    "description": "Blob restore parameters",
    "required": [
     "timeToRestore",
     "blobRanges"
    ]
   },
   "schemas:211": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreParameters-timeToRestore",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreParameters-timeToRestore"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "format": "date-time",
    "description": "Restore blob to the specified time."
   },
   "schemas:212": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreParameters-blobRanges",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreParameters-blobRanges"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:213"
    },
    "description": "Blob ranges to restore."
   },
   "schemas:213": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreRange",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreRange"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "startRange": {
      "$ref": "#/components/schemas/schemas:214",
      "description": "Blob start range. This is inclusive. Empty means account start."
     },
     "endRange": {
      "$ref": "#/components/schemas/schemas:215",
      "description": "Blob end range. This is exclusive. Empty means account end."
     }
    },
    "description": "Blob range",
    "required": [
     "startRange",
     "endRange"
    ]
   },
   "schemas:214": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreRange-startRange",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreRange-startRange"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Blob start range. This is inclusive. Empty means account start."
   },
   "schemas:215": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreRange-endRange",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreRange-endRange"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Blob end range. This is exclusive. Empty means account end."
   },
   "schemas:216": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UsageName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/UsageName"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:217",
      "description": "Gets a string describing the resource name.",
      "readOnly": true
     },
     "localizedValue": {
      "$ref": "#/components/schemas/schemas:218",
      "description": "Gets a localized string describing the resource name.",
      "readOnly": true
     }
    },
    "description": "The usage names that can be used; currently limited to StorageAccount."
   },
   "schemas:217": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UsageName-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/UsageName-value"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets a string describing the resource name."
   },
   "schemas:218": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UsageName-localizedValue",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/UsageName-localizedValue"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets a localized string describing the resource name."
   },
   "schemas:219": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Usage",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Usage"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "unit": {
      "x-ms-enum": {
       "name": "UsageUnit",
       "modelAsString": false
      },
      "$ref": "#/components/schemas/UsageUnit",
      "description": "Gets the unit of measurement.",
      "readOnly": true
     },
     "currentValue": {
      "$ref": "#/components/schemas/schemas:221",
      "description": "Gets the current count of the allocated resources in the subscription.",
      "readOnly": true
     },
     "limit": {
      "$ref": "#/components/schemas/schemas:222",
      "description": "Gets the maximum count of the resources that can be allocated in the subscription.",
      "readOnly": true
     },
     "name": {
      "$ref": "#/components/schemas/schemas:216",
      "readOnly": true,
      "description": "Gets the name of the type of usage."
     }
    },
    "description": "Describes Storage Resource Usage."
   },
   "schemas:221": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Usage-currentValue",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Usage-currentValue"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "integer",
    "format": "int32",
    "description": "Gets the current count of the allocated resources in the subscription."
   },
   "schemas:222": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Usage-limit",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Usage-limit"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "integer",
    "format": "int32",
    "description": "Gets the maximum count of the resources that can be allocated in the subscription."
   },
   "schemas:223": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UsageListResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/UsageListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:224",
      "description": "Gets or sets the list of Storage Resource Usages."
     }
    },
    "description": "The response from the List Usages operation."
   },
   "schemas:224": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UsageListResult-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/UsageListResult-value"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:219"
    },
    "description": "Gets or sets the list of Storage Resource Usages."
   },
   "schemas:225": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountSasParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "signedServices": {
      "x-ms-enum": {
       "name": "Services",
       "modelAsString": true
      },
      "x-ms-client-name": "Services",
      "$ref": "#/components/schemas/Services",
      "description": "The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f)."
     },
     "signedResourceTypes": {
      "x-ms-enum": {
       "name": "SignedResourceTypes",
       "modelAsString": true
      },
      "x-ms-client-name": "ResourceTypes",
      "$ref": "#/components/schemas/SignedResourceTypes",
      "description": "The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files."
     },
     "signedPermission": {
      "x-ms-enum": {
       "name": "Permissions",
       "modelAsString": true
      },
      "x-ms-client-name": "Permissions",
      "$ref": "#/components/schemas/Permissions",
      "description": "The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p)."
     },
     "signedIp": {
      "x-ms-client-name": "IPAddressOrRange",
      "$ref": "#/components/schemas/schemas:229",
      "description": "An IP address or a range of IP addresses from which to accept requests."
     },
     "signedProtocol": {
      "x-ms-enum": {
       "name": "HttpProtocol",
       "modelAsString": false
      },
      "x-ms-client-name": "Protocols",
      "$ref": "#/components/schemas/HttpProtocol",
      "description": "The protocol permitted for a request made with the account SAS."
     },
     "signedStart": {
      "x-ms-client-name": "SharedAccessStartTime",
      "$ref": "#/components/schemas/schemas:231",
      "description": "The time at which the SAS becomes valid."
     },
     "signedExpiry": {
      "x-ms-client-name": "SharedAccessExpiryTime",
      "$ref": "#/components/schemas/schemas:232",
      "description": "The time at which the shared access signature becomes invalid."
     },
     "keyToSign": {
      "$ref": "#/components/schemas/schemas:233",
      "description": "The key to sign the account SAS token with."
     }
    },
    "description": "The parameters to list SAS credentials of a storage account.",
    "required": [
     "signedServices",
     "signedResourceTypes",
     "signedPermission",
     "signedExpiry"
    ]
   },
   "schemas:229": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountSasParameters-signedIp",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters-signedIp"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "An IP address or a range of IP addresses from which to accept requests."
   },
   "schemas:231": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountSasParameters-signedStart",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters-signedStart"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "format": "date-time",
    "description": "The time at which the SAS becomes valid."
   },
   "schemas:232": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountSasParameters-signedExpiry",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters-signedExpiry"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "format": "date-time",
    "description": "The time at which the shared access signature becomes invalid."
   },
   "schemas:233": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountSasParameters-keyToSign",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters-keyToSign"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The key to sign the account SAS token with."
   },
   "schemas:234": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListAccountSasResponse",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ListAccountSasResponse"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "accountSasToken": {
      "$ref": "#/components/schemas/schemas:235",
      "description": "List SAS credentials of storage account.",
      "readOnly": true
     }
    },
    "description": "The List SAS credentials operation response."
   },
   "schemas:235": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListAccountSasResponse-accountSasToken",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ListAccountSasResponse-accountSasToken"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "List SAS credentials of storage account."
   },
   "schemas:236": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "canonicalizedResource": {
      "$ref": "#/components/schemas/schemas:237",
      "description": "The canonical path to the signed resource."
     },
     "signedResource": {
      "x-ms-enum": {
       "name": "signedResource",
       "modelAsString": true
      },
      "x-ms-client-name": "Resource",
      "$ref": "#/components/schemas/signedResource",
      "description": "The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s)."
     },
     "signedPermission": {
      "x-ms-enum": {
       "name": "Permissions",
       "modelAsString": true
      },
      "x-ms-client-name": "Permissions",
      "$ref": "#/components/schemas/Permissions",
      "description": "The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p)."
     },
     "signedIp": {
      "x-ms-client-name": "IPAddressOrRange",
      "$ref": "#/components/schemas/schemas:240",
      "description": "An IP address or a range of IP addresses from which to accept requests."
     },
     "signedProtocol": {
      "x-ms-enum": {
       "name": "HttpProtocol",
       "modelAsString": false
      },
      "x-ms-client-name": "Protocols",
      "$ref": "#/components/schemas/HttpProtocol",
      "description": "The protocol permitted for a request made with the account SAS."
     },
     "signedStart": {
      "x-ms-client-name": "SharedAccessStartTime",
      "$ref": "#/components/schemas/schemas:242",
      "description": "The time at which the SAS becomes valid."
     },
     "signedExpiry": {
      "x-ms-client-name": "SharedAccessExpiryTime",
      "$ref": "#/components/schemas/schemas:243",
      "description": "The time at which the shared access signature becomes invalid."
     },
     "signedIdentifier": {
      "x-ms-client-name": "Identifier",
      "$ref": "#/components/schemas/schemas:244",
      "description": "A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table."
     },
     "startPk": {
      "x-ms-client-name": "PartitionKeyStart",
      "$ref": "#/components/schemas/schemas:245",
      "description": "The start of partition key."
     },
     "endPk": {
      "x-ms-client-name": "PartitionKeyEnd",
      "$ref": "#/components/schemas/schemas:246",
      "description": "The end of partition key."
     },
     "startRk": {
      "x-ms-client-name": "RowKeyStart",
      "$ref": "#/components/schemas/schemas:247",
      "description": "The start of row key."
     },
     "endRk": {
      "x-ms-client-name": "RowKeyEnd",
      "$ref": "#/components/schemas/schemas:248",
      "description": "The end of row key."
     },
     "keyToSign": {
      "$ref": "#/components/schemas/schemas:249",
      "description": "The key to sign the account SAS token with."
     },
     "rscc": {
      "x-ms-client-name": "CacheControl",
      "$ref": "#/components/schemas/schemas:250",
      "description": "The response header override for cache control."
     },
     "rscd": {
      "x-ms-client-name": "ContentDisposition",
      "$ref": "#/components/schemas/schemas:251",
      "description": "The response header override for content disposition."
     },
     "rsce": {
      "x-ms-client-name": "ContentEncoding",
      "$ref": "#/components/schemas/schemas:252",
      "description": "The response header override for content encoding."
     },
     "rscl": {
      "x-ms-client-name": "ContentLanguage",
      "$ref": "#/components/schemas/schemas:253",
      "description": "The response header override for content language."
     },
     "rsct": {
      "x-ms-client-name": "ContentType",
      "$ref": "#/components/schemas/schemas:254",
      "description": "The response header override for content type."
     }
    },
    "description": "The parameters to list service SAS credentials of a specific resource.",
    "required": [
     "canonicalizedResource"
    ]
   },
   "schemas:237": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-canonicalizedResource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-canonicalizedResource"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The canonical path to the signed resource."
   },
   "schemas:240": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-signedIp",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-signedIp"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "An IP address or a range of IP addresses from which to accept requests."
   },
   "schemas:242": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-signedStart",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-signedStart"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "format": "date-time",
    "description": "The time at which the SAS becomes valid."
   },
   "schemas:243": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-signedExpiry",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-signedExpiry"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "format": "date-time",
    "description": "The time at which the shared access signature becomes invalid."
   },
   "schemas:244": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-signedIdentifier",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-signedIdentifier"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "maxLength": 64,
    "description": "A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table."
   },
   "schemas:245": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-startPk",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-startPk"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The start of partition key."
   },
   "schemas:246": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-endPk",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-endPk"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The end of partition key."
   },
   "schemas:247": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-startRk",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-startRk"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The start of row key."
   },
   "schemas:248": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-endRk",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-endRk"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The end of row key."
   },
   "schemas:249": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-keyToSign",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-keyToSign"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The key to sign the account SAS token with."
   },
   "schemas:250": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rscc",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-rscc"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The response header override for cache control."
   },
   "schemas:251": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rscd",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-rscd"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The response header override for content disposition."
   },
   "schemas:252": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rsce",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-rsce"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The response header override for content encoding."
   },
   "schemas:253": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rscl",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-rscl"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The response header override for content language."
   },
   "schemas:254": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ServiceSasParameters-rsct",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-rsct"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The response header override for content type."
   },
   "schemas:255": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListServiceSasResponse",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ListServiceSasResponse"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "serviceSasToken": {
      "$ref": "#/components/schemas/schemas:256",
      "description": "List service SAS credentials of specific resource.",
      "readOnly": true
     }
    },
    "description": "The List service SAS credentials operation response."
   },
   "schemas:256": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListServiceSasResponse-serviceSasToken",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ListServiceSasResponse-serviceSasToken"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "List service SAS credentials of specific resource."
   },
   "schemas:257": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:258",
      "x-ms-client-flatten": true,
      "description": "Returns the Storage Account Data Policies Rules."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ],
    "description": "The Get Storage Account ManagementPolicies operation response."
   },
   "schemas:258": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "lastModifiedTime": {
      "$ref": "#/components/schemas/schemas:259",
      "description": "Returns the date and time the ManagementPolicies was last modified.",
      "readOnly": true
     },
     "policy": {
      "$ref": "#/components/schemas/schemas:260",
      "description": "The Storage Account ManagementPolicy, in JSON format. See more details in: https://learn.microsoft.com/azure/storage/blobs/lifecycle-management-overview."
     }
    },
    "description": "The Storage Account ManagementPolicy properties.",
    "required": [
     "policy"
    ]
   },
   "schemas:259": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyProperties-lastModifiedTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyProperties-lastModifiedTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Returns the date and time the ManagementPolicies was last modified."
   },
   "schemas:260": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicySchema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicySchema"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "rules": {
      "$ref": "#/components/schemas/schemas:261",
      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://learn.microsoft.com/azure/storage/blobs/lifecycle-management-overview."
     }
    },
    "description": "The Storage Account ManagementPolicies Rules. See more details in: https://learn.microsoft.com/azure/storage/blobs/lifecycle-management-overview.",
    "required": [
     "rules"
    ]
   },
   "schemas:261": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicySchema-rules",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicySchema-rules"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:262"
    },
    "description": "The Storage Account ManagementPolicies Rules. See more details in: https://learn.microsoft.com/azure/storage/blobs/lifecycle-management-overview."
   },
   "schemas:262": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyRule",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyRule"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "Rule is enabled if set to true."
     },
     "name": {
      "$ref": "#/components/schemas/schemas:263",
      "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
     },
     "type": {
      "x-ms-enum": {
       "name": "RuleType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/RuleType",
      "description": "The valid value is Lifecycle"
     },
     "definition": {
      "$ref": "#/components/schemas/schemas:265",
      "description": "An object that defines the Lifecycle rule."
     }
    },
    "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
    "required": [
     "name",
     "type",
     "definition"
    ]
   },
   "schemas:263": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyRule-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyRule-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
   },
   "schemas:265": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyDefinition",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyDefinition"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "actions": {
      "$ref": "#/components/schemas/schemas:276",
      "description": "An object that defines the action set."
     },
     "filters": {
      "$ref": "#/components/schemas/schemas:266",
      "description": "An object that defines the filter set."
     }
    },
    "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
    "required": [
     "actions"
    ]
   },
   "schemas:266": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyFilter"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "prefixMatch": {
      "$ref": "#/components/schemas/schemas:267",
      "description": "An array of strings for prefixes to be match."
     },
     "blobTypes": {
      "$ref": "#/components/schemas/schemas:269",
      "description": "An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob."
     },
     "blobIndexMatch": {
      "$ref": "#/components/schemas/schemas:271",
      "description": "An array of blob index tag based filters, there can be at most 10 tag filters"
     }
    },
    "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
    "required": [
     "blobTypes"
    ]
   },
   "schemas:267": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-prefixMatch",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyFilter-prefixMatch"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:268"
    },
    "description": "An array of strings for prefixes to be match."
   },
   "schemas:268": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-prefixMatchItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyFilter-prefixMatchItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:269": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-blobTypes",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyFilter-blobTypes"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:270"
    },
    "description": "An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob."
   },
   "schemas:270": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-blobTypesItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyFilter-blobTypesItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:271": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyFilter-blobIndexMatch",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyFilter-blobIndexMatch"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:272"
    },
    "description": "An array of blob index tag based filters, there can be at most 10 tag filters"
   },
   "schemas:272": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "TagFilter",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/TagFilter"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/schemas:273",
      "description": "This is the filter tag name, it can have 1 - 128 characters"
     },
     "op": {
      "$ref": "#/components/schemas/schemas:274",
      "description": "This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported"
     },
     "value": {
      "$ref": "#/components/schemas/schemas:275",
      "description": "This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters"
     }
    },
    "description": "Blob index tag based filtering for blob objects",
    "required": [
     "name",
     "op",
     "value"
    ]
   },
   "schemas:273": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "TagFilter-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/TagFilter-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "minLength": 1,
    "maxLength": 128,
    "description": "This is the filter tag name, it can have 1 - 128 characters"
   },
   "schemas:274": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "TagFilter-op",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/TagFilter-op"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported"
   },
   "schemas:275": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "TagFilter-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/TagFilter-value"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "minLength": 0,
    "maxLength": 256,
    "description": "This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters"
   },
   "schemas:276": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyAction",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyAction"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "baseBlob": {
      "$ref": "#/components/schemas/schemas:277",
      "description": "The management policy action for base blob"
     },
     "snapshot": {
      "$ref": "#/components/schemas/schemas:278",
      "description": "The management policy action for snapshot"
     },
     "version": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "The management policy action for version"
     }
    },
    "description": "Actions are applied to the filtered blobs when the execution condition is met."
   },
   "schemas:277": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyBaseBlob",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyBaseBlob"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "tierToCool": {
      "$ref": "#/components/schemas/schemas:280",
      "description": "The function to tier blobs to cool storage."
     },
     "tierToArchive": {
      "$ref": "#/components/schemas/schemas:280",
      "description": "The function to tier blobs to archive storage."
     },
     "tierToCold": {
      "$ref": "#/components/schemas/schemas:280",
      "description": "The function to tier blobs to cold storage."
     },
     "tierToHot": {
      "$ref": "#/components/schemas/schemas:280",
      "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts"
     },
     "delete": {
      "$ref": "#/components/schemas/schemas:280",
      "description": "The function to delete the blob"
     },
     "enableAutoTierToHotFromCool": {
      "type": "boolean",
      "description": "This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan."
     }
    },
    "description": "Management policy action for base blob."
   },
   "schemas:278": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicySnapShot",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicySnapShot"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "tierToCool": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to tier blob snapshot to cool storage."
     },
     "tierToArchive": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to tier blob snapshot to archive storage."
     },
     "tierToCold": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to tier blobs to cold storage."
     },
     "tierToHot": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts"
     },
     "delete": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to delete the blob snapshot"
     }
    },
    "description": "Management policy action for snapshot."
   },
   "schemas:279": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyVersion",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyVersion"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "tierToCool": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to tier blob version to cool storage."
     },
     "tierToArchive": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to tier blob version to archive storage."
     },
     "tierToCold": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to tier blobs to cold storage."
     },
     "tierToHot": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts"
     },
     "delete": {
      "$ref": "#/components/schemas/schemas:285",
      "description": "The function to delete the blob version"
     }
    },
    "description": "Management policy action for blob version."
   },
   "schemas:280": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DateAfterModification",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DateAfterModification"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "daysAfterModificationGreaterThan": {
      "$ref": "#/components/schemas/schemas:281",
      "description": "Value indicating the age in days after last modification"
     },
     "daysAfterLastAccessTimeGreaterThan": {
      "$ref": "#/components/schemas/schemas:282",
      "description": "Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy"
     },
     "daysAfterLastTierChangeGreaterThan": {
      "$ref": "#/components/schemas/schemas:283",
      "description": "Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied."
     },
     "daysAfterCreationGreaterThan": {
      "$ref": "#/components/schemas/schemas:284",
      "description": "Value indicating the age in days after blob creation."
     }
    },
    "description": "Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan."
   },
   "schemas:281": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DateAfterModification-daysAfterModificationGreaterThan",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DateAfterModification-daysAfterModificationGreaterThan"
     ],
     "x-ms-secondary-file": false
    },
    "type": "number",
    "multipleOf": 1,
    "minimum": 0,
    "description": "Value indicating the age in days after last modification"
   },
   "schemas:282": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DateAfterModification-daysAfterLastAccessTimeGreaterThan",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DateAfterModification-daysAfterLastAccessTimeGreaterThan"
     ],
     "x-ms-secondary-file": false
    },
    "type": "number",
    "multipleOf": 1,
    "minimum": 0,
    "description": "Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy"
   },
   "schemas:283": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DateAfterModification-daysAfterLastTierChangeGreaterThan",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DateAfterModification-daysAfterLastTierChangeGreaterThan"
     ],
     "x-ms-secondary-file": false
    },
    "type": "number",
    "multipleOf": 1,
    "minimum": 0,
    "description": "Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied."
   },
   "schemas:284": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DateAfterModification-daysAfterCreationGreaterThan",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DateAfterModification-daysAfterCreationGreaterThan"
     ],
     "x-ms-secondary-file": false
    },
    "type": "number",
    "multipleOf": 1,
    "minimum": 0,
    "description": "Value indicating the age in days after blob creation."
   },
   "schemas:285": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DateAfterCreation",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DateAfterCreation"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "daysAfterCreationGreaterThan": {
      "$ref": "#/components/schemas/schemas:286",
      "description": "Value indicating the age in days after creation"
     },
     "daysAfterLastTierChangeGreaterThan": {
      "$ref": "#/components/schemas/schemas:287",
      "description": "Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied."
     }
    },
    "description": "Object to define snapshot and version action conditions.",
    "required": [
     "daysAfterCreationGreaterThan"
    ]
   },
   "schemas:286": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DateAfterCreation-daysAfterCreationGreaterThan",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DateAfterCreation-daysAfterCreationGreaterThan"
     ],
     "x-ms-secondary-file": false
    },
    "type": "number",
    "multipleOf": 1,
    "minimum": 0,
    "description": "Value indicating the age in days after creation"
   },
   "schemas:287": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DateAfterCreation-daysAfterLastTierChangeGreaterThan",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/DateAfterCreation-daysAfterLastTierChangeGreaterThan"
     ],
     "x-ms-secondary-file": false
    },
    "type": "number",
    "multipleOf": 1,
    "minimum": 0,
    "description": "Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied."
   },
   "schemas:288": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScope",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScope"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:289",
      "x-ms-client-flatten": true,
      "x-ms-client-name": "EncryptionScopeProperties",
      "description": "Properties of the encryption scope."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ],
    "description": "The Encryption Scope resource."
   },
   "schemas:289": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "source": {
      "x-ms-enum": {
       "name": "EncryptionScopeSource",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/EncryptionScopeSource",
      "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault."
     },
     "state": {
      "x-ms-enum": {
       "name": "EncryptionScopeState",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/EncryptionScopeState",
      "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled."
     },
     "creationTime": {
      "$ref": "#/components/schemas/schemas:292",
      "description": "Gets the creation date and time of the encryption scope in UTC.",
      "readOnly": true
     },
     "lastModifiedTime": {
      "$ref": "#/components/schemas/schemas:293",
      "description": "Gets the last modification date and time of the encryption scope in UTC.",
      "readOnly": true
     },
     "keyVaultProperties": {
      "$ref": "#/components/schemas/schemas:294",
      "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'."
     },
     "requireInfrastructureEncryption": {
      "type": "boolean",
      "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."
     }
    },
    "description": "Properties of the encryption scope."
   },
   "schemas:292": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeProperties-creationTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeProperties-creationTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets the creation date and time of the encryption scope in UTC."
   },
   "schemas:293": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeProperties-lastModifiedTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeProperties-lastModifiedTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Gets the last modification date and time of the encryption scope in UTC."
   },
   "schemas:294": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeKeyVaultProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeKeyVaultProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "keyUri": {
      "$ref": "#/components/schemas/schemas:295",
      "description": "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope."
     },
     "currentVersionedKeyIdentifier": {
      "$ref": "#/components/schemas/schemas:296",
      "description": "The object identifier of the current versioned Key Vault Key in use.",
      "readOnly": true
     },
     "lastKeyRotationTimestamp": {
      "$ref": "#/components/schemas/schemas:297",
      "description": "Timestamp of last rotation of the Key Vault Key.",
      "readOnly": true
     }
    },
    "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'."
   },
   "schemas:295": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeKeyVaultProperties-keyUri",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeKeyVaultProperties-keyUri"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope."
   },
   "schemas:296": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeKeyVaultProperties-currentVersionedKeyIdentifier",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeKeyVaultProperties-currentVersionedKeyIdentifier"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "readOnly": true,
    "description": "The object identifier of the current versioned Key Vault Key in use."
   },
   "schemas:297": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeKeyVaultProperties-lastKeyRotationTimestamp",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeKeyVaultProperties-lastKeyRotationTimestamp"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "readOnly": true,
    "format": "date-time",
    "description": "Timestamp of last rotation of the Key Vault Key."
   },
   "schemas:298": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeListResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:299",
      "description": "List of encryption scopes requested.",
      "readOnly": true
     },
     "nextLink": {
      "$ref": "#/components/schemas/schemas:300",
      "description": "Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size.",
      "readOnly": true
     }
    },
    "description": "List of encryption scopes requested, and if paging is required, a URL to the next page of encryption scopes."
   },
   "schemas:299": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeListResult-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeListResult-value"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:288"
    },
    "description": "List of encryption scopes requested.",
    "readOnly": true
   },
   "schemas:300": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeListResult-nextLink",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeListResult-nextLink"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size.",
    "readOnly": true
   },
   "schemas:301": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicies",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicies"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:302",
      "description": "The replication policy between two storage accounts."
     }
    },
    "description": "List storage account object replication policies."
   },
   "schemas:302": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicies-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicies-value"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:303"
    },
    "description": "The replication policy between two storage accounts."
   },
   "schemas:303": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:304",
      "x-ms-client-flatten": true,
      "description": "Returns the Storage Account Object Replication Policy."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ],
    "description": "The replication policy between two storage accounts. Multiple rules can be defined in one policy."
   },
   "schemas:304": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "policyId": {
      "$ref": "#/components/schemas/schemas:305",
      "description": "A unique id for object replication policy.",
      "readOnly": true
     },
     "enabledTime": {
      "$ref": "#/components/schemas/schemas:306",
      "description": "Indicates when the policy is enabled on the source account.",
      "readOnly": true
     },
     "sourceAccount": {
      "$ref": "#/components/schemas/schemas:307",
      "description": "Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false."
     },
     "destinationAccount": {
      "$ref": "#/components/schemas/schemas:308",
      "description": "Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false."
     },
     "rules": {
      "$ref": "#/components/schemas/schemas:309",
      "description": "The storage account object replication rules."
     },
     "metrics": {
      "$ref": "#/components/schemas/schemas:310",
      "description": "Optional. The object replication policy metrics feature options."
     }
    },
    "description": "The Storage Account ObjectReplicationPolicy properties.",
    "required": [
     "sourceAccount",
     "destinationAccount"
    ]
   },
   "schemas:305": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyProperties-policyId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyProperties-policyId"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "A unique id for object replication policy."
   },
   "schemas:306": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyProperties-enabledTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyProperties-enabledTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Indicates when the policy is enabled on the source account."
   },
   "schemas:307": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyProperties-sourceAccount",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyProperties-sourceAccount"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false."
   },
   "schemas:308": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyProperties-destinationAccount",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyProperties-destinationAccount"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false."
   },
   "schemas:309": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyProperties-rules",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyProperties-rules"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:311"
    },
    "description": "The storage account object replication rules."
   },
   "schemas:310": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyProperties-metrics",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyProperties-metrics"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "Indicates whether object replication metrics feature is enabled for the policy."
     }
    },
    "description": "Optional. The object replication policy metrics feature options."
   },
   "schemas:311": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyRule",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyRule"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "ruleId": {
      "$ref": "#/components/schemas/schemas:312",
      "description": "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account."
     },
     "sourceContainer": {
      "$ref": "#/components/schemas/schemas:313",
      "description": "Required. Source container name."
     },
     "destinationContainer": {
      "$ref": "#/components/schemas/schemas:314",
      "description": "Required. Destination container name."
     },
     "filters": {
      "$ref": "#/components/schemas/schemas:315",
      "description": "Optional. An object that defines the filter set."
     }
    },
    "description": "The replication policy rule between two containers.",
    "required": [
     "sourceContainer",
     "destinationContainer"
    ]
   },
   "schemas:312": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyRule-ruleId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyRule-ruleId"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account."
   },
   "schemas:313": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyRule-sourceContainer",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyRule-sourceContainer"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Required. Source container name."
   },
   "schemas:314": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyRule-destinationContainer",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyRule-destinationContainer"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Required. Destination container name."
   },
   "schemas:315": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyFilter",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyFilter"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "prefixMatch": {
      "$ref": "#/components/schemas/schemas:316",
      "description": "Optional. Filters the results to replicate only blobs whose names begin with the specified prefix."
     },
     "minCreationTime": {
      "$ref": "#/components/schemas/schemas:318",
      "description": "Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z"
     }
    },
    "description": "Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters."
   },
   "schemas:316": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyFilter-prefixMatch",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyFilter-prefixMatch"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:317"
    },
    "description": "Optional. Filters the results to replicate only blobs whose names begin with the specified prefix."
   },
   "schemas:317": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyFilter-prefixMatchItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyFilter-prefixMatchItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:318": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyFilter-minCreationTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ObjectReplicationPolicyFilter-minCreationTime"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z"
   },
   "schemas:319": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUsers",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUsers"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:320",
      "description": "The list of local users associated with the storage account."
     },
     "nextLink": {
      "$ref": "#/components/schemas/schemas:321",
      "description": "Request URL that can be used to query next page of local users. Returned when total number of requested local users exceeds the maximum page size.",
      "readOnly": true
     }
    },
    "description": "List of local users requested, and if paging is required, a URL to the next page of local users."
   },
   "schemas:320": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUsers-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUsers-value"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:322"
    },
    "description": "The list of local users associated with the storage account."
   },
   "schemas:321": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUsers-nextLink",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUsers-nextLink"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Request URL that can be used to query next page of local users. Returned when total number of requested local users exceeds the maximum page size.",
    "readOnly": true
   },
   "schemas:322": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUser",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUser"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:323",
      "x-ms-client-flatten": true,
      "description": "Storage account local user properties."
     },
     "systemData": {
      "$ref": "#/components/schemas/schemas:745"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ],
    "description": "The local user associated with the storage accounts."
   },
   "schemas:323": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserProperties"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "permissionScopes": {
      "$ref": "#/components/schemas/schemas:324",
      "description": "The permission scopes of the local user."
     },
     "homeDirectory": {
      "$ref": "#/components/schemas/schemas:325",
      "description": "Optional, local user home directory."
     },
     "sshAuthorizedKeys": {
      "$ref": "#/components/schemas/schemas:336"
     },
     "sid": {
      "$ref": "#/components/schemas/schemas:326",
      "description": "A unique Security Identifier that is generated by the server.",
      "readOnly": true
     },
     "hasSharedKey": {
      "type": "boolean",
      "description": "Indicates whether shared key exists. Set it to false to remove existing shared key."
     },
     "hasSshKey": {
      "type": "boolean",
      "description": "Indicates whether ssh key exists. Set it to false to remove existing SSH key."
     },
     "hasSshPassword": {
      "type": "boolean",
      "description": "Indicates whether ssh password exists. Set it to false to remove existing SSH password."
     },
     "userId": {
      "$ref": "#/components/schemas/schemas:327",
      "description": "A unique Identifier that is generated by the server.",
      "readOnly": true
     },
     "groupId": {
      "$ref": "#/components/schemas/schemas:328",
      "description": "An identifier for associating a group of users."
     },
     "allowAclAuthorization": {
      "type": "boolean",
      "description": "Indicates whether ACL authorization is allowed for this user. Set it to false to disallow using ACL authorization."
     },
     "extendedGroups": {
      "type": "array",
      "items": {
       "type": "integer",
       "format": "int32"
      },
      "description": "Supplementary group membership. Only applicable for local users enabled for NFSv3 access."
     },
     "isNFSv3Enabled": {
      "type": "boolean",
      "description": "Indicates if the local user is enabled for access with NFSv3 protocol."
     }
    },
    "description": "The Storage Account Local User properties."
   },
   "schemas:324": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserProperties-permissionScopes",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserProperties-permissionScopes"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:332"
    },
    "description": "The permission scopes of the local user."
   },
   "schemas:325": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserProperties-homeDirectory",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserProperties-homeDirectory"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Optional, local user home directory."
   },
   "schemas:326": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserProperties-sid",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserProperties-sid"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "A unique Security Identifier that is generated by the server."
   },
   "schemas:327": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserProperties-userId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserProperties-userId"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "integer",
    "format": "int32",
    "description": "A unique Identifier that is generated by the server."
   },
   "schemas:328": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserProperties-groupId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserProperties-groupId"
     ],
     "x-ms-secondary-file": false
    },
    "type": "integer",
    "format": "int32",
    "description": "An identifier for associating a group of users."
   },
   "schemas:329": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserKeys",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserKeys"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "sshAuthorizedKeys": {
      "$ref": "#/components/schemas/schemas:336"
     },
     "sharedKey": {
      "x-ms-secret": true,
      "$ref": "#/components/schemas/schemas:340"
     }
    },
    "description": "The Storage Account Local User keys."
   },
   "schemas:330": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserRegeneratePasswordResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserRegeneratePasswordResult"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "sshPassword": {
      "x-ms-secret": true,
      "$ref": "#/components/schemas/schemas:331",
      "description": "Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user.",
      "readOnly": true
     }
    },
    "description": "The secrets of Storage Account Local User."
   },
   "schemas:331": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LocalUserRegeneratePasswordResult-sshPassword",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/LocalUserRegeneratePasswordResult-sshPassword"
     ],
     "x-ms-secondary-file": false
    },
    "x-ms-secret": true,
    "readOnly": true,
    "type": "string",
    "description": "Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user."
   },
   "schemas:332": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "PermissionScope",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/PermissionScope"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "permissions": {
      "$ref": "#/components/schemas/schemas:333",
      "description": "The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), Create (c), Modify Ownership (o), and Modify Permissions (p)."
     },
     "service": {
      "$ref": "#/components/schemas/schemas:334",
      "description": "The service used by the local user, e.g. blob, file."
     },
     "resourceName": {
      "$ref": "#/components/schemas/schemas:335",
      "description": "The name of resource, normally the container name or the file share name, used by the local user."
     }
    },
    "required": [
     "permissions",
     "service",
     "resourceName"
    ]
   },
   "schemas:333": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "PermissionScope-permissions",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/PermissionScope-permissions"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), Create (c), Modify Ownership (o), and Modify Permissions (p)."
   },
   "schemas:334": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "PermissionScope-service",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/PermissionScope-service"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The service used by the local user, e.g. blob, file."
   },
   "schemas:335": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "PermissionScope-resourceName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/PermissionScope-resourceName"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The name of resource, normally the container name or the file share name, used by the local user."
   },
   "schemas:336": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SshAuthorizedKeys",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SshAuthorizedKeys"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:337"
    },
    "description": "Optional, local user ssh authorized keys for SFTP."
   },
   "schemas:337": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SshPublicKey",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SshPublicKey"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "description": {
      "$ref": "#/components/schemas/schemas:338",
      "description": "Optional. It is used to store the function/usage of the key"
     },
     "key": {
      "$ref": "#/components/schemas/schemas:339",
      "description": "Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB"
     }
    }
   },
   "schemas:338": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SshPublicKey-description",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SshPublicKey-description"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Optional. It is used to store the function/usage of the key"
   },
   "schemas:339": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SshPublicKey-key",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SshPublicKey-key"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB"
   },
   "schemas:340": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SharedKey",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SharedKey"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Auto generated by the server for SMB authentication."
   },
   "schemas:341": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListBlobInventoryPolicy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ListBlobInventoryPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:342",
      "description": "List of blob inventory policies.",
      "readOnly": true
     }
    },
    "description": "List of blob inventory policies returned."
   },
   "schemas:342": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListBlobInventoryPolicy-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ListBlobInventoryPolicy-value"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:343"
    },
    "description": "List of blob inventory policies.",
    "readOnly": true
   },
   "schemas:343": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:344",
      "x-ms-client-flatten": true,
      "description": "Returns the storage account blob inventory policy rules."
     },
     "systemData": {
      "$ref": "#/components/schemas/schemas:745"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ],
    "description": "The storage account blob inventory policy."
   },
   "schemas:344": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "lastModifiedTime": {
      "$ref": "#/components/schemas/schemas:345",
      "description": "Returns the last modified date and time of the blob inventory policy.",
      "readOnly": true
     },
     "policy": {
      "$ref": "#/components/schemas/schemas:346",
      "description": "The storage account blob inventory policy object. It is composed of policy rules."
     }
    },
    "description": "The storage account blob inventory policy properties.",
    "required": [
     "policy"
    ]
   },
   "schemas:345": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyProperties-lastModifiedTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyProperties-lastModifiedTime"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "format": "date-time",
    "description": "Returns the last modified date and time of the blob inventory policy."
   },
   "schemas:346": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicySchema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicySchema"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "Policy is enabled if set to true."
     },
     "destination": {
      "$ref": "#/components/schemas/schemas:347",
      "description": "Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'",
      "readOnly": true
     },
     "type": {
      "x-ms-enum": {
       "name": "InventoryRuleType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/InventoryRuleType",
      "description": "The valid value is Inventory"
     },
     "rules": {
      "$ref": "#/components/schemas/schemas:349",
      "description": "The storage account blob inventory policy rules. The rule is applied when it is enabled."
     }
    },
    "description": "The storage account blob inventory policy rules.",
    "required": [
     "enabled",
     "type",
     "rules"
    ]
   },
   "schemas:347": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicySchema-destination",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicySchema-destination"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'"
   },
   "schemas:349": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicySchema-rules",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicySchema-rules"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:350"
    },
    "description": "The storage account blob inventory policy rules. The rule is applied when it is enabled."
   },
   "schemas:350": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyRule",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyRule"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "enabled": {
      "type": "boolean",
      "description": "Rule is enabled when set to true."
     },
     "name": {
      "$ref": "#/components/schemas/schemas:351",
      "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
     },
     "destination": {
      "$ref": "#/components/schemas/schemas:352",
      "description": "Container name where blob inventory files are stored. Must be pre-created."
     },
     "definition": {
      "$ref": "#/components/schemas/schemas:353",
      "description": "An object that defines the blob inventory policy rule."
     }
    },
    "description": "An object that wraps the blob inventory rule. Each rule is uniquely defined by name.",
    "required": [
     "name",
     "enabled",
     "destination",
     "definition"
    ]
   },
   "schemas:351": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyRule-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyRule-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."
   },
   "schemas:352": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyRule-destination",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyRule-destination"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Container name where blob inventory files are stored. Must be pre-created."
   },
   "schemas:353": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyDefinition",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyDefinition"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "filters": {
      "$ref": "#/components/schemas/schemas:359",
      "description": "An object that defines the filter set."
     },
     "format": {
      "x-ms-enum": {
       "name": "format",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/format",
      "description": "This is a required field, it specifies the format for the inventory files."
     },
     "schedule": {
      "x-ms-enum": {
       "name": "schedule",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/schedule",
      "description": "This is a required field. This field is used to schedule an inventory formation."
     },
     "objectType": {
      "x-ms-enum": {
       "name": "objectType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/objectType",
      "description": "This is a required field. This field specifies the scope of the inventory created either at the blob or container level."
     },
     "schemaFields": {
      "$ref": "#/components/schemas/schemas:357",
      "description": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts."
     }
    },
    "description": "An object that defines the blob inventory rule.",
    "required": [
     "format",
     "schedule",
     "objectType",
     "schemaFields"
    ]
   },
   "schemas:357": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyDefinition-schemaFields",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyDefinition-schemaFields"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:358"
    },
    "description": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts."
   },
   "schemas:358": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyDefinition-schemaFieldsItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyDefinition-schemaFieldsItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:359": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyFilter",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyFilter"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "prefixMatch": {
      "$ref": "#/components/schemas/schemas:360",
      "description": "An array of strings with maximum 10 blob prefixes to be included in the inventory."
     },
     "excludePrefix": {
      "$ref": "#/components/schemas/schemas:362",
      "description": "An array of strings with maximum 10 blob prefixes to be excluded from the inventory."
     },
     "blobTypes": {
      "$ref": "#/components/schemas/schemas:364",
      "description": "An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'."
     },
     "includeBlobVersions": {
      "type": "boolean",
      "description": "Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded."
     },
     "includeSnapshots": {
      "type": "boolean",
      "description": "Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded."
     },
     "includeDeleted": {
      "type": "boolean",
      "description": "For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded."
     },
     "creationTime": {
      "$ref": "#/components/schemas/schemas:366",
      "description": "This property is used to filter objects based on the object creation time"
     }
    },
    "description": "An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional."
   },
   "schemas:360": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyFilter-prefixMatch",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyFilter-prefixMatch"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:361"
    },
    "description": "An array of strings with maximum 10 blob prefixes to be included in the inventory."
   },
   "schemas:361": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyFilter-prefixMatchItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyFilter-prefixMatchItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:362": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyFilter-excludePrefix",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyFilter-excludePrefix"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:363"
    },
    "description": "An array of strings with maximum 10 blob prefixes to be excluded from the inventory."
   },
   "schemas:363": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyFilter-excludePrefixItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyFilter-excludePrefixItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:364": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyFilter-blobTypes",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyFilter-blobTypes"
     ],
     "x-ms-secondary-file": false
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:365"
    },
    "description": "An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'."
   },
   "schemas:365": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyFilter-blobTypesItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyFilter-blobTypesItem"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:366": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryCreationTime",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryCreationTime"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "lastNDays": {
      "$ref": "#/components/schemas/schemas:367",
      "description": "When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to 36500."
     }
    },
    "description": "This property defines the creation time based filtering condition. Blob Inventory schema parameter 'Creation-Time' is mandatory with this filter."
   },
   "schemas:367": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryCreationTime-lastNDays",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryCreationTime-lastNDays"
     ],
     "x-ms-secondary-file": false
    },
    "type": "integer",
    "minimum": 1,
    "maximum": 36500,
    "format": "int32",
    "description": "When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to 36500."
   },
   "schemas:368": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMigration",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMigration"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemas:369",
      "description": "Migration Resource Id",
      "readOnly": true
     },
     "name": {
      "$ref": "#/components/schemas/schemas:370",
      "description": "current value is 'default' for customer initiated migration"
     },
     "type": {
      "$ref": "#/components/schemas/schemas:371",
      "description": "SrpAccountMigrationType in ARM contract which is 'accountMigrations'"
     },
     "properties": {
      "x-ms-client-flatten": true,
      "x-ms-client-name": "StorageAccountMigrationDetails",
      "$ref": "#/components/schemas/schemas:372",
      "description": "The properties of a storage account’s ongoing or enqueued migration."
     }
    },
    "description": "The parameters or status associated with an ongoing or enqueued storage account migration in order to update its current SKU or region.",
    "required": [
     "properties"
    ]
   },
   "schemas:369": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMigration-id",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMigration-id"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "readOnly": true,
    "description": "Migration Resource Id"
   },
   "schemas:370": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMigration-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMigration-name"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "current value is 'default' for customer initiated migration"
   },
   "schemas:371": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMigration-type",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMigration-type"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "SrpAccountMigrationType in ARM contract which is 'accountMigrations'"
   },
   "schemas:372": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMigration-properties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMigration-properties"
     ],
     "x-ms-secondary-file": false
    },
    "type": "object",
    "properties": {
     "targetSkuName": {
      "$ref": "#/components/schemas/SkuName",
      "description": "Target sku name for the account"
     },
     "migrationStatus": {
      "x-ms-enum": {
       "name": "migrationStatus",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/migrationStatus",
      "description": "Current status of migration",
      "readOnly": true
     },
     "migrationFailedReason": {
      "$ref": "#/components/schemas/schemas:374",
      "description": "Error code for migration failure",
      "readOnly": true
     },
     "migrationFailedDetailedReason": {
      "$ref": "#/components/schemas/schemas:375",
      "description": "Reason for migration failure",
      "readOnly": true
     }
    },
    "x-ms-client-flatten": true,
    "description": "The properties of a storage account’s ongoing or enqueued migration.",
    "required": [
     "targetSkuName"
    ]
   },
   "schemas:374": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMigration-properties-migrationFailedReason",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMigration-properties-migrationFailedReason"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Error code for migration failure"
   },
   "schemas:375": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountMigration-properties-migrationFailedDetailedReason",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMigration-properties-migrationFailedDetailedReason"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Reason for migration failure"
   },
   "schemas:376": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ErrorResponseBody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ErrorResponseBody"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "code": {
      "$ref": "#/components/schemas/schemas:377",
      "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
     },
     "message": {
      "$ref": "#/components/schemas/schemas:378",
      "description": "A message describing the error, intended to be suitable for display in a user interface."
     }
    },
    "description": "Error response body contract."
   },
   "schemas:377": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ErrorResponseBody-code",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ErrorResponseBody-code"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
   },
   "schemas:378": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ErrorResponseBody-message",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ErrorResponseBody-message"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "A message describing the error, intended to be suitable for display in a user interface."
   },
   "schemas:379": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ErrorResponse",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ErrorResponse"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "error": {
      "$ref": "#/components/schemas/schemas:376",
      "description": "Azure Storage Resource Provider error response body."
     }
    },
    "description": "An error response from the storage resource provider."
   },
   "schemas:381": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "components·1k5k8s9·parameters·resourcegroupname·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/components·1k5k8s9·parameters·resourcegroupname·schema"
     ],
     "x-ms-secondary-file": false
    },
    "pattern": "^[-\\w\\._\\(\\)]+$",
    "minLength": 1,
    "maxLength": 90,
    "type": "string"
   },
   "schemas:382": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "components·1a563bt·parameters·storageaccountname·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/components·1a563bt·parameters·storageaccountname·schema"
     ],
     "x-ms-secondary-file": false
    },
    "pattern": "^[a-z0-9]+$",
    "maxLength": 24,
    "minLength": 3,
    "type": "string"
   },
   "schemas:383": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "components·tqvg5j·parameters·deletedaccountname·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/components·tqvg5j·parameters·deletedaccountname·schema"
     ],
     "x-ms-secondary-file": false
    },
    "maxLength": 24,
    "minLength": 3,
    "type": "string"
   },
   "schemas:384": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "components·7b5pue·parameters·encryptionscopename·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/components·7b5pue·parameters·encryptionscopename·schema"
     ],
     "x-ms-secondary-file": false
    },
    "maxLength": 63,
    "minLength": 3,
    "type": "string"
   },
   "schemas:385": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "components·l0yecm·parameters·objectreplicationpolicyid·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/components·l0yecm·parameters·objectreplicationpolicyid·schema"
     ],
     "x-ms-secondary-file": false
    },
    "minLength": 1,
    "type": "string"
   },
   "schemas:386": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "components·1dnt0s9·parameters·username·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/components·1dnt0s9·parameters·username·schema"
     ],
     "x-ms-secondary-file": false
    },
    "minLength": 3,
    "maxLength": 64,
    "type": "string"
   },
   "schemas:388": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·4ko1ff·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-deletedaccounts-deletedaccountname·get·parameters·1·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·4ko1ff·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-deletedaccounts-deletedaccountname·get·parameters·1·schema"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:390": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1dierdw·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·1dierdw·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2·schema"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:392": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1q0nik5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·parameters·4·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·1q0nik5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·parameters·4·schema"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:393": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·kwm6a1·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·202·headers·location·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·kwm6a1·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·202·headers·location·schema"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:394": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·192jc6u·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·192jc6u·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1·schema"
     ],
     "x-ms-secondary-file": false
    },
    "maxLength": 24,
    "minLength": 3,
    "type": "string"
   },
   "schemas:395": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·19vikkf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·4·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·19vikkf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·4·schema"
     ],
     "x-ms-secondary-file": false
    },
    "minimum": 1,
    "maximum": 5000,
    "format": "int32",
    "type": "integer"
   },
   "schemas:396": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·14w1716·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·5·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·14w1716·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·5·schema"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:398": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·i0799d·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·4·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·i0799d·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·4·schema"
     ],
     "x-ms-secondary-file": false
    },
    "minimum": 1,
    "maximum": 5000,
    "format": "int32",
    "type": "integer"
   },
   "schemas:399": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1xwpvrk·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·5·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·1xwpvrk·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·5·schema"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string"
   },
   "schemas:401": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "Resource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/Resource"
     ],
     "x-ms-secondary-file": true
    },
    "title": "Resource",
    "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
    "type": "object",
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemas:402",
      "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
      "readOnly": true
     },
     "name": {
      "$ref": "#/components/schemas/schemas:403",
      "description": "The name of the resource",
      "readOnly": true
     },
     "type": {
      "$ref": "#/components/schemas/schemas:404",
      "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
      "readOnly": true
     }
    },
    "x-ms-azure-resource": true
   },
   "schemas:402": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "Resource-id",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/Resource-id"
     ],
     "x-ms-secondary-file": true
    },
    "readOnly": true,
    "type": "string",
    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   },
   "schemas:403": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "Resource-name",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/Resource-name"
     ],
     "x-ms-secondary-file": true
    },
    "readOnly": true,
    "type": "string",
    "description": "The name of the resource"
   },
   "schemas:404": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "Resource-type",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/Resource-type"
     ],
     "x-ms-secondary-file": true
    },
    "readOnly": true,
    "type": "string",
    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
   },
   "schemas:407": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "TrackedResource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/TrackedResource"
     ],
     "x-ms-secondary-file": true
    },
    "title": "Tracked Resource",
    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
    "type": "object",
    "properties": {
     "tags": {
      "x-ms-mutability": [
       "read",
       "create",
       "update"
      ],
      "$ref": "#/components/schemas/schemas:408",
      "description": "Resource tags."
     },
     "location": {
      "x-ms-mutability": [
       "read",
       "create"
      ],
      "$ref": "#/components/schemas/schemas:410",
      "description": "The geo-location where the resource lives"
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ],
    "required": [
     "location"
    ]
   },
   "schemas:408": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "TrackedResource-tags",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/TrackedResource-tags"
     ],
     "x-ms-secondary-file": true
    },
    "type": "object",
    "additionalProperties": {
     "$ref": "#/components/schemas/schemas:409"
    },
    "x-ms-mutability": [
     "read",
     "create",
     "update"
    ],
    "description": "Resource tags."
   },
   "schemas:409": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "components·gjm290·schemas·trackedresource·properties·tags·additionalproperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/components·gjm290·schemas·trackedresource·properties·tags·additionalproperties"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string"
   },
   "schemas:410": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "TrackedResource-location",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/TrackedResource-location"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "x-ms-mutability": [
     "read",
     "create"
    ],
    "description": "The geo-location where the resource lives"
   },
   "schemas:411": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "ProxyResource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/ProxyResource"
     ],
     "x-ms-secondary-file": true
    },
    "title": "Proxy Resource",
    "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ]
   },
   "schemas:479": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "components·gsdxl2·parameters·subscriptionidparameter·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/components·gsdxl2·parameters·subscriptionidparameter·schema"
     ],
     "x-ms-secondary-file": true
    },
    "minLength": 1,
    "type": "string"
   },
   "schemas:480": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "components·18mzsjh·parameters·apiversionparameter·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/schemas/components·18mzsjh·parameters·apiversionparameter·schema"
     ],
     "x-ms-secondary-file": true
    },
    "minLength": 1,
    "type": "string"
   },
   "schemas:490": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorAdditionalInfo",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorAdditionalInfo"
     ],
     "x-ms-secondary-file": true
    },
    "type": "object",
    "description": "The resource management error additional info.",
    "properties": {
     "type": {
      "$ref": "#/components/schemas/schemas:491",
      "description": "The additional info type.",
      "readOnly": true
     },
     "info": {
      "$ref": "#/components/schemas/schemas:492",
      "description": "The additional info.",
      "readOnly": true
     }
    }
   },
   "schemas:491": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorAdditionalInfo-type",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorAdditionalInfo-type"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The additional info type.",
    "readOnly": true
   },
   "schemas:492": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorAdditionalInfo-info",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorAdditionalInfo-info"
     ],
     "x-ms-secondary-file": true
    },
    "type": "object",
    "description": "The additional info.",
    "readOnly": true
   },
   "schemas:493": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorDetail",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorDetail"
     ],
     "x-ms-secondary-file": true
    },
    "type": "object",
    "description": "The error detail.",
    "properties": {
     "code": {
      "$ref": "#/components/schemas/schemas:494",
      "description": "The error code.",
      "readOnly": true
     },
     "message": {
      "$ref": "#/components/schemas/schemas:495",
      "description": "The error message.",
      "readOnly": true
     },
     "target": {
      "$ref": "#/components/schemas/schemas:496",
      "description": "The error target.",
      "readOnly": true
     },
     "details": {
      "x-ms-identifiers": [
       "message",
       "target"
      ],
      "$ref": "#/components/schemas/schemas:497",
      "description": "The error details.",
      "readOnly": true
     },
     "additionalInfo": {
      "x-ms-identifiers": [],
      "$ref": "#/components/schemas/schemas:498",
      "description": "The error additional info.",
      "readOnly": true
     }
    }
   },
   "schemas:494": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorDetail-code",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorDetail-code"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The error code.",
    "readOnly": true
   },
   "schemas:495": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorDetail-message",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorDetail-message"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The error message.",
    "readOnly": true
   },
   "schemas:496": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorDetail-target",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorDetail-target"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The error target.",
    "readOnly": true
   },
   "schemas:497": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorDetail-details",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorDetail-details"
     ],
     "x-ms-secondary-file": true
    },
    "type": "array",
    "description": "The error details.",
    "items": {
     "$ref": "#/components/schemas/schemas:493"
    },
    "readOnly": true,
    "x-ms-identifiers": [
     "message",
     "target"
    ]
   },
   "schemas:498": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorDetail-additionalInfo",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorDetail-additionalInfo"
     ],
     "x-ms-secondary-file": true
    },
    "type": "array",
    "description": "The error additional info.",
    "items": {
     "$ref": "#/components/schemas/schemas:490"
    },
    "readOnly": true,
    "x-ms-identifiers": []
   },
   "schemas:499": {
    "x-ms-metadata": {
     "apiVersions": [
      "5.0"
     ],
     "filename": [
      "mem:///260?oai3.shaken.json"
     ],
     "name": "ErrorResponse",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v5/types.json#/components/schemas/ErrorResponse"
     ],
     "x-ms-secondary-file": true
    },
    "type": "object",
    "title": "Error response",
    "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
    "properties": {
     "error": {
      "$ref": "#/components/schemas/schemas:493",
      "description": "The error object."
     }
    }
   },
   "schemas:594": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "Sku",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/Sku"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "name": {
      "$ref": "#/components/schemas/SkuName"
     },
     "tier": {
      "$ref": "#/components/schemas/SkuTier"
     }
    },
    "description": "The SKU of the storage account.",
    "required": [
     "name"
    ]
   },
   "schemas:597": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "CloudError",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/CloudError"
     ],
     "x-ms-secondary-file": true
    },
    "x-ms-external": true,
    "properties": {
     "error": {
      "$ref": "#/components/schemas/schemas:598"
     }
    },
    "description": "An error response from the Storage service."
   },
   "schemas:598": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "CloudErrorBody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/CloudErrorBody"
     ],
     "x-ms-secondary-file": true
    },
    "x-ms-external": true,
    "properties": {
     "code": {
      "$ref": "#/components/schemas/schemas:599",
      "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
     },
     "message": {
      "$ref": "#/components/schemas/schemas:600",
      "description": "A message describing the error, intended to be suitable for display in a user interface."
     },
     "target": {
      "$ref": "#/components/schemas/schemas:601",
      "description": "The target of the particular error. For example, the name of the property in error."
     },
     "details": {
      "$ref": "#/components/schemas/schemas:602",
      "description": "A list of additional details about the error."
     }
    },
    "description": "An error response from the Storage service."
   },
   "schemas:599": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "CloudErrorBody-code",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/CloudErrorBody-code"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
   },
   "schemas:600": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "CloudErrorBody-message",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/CloudErrorBody-message"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "A message describing the error, intended to be suitable for display in a user interface."
   },
   "schemas:601": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "CloudErrorBody-target",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/CloudErrorBody-target"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The target of the particular error. For example, the name of the property in error."
   },
   "schemas:602": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "CloudErrorBody-details",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/CloudErrorBody-details"
     ],
     "x-ms-secondary-file": true
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:598"
    },
    "description": "A list of additional details about the error."
   },
   "schemas:628": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateEndpoint",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateEndpoint"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "id": {
      "$ref": "#/components/schemas/schemas:629",
      "description": "The ARM identifier for Private Endpoint",
      "readOnly": true
     }
    },
    "description": "The Private Endpoint resource."
   },
   "schemas:629": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateEndpoint-id",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateEndpoint-id"
     ],
     "x-ms-secondary-file": true
    },
    "readOnly": true,
    "type": "string",
    "description": "The ARM identifier for Private Endpoint"
   },
   "schemas:630": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnection",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateEndpointConnection"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:631",
      "x-ms-client-flatten": true,
      "description": "Resource properties."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ],
    "description": "The Private Endpoint Connection resource."
   },
   "schemas:631": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnectionProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateEndpointConnectionProperties"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "privateEndpoint": {
      "$ref": "#/components/schemas/schemas:628",
      "description": "The resource of private end point."
     },
     "privateLinkServiceConnectionState": {
      "$ref": "#/components/schemas/schemas:632",
      "description": "A collection of information about the state of the connection between service consumer and provider."
     },
     "provisioningState": {
      "$ref": "#/components/schemas/PrivateEndpointConnectionProvisioningState",
      "description": "The provisioning state of the private endpoint connection resource."
     }
    },
    "description": "Properties of the PrivateEndpointConnectProperties.",
    "required": [
     "privateLinkServiceConnectionState"
    ]
   },
   "schemas:632": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkServiceConnectionState",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkServiceConnectionState"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "status": {
      "$ref": "#/components/schemas/PrivateEndpointServiceConnectionStatus",
      "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
     },
     "description": {
      "$ref": "#/components/schemas/schemas:633",
      "description": "The reason for approval/rejection of the connection."
     },
     "actionRequired": {
      "$ref": "#/components/schemas/schemas:634",
      "description": "A message indicating if changes on the service provider require any updates on the consumer."
     }
    },
    "description": "A collection of information about the state of the connection between service consumer and provider."
   },
   "schemas:633": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkServiceConnectionState-description",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkServiceConnectionState-description"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The reason for approval/rejection of the connection."
   },
   "schemas:634": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkServiceConnectionState-actionRequired",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkServiceConnectionState-actionRequired"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "A message indicating if changes on the service provider require any updates on the consumer."
   },
   "schemas:637": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResource"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:638",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:401"
     }
    ],
    "description": "A private link resource"
   },
   "schemas:638": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResourceProperties"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "groupId": {
      "$ref": "#/components/schemas/schemas:639",
      "description": "The private link resource group id.",
      "readOnly": true
     },
     "requiredMembers": {
      "$ref": "#/components/schemas/schemas:640",
      "description": "The private link resource required member names.",
      "readOnly": true
     },
     "requiredZoneNames": {
      "$ref": "#/components/schemas/schemas:642",
      "description": "The private link resource Private link DNS zone name."
     }
    },
    "description": "Properties of a private link resource."
   },
   "schemas:639": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-groupId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResourceProperties-groupId"
     ],
     "x-ms-secondary-file": true
    },
    "description": "The private link resource group id.",
    "type": "string",
    "readOnly": true
   },
   "schemas:640": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-requiredMembers",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResourceProperties-requiredMembers"
     ],
     "x-ms-secondary-file": true
    },
    "description": "The private link resource required member names.",
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:641"
    },
    "readOnly": true
   },
   "schemas:641": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-requiredMembersItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResourceProperties-requiredMembersItem"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string"
   },
   "schemas:642": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-requiredZoneNames",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResourceProperties-requiredZoneNames"
     ],
     "x-ms-secondary-file": true
    },
    "type": "array",
    "items": {
     "$ref": "#/components/schemas/schemas:643"
    },
    "description": "The private link resource Private link DNS zone name."
   },
   "schemas:643": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceProperties-requiredZoneNamesItem",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResourceProperties-requiredZoneNamesItem"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string"
   },
   "schemas:644": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnectionListResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateEndpointConnectionListResult"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:645",
      "description": "Array of private endpoint connections"
     }
    },
    "description": "List of private endpoint connection associated with the specified storage account"
   },
   "schemas:645": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnectionListResult-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateEndpointConnectionListResult-value"
     ],
     "x-ms-secondary-file": true
    },
    "type": "array",
    "description": "Array of private endpoint connections",
    "items": {
     "$ref": "#/components/schemas/schemas:630"
    }
   },
   "schemas:646": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceListResult",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResourceListResult"
     ],
     "x-ms-secondary-file": true
    },
    "properties": {
     "value": {
      "$ref": "#/components/schemas/schemas:647",
      "description": "Array of private link resources"
     }
    },
    "description": "A list of private link resources"
   },
   "schemas:647": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateLinkResourceListResult-value",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateLinkResourceListResult-value"
     ],
     "x-ms-secondary-file": true
    },
    "type": "array",
    "description": "Array of private link resources",
    "items": {
     "$ref": "#/components/schemas/schemas:637"
    }
   },
   "schemas:669": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///263?oai3.shaken.json"
     ],
     "name": "components·1kl02yy·parameters·privateendpointconnectionname·schema",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/privatelinks.json#/components/schemas/components·1kl02yy·parameters·privateendpointconnectionname·schema"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string"
   },
   "schemas:745": {
    "x-ms-metadata": {
     "apiVersions": [
      "2.0"
     ],
     "filename": [
      "mem:///264?oai3.shaken.json"
     ],
     "name": "systemData",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v2/types.json#/components/schemas/systemData"
     ],
     "x-ms-secondary-file": true
    },
    "description": "Metadata pertaining to creation and last modification of the resource.",
    "type": "object",
    "readOnly": true,
    "properties": {
     "createdBy": {
      "$ref": "#/components/schemas/schemas:746",
      "description": "The identity that created the resource."
     },
     "createdByType": {
      "x-ms-enum": {
       "name": "createdByType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/createdByType",
      "description": "The type of identity that created the resource."
     },
     "createdAt": {
      "$ref": "#/components/schemas/schemas:748",
      "description": "The timestamp of resource creation (UTC)."
     },
     "lastModifiedBy": {
      "$ref": "#/components/schemas/schemas:749",
      "description": "The identity that last modified the resource."
     },
     "lastModifiedByType": {
      "x-ms-enum": {
       "name": "createdByType",
       "modelAsString": true
      },
      "$ref": "#/components/schemas/createdByType",
      "description": "The type of identity that last modified the resource."
     },
     "lastModifiedAt": {
      "$ref": "#/components/schemas/schemas:751",
      "description": "The timestamp of resource last modification (UTC)"
     }
    }
   },
   "schemas:746": {
    "x-ms-metadata": {
     "apiVersions": [
      "2.0"
     ],
     "filename": [
      "mem:///264?oai3.shaken.json"
     ],
     "name": "systemData-createdBy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v2/types.json#/components/schemas/systemData-createdBy"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The identity that created the resource."
   },
   "schemas:748": {
    "x-ms-metadata": {
     "apiVersions": [
      "2.0"
     ],
     "filename": [
      "mem:///264?oai3.shaken.json"
     ],
     "name": "systemData-createdAt",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v2/types.json#/components/schemas/systemData-createdAt"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "format": "date-time",
    "description": "The timestamp of resource creation (UTC)."
   },
   "schemas:749": {
    "x-ms-metadata": {
     "apiVersions": [
      "2.0"
     ],
     "filename": [
      "mem:///264?oai3.shaken.json"
     ],
     "name": "systemData-lastModifiedBy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v2/types.json#/components/schemas/systemData-lastModifiedBy"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The identity that last modified the resource."
   },
   "schemas:751": {
    "x-ms-metadata": {
     "apiVersions": [
      "2.0"
     ],
     "filename": [
      "mem:///264?oai3.shaken.json"
     ],
     "name": "systemData-lastModifiedAt",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v2/types.json#/components/schemas/systemData-lastModifiedAt"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "format": "date-time",
    "description": "The timestamp of resource last modification (UTC)"
   },
   "Type": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Type",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountCheckNameAvailabilityParameters-type"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "Microsoft.Storage/storageAccounts"
    ],
    "x-ms-enum": {
     "name": "Type",
     "modelAsString": false
    },
    "description": "The type of resource, Microsoft.Storage/storageAccounts"
   },
   "ReasonCode": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ReasonCode",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Restriction-reasonCode"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "QuotaId",
     "NotAvailableForSubscription"
    ],
    "x-ms-enum": {
     "name": "ReasonCode",
     "modelAsString": true
    },
    "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC."
   },
   "Reason": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Reason",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/CheckNameAvailabilityResult-reason"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.",
    "enum": [
     "AccountNameInvalid",
     "AlreadyExists"
    ],
    "x-ms-enum": {
     "name": "Reason",
     "modelAsString": false
    }
   },
   "Kind": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Kind",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SkuInformation-kind"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Indicates the type of storage account.",
    "type": "string",
    "x-ms-enum": {
     "name": "Kind",
     "modelAsString": true
    },
    "enum": [
     "Storage",
     "StorageV2",
     "BlobStorage",
     "FileStorage",
     "BlockBlobStorage"
    ]
   },
   "ExpirationAction": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ExpirationAction",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/SasPolicy-expirationAction"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "Log",
     "Block"
    ],
    "x-ms-enum": {
     "name": "ExpirationAction",
     "modelAsString": true
    },
    "default": "Log",
    "description": "The SAS Expiration Action defines the action to be performed when sasPolicy.sasExpirationPeriod is violated. The 'Log' action can be used for audit purposes and the 'Block' action can be used to block and deny the usage of SAS tokens that do not adhere to the sas policy expiration period."
   },
   "KeyType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionService-keyType"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.",
    "enum": [
     "Service",
     "Account"
    ],
    "x-ms-enum": {
     "name": "KeyType",
     "modelAsString": true
    },
    "x-ms-mutability": [
     "create",
     "read"
    ]
   },
   "KeySource": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeySource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Encryption-keySource"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",
    "enum": [
     "Microsoft.Storage",
     "Microsoft.Keyvault"
    ],
    "x-ms-enum": {
     "name": "KeySource",
     "modelAsString": true
    },
    "default": "Microsoft.Storage"
   },
   "Action": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Action",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/VirtualNetworkRule-action"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The action of virtual network rule.",
    "type": "string",
    "x-ms-enum": {
     "name": "Action",
     "modelAsString": false
    },
    "enum": [
     "Allow"
    ]
   },
   "State": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "State",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/VirtualNetworkRule-state"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "Provisioning",
     "Deprovisioning",
     "Succeeded",
     "Failed",
     "NetworkSourceDeleted"
    ],
    "x-ms-enum": {
     "name": "State",
     "modelAsString": true
    },
    "description": "Gets the state of virtual network rule."
   },
   "Bypass": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Bypass",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/NetworkRuleSet-bypass"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "None",
     "Logging",
     "Metrics",
     "AzureServices"
    ],
    "x-ms-enum": {
     "name": "Bypass",
     "modelAsString": true
    },
    "default": "AzureServices",
    "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."
   },
   "DefaultAction": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DefaultAction",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/NetworkRuleSet-defaultAction"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "Allow",
     "Deny"
    ],
    "x-ms-enum": {
     "name": "DefaultAction",
     "modelAsString": false
    },
    "default": "Allow",
    "description": "Specifies the default action of allow or deny when no other rules match."
   },
   "DirectoryServiceOptions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DirectoryServiceOptions",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AzureFilesIdentityBasedAuthentication-directoryServiceOptions"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Indicates the directory service used. Note that this enum may be extended in the future.",
    "enum": [
     "None",
     "AADDS",
     "AD",
     "AADKERB"
    ],
    "x-ms-enum": {
     "name": "DirectoryServiceOptions",
     "modelAsString": true
    }
   },
   "DefaultSharePermission": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DefaultSharePermission",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AzureFilesIdentityBasedAuthentication-defaultSharePermission"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
    "enum": [
     "None",
     "StorageFileDataSmbShareReader",
     "StorageFileDataSmbShareContributor",
     "StorageFileDataSmbShareElevatedContributor"
    ],
    "x-ms-enum": {
     "name": "DefaultSharePermission",
     "modelAsString": true
    }
   },
   "AccountType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ActiveDirectoryProperties-accountType"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Specifies the Active Directory account type for Azure Storage.",
    "enum": [
     "User",
     "Computer"
    ],
    "x-ms-enum": {
     "name": "AccountType",
     "modelAsString": true
    }
   },
   "AllowedCopyScope": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AllowedCopyScope",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters-allowedCopyScope"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.",
    "type": "string",
    "x-ms-enum": {
     "name": "AllowedCopyScope",
     "modelAsString": true
    },
    "enum": [
     "PrivateLink",
     "AAD"
    ]
   },
   "AccessTier": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccessTier",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters-accessTier"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.",
    "type": "string",
    "x-ms-enum": {
     "name": "AccessTier",
     "modelAsString": false
    },
    "enum": [
     "Hot",
     "Cool",
     "Premium",
     "Cold"
    ]
   },
   "LargeFileSharesState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "LargeFileSharesState",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters-largeFileSharesState"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
    "type": "string",
    "x-ms-enum": {
     "name": "LargeFileSharesState",
     "modelAsString": true
    },
    "enum": [
     "Disabled",
     "Enabled"
    ]
   },
   "MinimumTlsVersion": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MinimumTlsVersion",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters-minimumTlsVersion"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
    "type": "string",
    "x-ms-enum": {
     "name": "MinimumTlsVersion",
     "modelAsString": true
    },
    "enum": [
     "TLS1_0",
     "TLS1_1",
     "TLS1_2",
     "TLS1_3"
    ]
   },
   "DnsEndpointType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DnsEndpointType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountPropertiesCreateParameters-dnsEndpointType"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.",
    "type": "string",
    "x-ms-enum": {
     "name": "DnsEndpointType",
     "modelAsString": true
    },
    "enum": [
     "Standard",
     "AzureDnsZone"
    ]
   },
   "IdentityType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "IdentityType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Identity-type"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The identity type.",
    "enum": [
     "None",
     "SystemAssigned",
     "UserAssigned",
     "SystemAssigned,UserAssigned"
    ],
    "x-ms-enum": {
     "name": "IdentityType",
     "modelAsString": true
    }
   },
   "ExtendedLocationTypes": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ExtendedLocationTypes",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ExtendedLocationType"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The type of extendedLocation.",
    "enum": [
     "EdgeZone"
    ],
    "x-ms-enum": {
     "name": "ExtendedLocationTypes",
     "modelAsString": true
    }
   },
   "GeoReplicationStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "GeoReplicationStatus",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/GeoReplicationStats-status"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.",
    "enum": [
     "Live",
     "Bootstrap",
     "Unavailable"
    ],
    "x-ms-enum": {
     "name": "GeoReplicationStatus",
     "modelAsString": true
    }
   },
   "postFailoverRedundancy": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "postFailoverRedundancy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/GeoReplicationStats-postFailoverRedundancy"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The redundancy type of the account after an account failover is performed.",
    "enum": [
     "Standard_LRS",
     "Standard_ZRS"
    ],
    "x-ms-enum": {
     "name": "postFailoverRedundancy",
     "modelAsString": true
    }
   },
   "postPlannedFailoverRedundancy": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "postPlannedFailoverRedundancy",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/GeoReplicationStats-postPlannedFailoverRedundancy"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The redundancy type of the account after a planned account failover is performed.",
    "enum": [
     "Standard_GRS",
     "Standard_GZRS",
     "Standard_RAGRS",
     "Standard_RAGZRS"
    ],
    "x-ms-enum": {
     "name": "postPlannedFailoverRedundancy",
     "modelAsString": true
    }
   },
   "RoutingChoice": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "RoutingChoice",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/RoutingPreference-routingChoice"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Routing Choice defines the kind of network routing opted by the user.",
    "enum": [
     "MicrosoftRouting",
     "InternetRouting"
    ],
    "x-ms-enum": {
     "name": "RoutingChoice",
     "modelAsString": true
    }
   },
   "AccountImmutabilityPolicyState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountImmutabilityPolicyState",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountImmutabilityPolicyProperties-state"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
    "enum": [
     "Unlocked",
     "Locked",
     "Disabled"
    ],
    "x-ms-enum": {
     "name": "AccountImmutabilityPolicyState",
     "modelAsString": true
    }
   },
   "SkuConversionStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SkuConversionStatus",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountSkuConversionStatus-skuConversionStatus"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "This property indicates the current sku conversion status.",
    "enum": [
     "InProgress",
     "Succeeded",
     "Failed"
    ],
    "x-ms-enum": {
     "name": "SkuConversionStatus",
     "modelAsString": true
    }
   },
   "BlobRestoreProgressStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobRestoreProgressStatus",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobRestoreStatus-status"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.",
    "enum": [
     "InProgress",
     "Complete",
     "Failed"
    ],
    "x-ms-enum": {
     "name": "BlobRestoreProgressStatus",
     "modelAsString": true
    }
   },
   "ProvisioningState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ProvisioningState",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountProperties-provisioningState"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the status of the storage account at the time the operation was called.",
    "enum": [
     "Creating",
     "ResolvingDNS",
     "Succeeded"
    ],
    "x-ms-enum": {
     "name": "ProvisioningState",
     "modelAsString": false
    }
   },
   "AccountStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "AccountStatus",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountProperties-statusOfPrimary"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Gets the status indicating whether the primary location of the storage account is available or unavailable.",
    "type": "string",
    "x-ms-enum": {
     "name": "AccountStatus",
     "modelAsString": false
    },
    "enum": [
     "available",
     "unavailable"
    ]
   },
   "KeyPermission": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "KeyPermission",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountKey-permissions"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Permissions for the key -- read-only or full permissions.",
    "enum": [
     "Read",
     "Full"
    ],
    "x-ms-enum": {
     "name": "KeyPermission",
     "modelAsString": false
    }
   },
   "UsageUnit": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "UsageUnit",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/Usage-unit"
     ],
     "x-ms-secondary-file": false
    },
    "readOnly": true,
    "type": "string",
    "description": "Gets the unit of measurement.",
    "enum": [
     "Count",
     "Bytes",
     "Seconds",
     "Percent",
     "CountsPerSecond",
     "BytesPerSecond"
    ],
    "x-ms-enum": {
     "name": "UsageUnit",
     "modelAsString": false
    }
   },
   "Services": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Services",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters-signedServices"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "b",
     "q",
     "t",
     "f"
    ],
    "x-ms-enum": {
     "name": "Services",
     "modelAsString": true
    },
    "description": "The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f)."
   },
   "SignedResourceTypes": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "SignedResourceTypes",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters-signedResourceTypes"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "s",
     "c",
     "o"
    ],
    "x-ms-enum": {
     "name": "SignedResourceTypes",
     "modelAsString": true
    },
    "description": "The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files."
   },
   "Permissions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Permissions",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters-signedPermission"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).",
    "type": "string",
    "x-ms-enum": {
     "name": "Permissions",
     "modelAsString": true
    },
    "enum": [
     "r",
     "d",
     "w",
     "l",
     "a",
     "c",
     "u",
     "p"
    ]
   },
   "HttpProtocol": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "HttpProtocol",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/AccountSasParameters-signedProtocol"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The protocol permitted for a request made with the account SAS.",
    "type": "string",
    "x-ms-enum": {
     "name": "HttpProtocol",
     "modelAsString": false
    },
    "enum": [
     "https,http",
     "https"
    ]
   },
   "signedResource": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "signedResource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ServiceSasParameters-signedResource"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "b",
     "c",
     "f",
     "s"
    ],
    "x-ms-enum": {
     "name": "signedResource",
     "modelAsString": true
    },
    "description": "The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s)."
   },
   "RuleType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "RuleType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/ManagementPolicyRule-type"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The valid value is Lifecycle",
    "enum": [
     "Lifecycle"
    ],
    "x-ms-enum": {
     "name": "RuleType",
     "modelAsString": true
    }
   },
   "EncryptionScopeSource": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeSource",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeProperties-source"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "Microsoft.Storage",
     "Microsoft.KeyVault"
    ],
    "x-ms-enum": {
     "name": "EncryptionScopeSource",
     "modelAsString": true
    },
    "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault."
   },
   "EncryptionScopeState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeState",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/EncryptionScopeProperties-state"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "enum": [
     "Enabled",
     "Disabled"
    ],
    "x-ms-enum": {
     "name": "EncryptionScopeState",
     "modelAsString": true
    },
    "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled."
   },
   "InventoryRuleType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "InventoryRuleType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicySchema-type"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "The valid value is Inventory",
    "enum": [
     "Inventory"
    ],
    "x-ms-enum": {
     "name": "InventoryRuleType",
     "modelAsString": true
    }
   },
   "format": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "format",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyDefinition-format"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "This is a required field, it specifies the format for the inventory files.",
    "enum": [
     "Csv",
     "Parquet"
    ],
    "x-ms-enum": {
     "name": "format",
     "modelAsString": true
    }
   },
   "schedule": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "schedule",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyDefinition-schedule"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "This is a required field. This field is used to schedule an inventory formation.",
    "enum": [
     "Daily",
     "Weekly"
    ],
    "x-ms-enum": {
     "name": "schedule",
     "modelAsString": true
    }
   },
   "objectType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "objectType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/BlobInventoryPolicyDefinition-objectType"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "This is a required field. This field specifies the scope of the inventory created either at the blob or container level.",
    "enum": [
     "Blob",
     "Container"
    ],
    "x-ms-enum": {
     "name": "objectType",
     "modelAsString": true
    }
   },
   "migrationStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "migrationStatus",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/StorageAccountMigration-properties-migrationStatus"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Current status of migration",
    "enum": [
     "Invalid",
     "SubmittedForConversion",
     "InProgress",
     "Complete",
     "Failed"
    ],
    "x-ms-enum": {
     "name": "migrationStatus",
     "modelAsString": true
    },
    "readOnly": true
   },
   "PublicNetworkAccess": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "PublicNetworkAccess",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/PublicNetworkAccess"
     ],
     "x-ms-secondary-file": false
    },
    "type": "string",
    "description": "Allow, disallow, or let Network Security Perimeter configuration to evaluate public network access to Storage Account. Value is optional but if passed in, must be 'Enabled', 'Disabled' or 'SecuredByPerimeter'.",
    "enum": [
     "Enabled",
     "Disabled",
     "SecuredByPerimeter"
    ],
    "x-ms-enum": {
     "name": "PublicNetworkAccess",
     "modelAsString": true
    }
   },
   "StorageAccountExpand": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountExpand",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·37nx48·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·parameters·4·schema"
     ],
     "x-ms-secondary-file": false
    },
    "enum": [
     "geoReplicationStats",
     "blobRestoreStatus"
    ],
    "x-ms-enum": {
     "name": "StorageAccountExpand",
     "modelAsString": false
    },
    "type": "string"
   },
   "ListKeyExpand": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListKeyExpand",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·1u0almw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·parameters·4·schema"
     ],
     "x-ms-secondary-file": false
    },
    "enum": [
     "kerb"
    ],
    "x-ms-enum": {
     "name": "ListKeyExpand"
    },
    "type": "string"
   },
   "failoverType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "failoverType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·19fxte·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·parameters·4·schema"
     ],
     "x-ms-secondary-file": false
    },
    "enum": [
     "Planned"
    ],
    "x-ms-enum": {
     "name": "failoverType",
     "modelAsString": false
    },
    "type": "string"
   },
   "ListLocalUserIncludeParam": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListLocalUserIncludeParam",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·p9d8qw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·6·schema"
     ],
     "x-ms-secondary-file": false
    },
    "enum": [
     "nfsv3"
    ],
    "x-ms-enum": {
     "name": "ListLocalUserIncludeParam",
     "modelAsString": true
    },
    "type": "string"
   },
   "ListEncryptionScopesInclude": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ListEncryptionScopesInclude",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/schemas/paths·1vn919f·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·6·schema"
     ],
     "x-ms-secondary-file": false
    },
    "enum": [
     "All",
     "Enabled",
     "Disabled"
    ],
    "x-ms-enum": {
     "name": "ListEncryptionScopesInclude",
     "modelAsString": true
    },
    "type": "string"
   },
   "SkuName": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "SkuName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/SkuName"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.",
    "enum": [
     "Standard_LRS",
     "Standard_GRS",
     "Standard_RAGRS",
     "Standard_ZRS",
     "Premium_LRS",
     "Premium_ZRS",
     "Standard_GZRS",
     "Standard_RAGZRS",
     "StandardV2_LRS",
     "StandardV2_GRS",
     "StandardV2_ZRS",
     "StandardV2_GZRS",
     "PremiumV2_LRS",
     "PremiumV2_ZRS"
    ],
    "x-ms-enum": {
     "name": "SkuName",
     "modelAsString": true
    }
   },
   "SkuTier": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///261?oai3.shaken.json"
     ],
     "name": "SkuTier",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/common.json#/components/schemas/Tier"
     ],
     "x-ms-secondary-file": true
    },
    "readOnly": true,
    "type": "string",
    "description": "The SKU tier. This is based on the SKU name.",
    "enum": [
     "Standard",
     "Premium"
    ],
    "x-ms-enum": {
     "name": "SkuTier",
     "modelAsString": false
    }
   },
   "PrivateEndpointServiceConnectionStatus": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateEndpointServiceConnectionStatus",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateEndpointServiceConnectionStatus"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "description": "The private endpoint connection status.",
    "enum": [
     "Pending",
     "Approved",
     "Rejected"
    ],
    "x-ms-enum": {
     "name": "PrivateEndpointServiceConnectionStatus",
     "modelAsString": true
    }
   },
   "PrivateEndpointConnectionProvisioningState": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///262?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnectionProvisioningState",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/privatelinks.json#/components/schemas/PrivateEndpointConnectionProvisioningState"
     ],
     "x-ms-secondary-file": true
    },
    "type": "string",
    "readOnly": true,
    "description": "The current provisioning state.",
    "enum": [
     "Succeeded",
     "Creating",
     "Deleting",
     "Failed"
    ],
    "x-ms-enum": {
     "name": "PrivateEndpointConnectionProvisioningState",
     "modelAsString": true
    }
   },
   "createdByType": {
    "x-ms-metadata": {
     "apiVersions": [
      "2.0"
     ],
     "filename": [
      "mem:///264?oai3.shaken.json"
     ],
     "name": "createdByType",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v2/types.json#/components/schemas/systemData-createdByType"
     ],
     "x-ms-secondary-file": true
    },
    "description": "The type of identity that created the resource.",
    "type": "string",
    "x-ms-enum": {
     "name": "createdByType",
     "modelAsString": true
    },
    "enum": [
     "User",
     "Application",
     "ManagedIdentity",
     "Key"
    ]
   }
  },
  "parameters": {
   "parameters:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ResourceGroupName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/ResourceGroupName"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:381"
    },
    "required": true
   },
   "parameters:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "StorageAccountName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/StorageAccountName"
     ],
     "x-ms-secondary-file": false
    },
    "name": "accountName",
    "in": "path",
    "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:382"
    },
    "required": true
   },
   "parameters:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "DeletedAccountName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/DeletedAccountName"
     ],
     "x-ms-secondary-file": false
    },
    "name": "deletedAccountName",
    "in": "path",
    "description": "Name of the deleted storage account.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:383"
    },
    "required": true
   },
   "parameters:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ManagementPolicyName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/ManagementPolicyName"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managementPolicyName",
    "in": "path",
    "description": "The name of the Storage Account Management Policy. It should always be 'default'",
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "x-ms-enum": {
      "name": "ManagementPolicyName",
      "modelAsString": true
     },
     "type": "string"
    },
    "required": true
   },
   "parameters:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "MigrationName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/MigrationName"
     ],
     "x-ms-secondary-file": false
    },
    "name": "migrationName",
    "in": "path",
    "description": "The name of the Storage Account Migration. It should always be 'default'",
    "x-ms-parameter-location": "method",
    "schema": {
     "pattern": "^[a-z][a-z0-9]*$",
     "enum": [
      "default"
     ],
     "x-ms-enum": {
      "name": "MigrationName",
      "modelAsString": true
     },
     "type": "string"
    },
    "required": true
   },
   "parameters:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "EncryptionScopeName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/EncryptionScopeName"
     ],
     "x-ms-secondary-file": false
    },
    "name": "encryptionScopeName",
    "in": "path",
    "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:384"
    },
    "required": true
   },
   "parameters:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "ObjectReplicationPolicyId",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/ObjectReplicationPolicyId"
     ],
     "x-ms-secondary-file": false
    },
    "name": "objectReplicationPolicyId",
    "in": "path",
    "description": "For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:385"
    },
    "required": true
   },
   "parameters:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "Username",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/Username"
     ],
     "x-ms-secondary-file": false
    },
    "name": "username",
    "in": "path",
    "description": "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:386"
    },
    "required": true
   },
   "parameters:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "BlobInventoryPolicyName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/BlobInventoryPolicyName"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobInventoryPolicyName",
    "in": "path",
    "description": "The name of the storage account blob inventory policy. It should always be 'default'",
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "x-ms-enum": {
      "name": "BlobInventoryPolicyName",
      "modelAsString": true
     },
     "type": "string"
    },
    "required": true
   },
   "parameters:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1nxd1rl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·parameters·4",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·1nxd1rl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·parameters·4"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$expand",
    "in": "query",
    "description": "May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus.",
    "schema": {
     "x-ms-enum": {
      "name": "StorageAccountExpand",
      "modelAsString": false
     },
     "$ref": "#/components/schemas/StorageAccountExpand"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1qqc3mn·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-deletedaccounts-deletedaccountname·get·parameters·1",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·1qqc3mn·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-deletedaccounts-deletedaccountname·get·parameters·1"
     ],
     "x-ms-secondary-file": false
    },
    "name": "location",
    "in": "path",
    "description": "The location of the deleted storage account.",
    "schema": {
     "$ref": "#/components/schemas/schemas:388"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·5ud07r·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·parameters·4",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·5ud07r·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·parameters·4"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$expand",
    "in": "query",
    "description": "Specifies type of the key to be listed. Possible value is kerb.",
    "schema": {
     "x-ms-enum": {
      "name": "ListKeyExpand"
     },
     "$ref": "#/components/schemas/ListKeyExpand"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1p1g75m·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·1p1g75m·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·parameters·2"
     ],
     "x-ms-secondary-file": false
    },
    "name": "location",
    "in": "path",
    "description": "The location of the Azure Storage resource.",
    "schema": {
     "$ref": "#/components/schemas/schemas:390"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·xmv72z·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·parameters·4",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·xmv72z·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·parameters·4"
     ],
     "x-ms-secondary-file": false
    },
    "name": "failoverType",
    "in": "query",
    "description": "The parameter is set to 'Planned' to indicate whether a Planned failover is requested.",
    "schema": {
     "x-ms-enum": {
      "name": "failoverType",
      "modelAsString": false
     },
     "$ref": "#/components/schemas/failoverType"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·olmfj4·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·parameters·4",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·olmfj4·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·parameters·4"
     ],
     "x-ms-secondary-file": false
    },
    "name": "requestType",
    "in": "query",
    "description": "Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account.",
    "schema": {
     "$ref": "#/components/schemas/schemas:392"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1yndr4j·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·1yndr4j·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·parameters·1"
     ],
     "x-ms-secondary-file": false
    },
    "name": "accountName",
    "in": "path",
    "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
    "schema": {
     "$ref": "#/components/schemas/schemas:394"
    },
    "required": true,
    "x-ms-parameter-location": "method"
   },
   "parameters:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1osq4cx·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·4",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·1osq4cx·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·4"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$maxpagesize",
    "in": "query",
    "description": "Optional, specifies the maximum number of local users that will be included in the list response.",
    "schema": {
     "$ref": "#/components/schemas/schemas:395"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1r28uj6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·5",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·1r28uj6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·5"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$filter",
    "in": "query",
    "description": "Optional. When specified, only local user names starting with the filter will be listed.",
    "schema": {
     "$ref": "#/components/schemas/schemas:396"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·9fboes·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·6",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·9fboes·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·parameters·6"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$include",
    "in": "query",
    "description": "Optional, when specified, will list local users enabled for the specific protocol. Lists all users by default.",
    "schema": {
     "x-ms-enum": {
      "name": "ListLocalUserIncludeParam",
      "modelAsString": true
     },
     "$ref": "#/components/schemas/ListLocalUserIncludeParam"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·148jod3·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·4",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·148jod3·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·4"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$maxpagesize",
    "in": "query",
    "description": "Optional, specifies the maximum number of encryption scopes that will be included in the list response.",
    "schema": {
     "$ref": "#/components/schemas/schemas:398"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1y0561t·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·5",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·1y0561t·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·5"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$filter",
    "in": "query",
    "description": "Optional. When specified, only encryption scope names starting with the filter will be listed.",
    "schema": {
     "$ref": "#/components/schemas/schemas:399"
    },
    "x-ms-parameter-location": "method"
   },
   "parameters:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·18qi72q·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·6",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/parameters/paths·18qi72q·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·parameters·6"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$include",
    "in": "query",
    "description": "Optional, when specified, will list encryption scopes with the specific state. Defaults to All",
    "schema": {
     "x-ms-enum": {
      "name": "ListEncryptionScopesInclude",
      "modelAsString": true
     },
     "$ref": "#/components/schemas/ListEncryptionScopesInclude"
    },
    "required": false,
    "x-ms-parameter-location": "method"
   },
   "parameters:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": true
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The ID of the target subscription.",
    "schema": {
     "$ref": "#/components/schemas/schemas:479"
    },
    "required": true
   },
   "parameters:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///259?oai3.shaken.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": true
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for this operation.",
    "schema": {
     "$ref": "#/components/schemas/schemas:480"
    },
    "required": true
   },
   "parameters:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///263?oai3.shaken.json"
     ],
     "name": "PrivateEndpointConnectionName",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/common-types/resource-management/v1/privatelinks.json#/components/parameters/PrivateEndpointConnectionName"
     ],
     "x-ms-secondary-file": true
    },
    "name": "privateEndpointConnectionName",
    "in": "path",
    "description": "The name of the private endpoint connection associated with the Azure resource",
    "x-ms-parameter-location": "method",
    "schema": {
     "$ref": "#/components/schemas/schemas:669"
    },
    "required": true
   }
  },
  "securitySchemes": {
   "securitySchemes:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   }
  },
  "responses": {
   "responses:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·ce8332·providers-microsoft-storage-operations·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·ce8332·providers-microsoft-storage-operations·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK. The request has succeeded.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:0"
      }
     }
    }
   },
   "responses:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·hsb9tg·subscriptions-subscriptionid-providers-microsoft-storage-skus·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·hsb9tg·subscriptions-subscriptionid-providers-microsoft-storage-skus·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- List of storage SKUs in the given subscription retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:36"
      }
     }
    }
   },
   "responses:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1a2hh5i·subscriptions-subscriptionid-providers-microsoft-storage-checknameavailability·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1a2hh5i·subscriptions-subscriptionid-providers-microsoft-storage-checknameavailability·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Operation to check the storage account name availability was successful.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:38"
      }
     }
    }
   },
   "responses:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·124a14t·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·124a14t·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:183"
      }
     }
    }
   },
   "responses:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·9ibjrd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·responses·202",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·9ibjrd·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·responses·202"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Accepted -- Create or update request accepted; operation will complete asynchronously."
   },
   "responses:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1fgghhl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1fgghhl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- storage account deleted successfully."
   },
   "responses:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·d3ade2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·responses·204",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·d3ade2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·delete·responses·204"
     ],
     "x-ms-secondary-file": false
    },
    "description": "NoContent -- account does not exist in the subscription."
   },
   "responses:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·i3pbh0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·i3pbh0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- properties retrieved successfully for the storage account.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:183"
      }
     }
    }
   },
   "responses:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1kzvacs·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1kzvacs·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- storage account properties updated successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:183"
      }
     }
    }
   },
   "responses:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·9r3999·subscriptions-subscriptionid-providers-microsoft-storage-deletedaccounts·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·9r3999·subscriptions-subscriptionid-providers-microsoft-storage-deletedaccounts·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- List of deleted accounts was retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:193"
      }
     }
    }
   },
   "responses:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1r0g3t8·subscriptions-subscriptionid-providers-microsoft-storage-deletedaccounts·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1r0g3t8·subscriptions-subscriptionid-providers-microsoft-storage-deletedaccounts·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1ojvdrl·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-deletedaccounts-deletedaccountname·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1ojvdrl·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-deletedaccounts-deletedaccountname·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- properties retrieved and returned successfully for the deleted account.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:182"
      }
     }
    }
   },
   "responses:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1mhqehz·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-deletedaccounts-deletedaccountname·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1mhqehz·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-deletedaccounts-deletedaccountname·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·9t3xvq·subscriptions-subscriptionid-providers-microsoft-storage-storageaccounts·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·9t3xvq·subscriptions-subscriptionid-providers-microsoft-storage-storageaccounts·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- List of storage accounts was retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:190"
      }
     }
    }
   },
   "responses:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1tk92u5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1tk92u5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- List of storage accounts in the given resource group retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:190"
      }
     }
    }
   },
   "responses:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·viy1h7·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·viy1h7·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listkeys·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- list of keys retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:196"
      }
     }
    }
   },
   "responses:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·17f0cto·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·17f0cto·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- specified key regenerated successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:196"
      }
     }
    }
   },
   "responses:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·134gqwy·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·134gqwy·subscriptions-subscriptionid-providers-microsoft-storage-locations-location-usages·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- current usage count and limit retrieved and returned successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:223"
      }
     }
    }
   },
   "responses:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·16hwgpb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listaccountsas·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·16hwgpb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listaccountsas·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- returned the account SAS created for the storage account requested.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:234"
      }
     }
    }
   },
   "responses:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·12o808z·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listservicesas·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·12o808z·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listservicesas·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- returned the service SAS created for the storage service requested.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:255"
      }
     }
    }
   },
   "responses:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·u0td3i·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·u0td3i·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Returned when the storage account failover is completed, and the secondary cluster has become primary."
   },
   "responses:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·rhhpky·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·responses·202",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·rhhpky·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-failover·post·responses·202"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Accepted -- Failover request accepted; operation will complete asynchronously."
   },
   "responses:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·b2cwup·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·b2cwup·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Returned when the storage account migration to hierarchical namespace is completed."
   },
   "responses:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·6jzi51·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·responses·202",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·6jzi51·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·responses·202"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Accepted -- Hierarchical namespace migration request accepted; operation will complete asynchronously."
   },
   "responses:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1plkrtz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1plkrtz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-hnsonmigration·post·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·7zxzrj·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-aborthnsonmigration·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·7zxzrj·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-aborthnsonmigration·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Returned when the storage account migration to hierarchical namespace is aborted."
   },
   "responses:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·12wztxi·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-aborthnsonmigration·post·responses·202",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·12wztxi·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-aborthnsonmigration·post·responses·202"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Accepted -- Abort hierarchical namespace migration request accepted; operation will complete asynchronously."
   },
   "responses:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·hw8lw0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-aborthnsonmigration·post·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·hw8lw0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-aborthnsonmigration·post·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·ywbaru·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·ywbaru·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Returned when the request is just for validating the migration request, it does not actually initiate migration; applicable in cross region migration currently."
   },
   "responses:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·12ft9ou·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·202",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·12ft9ou·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·202"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Accepted -- Migration request accepted; operation will complete asynchronously.",
    "headers": {
     "Location": {
      "$ref": "#/components/headers/headers:0"
     }
    }
   },
   "responses:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·15feeho·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·15feeho·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:499"
      }
     }
    }
   },
   "responses:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1razzl2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-accountmigrations-migrationname·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1razzl2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-accountmigrations-migrationname·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get the details of the ongoing or completed migration successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:368"
      }
     }
    }
   },
   "responses:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1k1qdc0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-accountmigrations-migrationname·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1k1qdc0·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-accountmigrations-migrationname·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:499"
      }
     }
    }
   },
   "responses:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·gwgy04·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·gwgy04·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- returned when blob ranges are restored completely with the same properties specified in the request body.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:158"
      }
     }
    }
   },
   "responses:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·3l65d2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·responses·202",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·3l65d2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·responses·202"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Accepted -- Blob restore request accepted; operation will complete asynchronously.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:158"
      }
     }
    }
   },
   "responses:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·yyp3ln·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·yyp3ln·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get the managementpolicy successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:257"
      }
     }
    }
   },
   "responses:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·ystiu3·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·put·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·ystiu3·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·put·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Put managementpolicy successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:257"
      }
     }
    }
   },
   "responses:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·omgqzn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·delete·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·omgqzn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·delete·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Delete the managementpolicy successfully."
   },
   "responses:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·zd5dst·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·delete·responses·204",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·zd5dst·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·delete·responses·204"
     ],
     "x-ms-secondary-file": false
    },
    "description": "No Content -- The managementpolicy does not exist."
   },
   "responses:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·vcqlxk·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·vcqlxk·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get the blob inventory policy successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:343"
      }
     }
    }
   },
   "responses:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1d6o3hc·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1d6o3hc·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:597"
      }
     }
    }
   },
   "responses:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·retw5m·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·put·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·retw5m·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·put·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Put blob inventory policy successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:343"
      }
     }
    }
   },
   "responses:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·uqm6gs·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·put·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·uqm6gs·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·put·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:597"
      }
     }
    }
   },
   "responses:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·v0342q·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·delete·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·v0342q·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·delete·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Delete the blob inventory policy successfully."
   },
   "responses:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1js0u4m·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·delete·responses·204",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1js0u4m·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·delete·responses·204"
     ],
     "x-ms-secondary-file": false
    },
    "description": "No Content -- The blob inventory policy does not exist."
   },
   "responses:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·oewa52·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·delete·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·oewa52·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·delete·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:597"
      }
     }
    }
   },
   "responses:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1m1w2n4·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1m1w2n4·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get the blob inventory policies successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:341"
      }
     }
    }
   },
   "responses:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·7jp4v1·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·7jp4v1·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1g417sz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1g417sz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Successfully retrieved private endpoint connections.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:644"
      }
     }
    }
   },
   "responses:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1awkjri·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1awkjri·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get the private endpoint connection properties successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:630"
      }
     }
    }
   },
   "responses:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·kuxiin·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·kuxiin·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·l0flbt·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·l0flbt·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Update the private endpoint connection properties successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:630"
      }
     }
    }
   },
   "responses:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·qe61cp·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·qe61cp·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·136vinz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·136vinz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Delete the private endpoint connection successfully."
   },
   "responses:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1xhtc05·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·204",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1xhtc05·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·204"
     ],
     "x-ms-secondary-file": false
    },
    "description": "No Content -- The private endpoint connection does not exist."
   },
   "responses:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·drocv9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·drocv9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·delete·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1q7c3jo·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privatelinkresources·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1q7c3jo·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privatelinkresources·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Successfully retrieved private link resources.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:646"
      }
     }
    }
   },
   "responses:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·3ptjs6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·3ptjs6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- List object replication policies successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:301"
      }
     }
    }
   },
   "responses:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·9x42ux·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·9x42ux·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1bw8smm·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1bw8smm·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get the object replication policy successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:303"
      }
     }
    }
   },
   "responses:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1d2utk6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1d2utk6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·12x47l2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·put·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·12x47l2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·put·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Put object replication policy successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:303"
      }
     }
    }
   },
   "responses:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1xhfq12·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·put·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1xhfq12·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·put·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·yay5ud·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·delete·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·yay5ud·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·delete·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Delete the object replication policy successfully."
   },
   "responses:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1ftjrn2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·delete·responses·204",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1ftjrn2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·delete·responses·204"
     ],
     "x-ms-secondary-file": false
    },
    "description": "No Content -- The object replication policy does not exist."
   },
   "responses:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·siwibz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·delete·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·siwibz·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·delete·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·c91ix2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·c91ix2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-revokeuserdelegationkeys·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- revoke user delegation keys succeeded."
   },
   "responses:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·fe1vt9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·fe1vt9·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- List local users successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:319"
      }
     }
    }
   },
   "responses:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1otq0fn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1otq0fn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1i1vqqn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1i1vqqn·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get the local user properties successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:322"
      }
     }
    }
   },
   "responses:70": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·aiuhqc·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·aiuhqc·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·9gtp68·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·put·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·9gtp68·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·put·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Put local user successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:322"
      }
     }
    }
   },
   "responses:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·5tqpma·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·put·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·5tqpma·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·put·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·7k8y11·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·delete·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·7k8y11·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·delete·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Delete the local user successfully."
   },
   "responses:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·runo4s·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·delete·responses·204",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·runo4s·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·delete·responses·204"
     ],
     "x-ms-secondary-file": false
    },
    "description": "No content -- Delete the local user successfully."
   },
   "responses:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1uzb5tl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·delete·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1uzb5tl·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·delete·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1njez3x·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username-listkeys·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1njez3x·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username-listkeys·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get the local user keys successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:329"
      }
     }
    }
   },
   "responses:77": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·146p9cw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username-listkeys·post·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·146p9cw·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username-listkeys·post·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1lwere2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username-regeneratepassword·post·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1lwere2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username-regeneratepassword·post·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Regenerate local user password successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:330"
      }
     }
    }
   },
   "responses:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1eqistv·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username-regeneratepassword·post·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1eqistv·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username-regeneratepassword·post·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1er6gbf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1er6gbf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Update encryption scope operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:288"
      }
     }
    }
   },
   "responses:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·7z1qgf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·201",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·7z1qgf·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·201"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Created -- Create encryption scope operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:288"
      }
     }
    }
   },
   "responses:82": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1xx1iju·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1xx1iju·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:83": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1j8p5gb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1j8p5gb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Update encryption scope operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:288"
      }
     }
    }
   },
   "responses:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·escx8r·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·escx8r·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1kuncsk·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1kuncsk·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- Get encryption scope operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:288"
      }
     }
    }
   },
   "responses:86": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·470sjj·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·get·responses·default",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·470sjj·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·get·responses·default"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Error response describing why the operation failed.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:379"
      }
     }
    }
   },
   "responses:87": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1bdp6f5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·responses·200",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/responses/paths·1bdp6f5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes·get·responses·200"
     ],
     "x-ms-secondary-file": false
    },
    "description": "OK -- List encryption scopes operation completed successfully.",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:298"
      }
     }
    }
   }
  },
  "requestBodies": {
   "requestBodies:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·b4oid5·subscriptions-subscriptionid-providers-microsoft-storage-checknameavailability·post·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·b4oid5·subscriptions-subscriptionid-providers-microsoft-storage-checknameavailability·post·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
    "required": true,
    "x-ms-requestBody-name": "accountName",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:25"
      }
     }
    }
   },
   "requestBodies:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·pwrcgq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·pwrcgq·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·put·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The parameters to provide for the created account.",
    "required": true,
    "x-ms-requestBody-name": "parameters",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:119"
      }
     }
    }
   },
   "requestBodies:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1fecaun·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·1fecaun·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname·patch·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The parameters to provide for the updated account.",
    "required": true,
    "x-ms-requestBody-name": "parameters",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:206"
      }
     }
    }
   },
   "requestBodies:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·xee0vu·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·xee0vu·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-regeneratekey·post·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2.",
    "required": true,
    "x-ms-requestBody-name": "regenerateKey",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:198"
      }
     }
    }
   },
   "requestBodies:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·cys8m6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listaccountsas·post·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·cys8m6·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listaccountsas·post·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The parameters to provide to list SAS credentials for the storage account.",
    "required": true,
    "x-ms-requestBody-name": "parameters",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:225"
      }
     }
    }
   },
   "requestBodies:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·ms2qqp·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listservicesas·post·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·ms2qqp·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-listservicesas·post·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The parameters to provide to list service SAS credentials.",
    "required": true,
    "x-ms-requestBody-name": "parameters",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:236"
      }
     }
    }
   },
   "requestBodies:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1bvg7c5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·1bvg7c5·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The request parameters required to perform storage account migration.",
    "required": true,
    "x-ms-requestBody-name": "parameters",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:368"
      }
     }
    }
   },
   "requestBodies:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·2y2v90·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·2y2v90·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-restoreblobranges·post·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The parameters to provide for restore blob ranges.",
    "required": true,
    "x-ms-requestBody-name": "parameters",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:210"
      }
     }
    }
   },
   "requestBodies:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·ft7q7j·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·put·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·ft7q7j·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-managementpolicies-managementpolicyname·put·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The ManagementPolicy set to a storage account.",
    "required": true,
    "x-ms-requestBody-name": "properties",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:257"
      }
     }
    }
   },
   "requestBodies:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·19l8ott·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·put·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·19l8ott·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-inventorypolicies-blobinventorypolicyname·put·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The blob inventory policy set to a storage account.",
    "required": true,
    "x-ms-requestBody-name": "properties",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:343"
      }
     }
    }
   },
   "requestBodies:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·19y1sm2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·19y1sm2·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-privateendpointconnections-privateendpointconnectionname·put·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The private endpoint connection properties.",
    "required": true,
    "x-ms-requestBody-name": "properties",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:630"
      }
     }
    }
   },
   "requestBodies:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·vj8dr4·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·put·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·vj8dr4·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-objectreplicationpolicies-objectreplicationpolicyid·put·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The object replication policy set to a storage account. A unique policy ID will be created if absent.",
    "required": true,
    "x-ms-requestBody-name": "properties",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:303"
      }
     }
    }
   },
   "requestBodies:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·ga64q·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·put·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·ga64q·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-localusers-username·put·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The local user associated with a storage account.",
    "required": true,
    "x-ms-requestBody-name": "properties",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:322"
      }
     }
    }
   },
   "requestBodies:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·twe8qb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·twe8qb·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·put·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Encryption scope properties to be used for the create or update.",
    "required": true,
    "x-ms-requestBody-name": "encryptionScope",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:288"
      }
     }
    }
   },
   "requestBodies:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1krc6wc·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·requestbody",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/requestBodies/paths·1krc6wc·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-encryptionscopes-encryptionscopename·patch·requestbody"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Encryption scope properties to be used for the update.",
    "required": true,
    "x-ms-requestBody-name": "encryptionScope",
    "content": {
     "application/json": {
      "schema": {
       "$ref": "#/components/schemas/schemas:288"
      }
     }
    }
   }
  },
  "headers": {
   "headers:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2024-01-01"
     ],
     "filename": [
      "mem:///258?oai3.shaken.json"
     ],
     "name": "paths·1u7wu2g·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·202·headers·location",
     "originalLocations": [
      "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/components/headers/paths·1u7wu2g·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-storage-storageaccounts-accountname-startaccountmigration·post·responses·202·headers·location"
     ],
     "x-ms-secondary-file": false
    },
    "schema": {
     "$ref": "#/components/schemas/schemas:393"
    }
   }
  }
 },
 "paths": {
  "path:0": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/providers/Microsoft.Storage/operations",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1providers~1Microsoft.Storage~1operations"
    ]
   }
  },
  "path:0.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/providers/Microsoft.Storage/operations",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1providers~1Microsoft.Storage~1operations"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "Operations"
    ],
    "description": "Lists all of the available Storage Rest API operations.",
    "operationId": "Operations_List",
    "x-ms-examples": {
     "OperationsList": {
      "parameters": {
       "api-version": "2024-01-01"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "name": "Microsoft.Storage/storageAccounts/write",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "Create/Update Storage Account",
            "description": "Creates a storage account with the specified parameters or update the properties or tags or adds custom domain for the specified storage account."
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/delete",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "Delete Storage Account",
            "description": "Deletes an existing storage account."
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/listkeys/action",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "List Storage Account Keys",
            "description": "Returns the access keys for the specified storage account."
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/regeneratekey/action",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "Regenerate Storage Account Keys",
            "description": "Regenerates the access keys for the specified storage account."
           }
          },
          {
           "name": "Microsoft.Storage/checknameavailability/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Name Availability",
            "operation": "Check Name Availability",
            "description": "Checks that account name is valid and is not in use."
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "List/Get Storage Account(s)",
            "description": "Returns the list of storage accounts or gets the properties for the specified storage account."
           }
          },
          {
           "name": "Microsoft.Storage/usages/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Usage Metrics",
            "operation": "Get Subscription Usages",
            "description": "Returns the limit and the current usage count for resources in the specified subscription"
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/listAccountSas/action",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Account SAS Token",
            "operation": "Returns Storage Account SAS Token",
            "description": "Returns the Account SAS token for the specified storage account."
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/listServiceSas/action",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Returns the Service SAS token for the specified storage account.",
            "operation": "Returns Storage Service SAS Token",
            "description": "Storage Service SAS Token"
           }
          },
          {
           "name": "Microsoft.Storage/locations/deleteVirtualNetworkOrSubnets/action",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Location",
            "operation": "Delete virtual network or subnets notifications",
            "description": "Notifies Microsoft.Storage that virtual network or subnet is being deleted"
           }
          },
          {
           "name": "Microsoft.Storage/operations/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Operations",
            "operation": "Poll Asynchronous Operation",
            "description": "Polls the status of an asynchronous operation."
           }
          },
          {
           "name": "Microsoft.Storage/register/action",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Resource Provider",
            "operation": "Registers the Storage Resource Provider",
            "description": "Registers the subscription for the storage resource provider and enables the creation of storage accounts."
           }
          },
          {
           "name": "Microsoft.Storage/skus/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Skus",
            "operation": "List Skus",
            "description": "Lists the Skus supported by Microsoft.Storage."
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/services/diagnosticSettings/write",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "Create/Update Diagnostic Settings",
            "description": "Create/Update storage account diagnostic settings."
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/providers/Microsoft.Insights/metricDefinitions/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "Get list of Microsoft Storage Metrics definitions",
            "description": "Get list of Microsoft Storage Metrics definitions."
           },
           "origin": "system",
           "properties": {
            "serviceSpecification": {
             "metricSpecifications": [
              {
               "name": "UsedCapacity",
               "displayName": "Used capacity",
               "displayDescription": "Account used capacity",
               "unit": "Bytes",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity",
               "resourceIdDimensionNameOverride": "AccountResourceId"
              }
             ]
            }
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/providers/Microsoft.Insights/diagnosticSettings/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "Read diagnostic setting",
            "description": "Gets the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/providers/Microsoft.Insights/diagnosticSettings/write",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Storage Accounts",
            "operation": "Write diagnostic setting",
            "description": "Creates or updates the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/blobServices/providers/Microsoft.Insights/metricDefinitions/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Blob service",
            "operation": "Get list of Microsoft Storage Metrics definitions",
            "description": "Get list of Microsoft Storage Metrics definitions."
           },
           "origin": "system",
           "properties": {
            "serviceSpecification": {
             "metricSpecifications": [
              {
               "name": "BlobCapacity",
               "displayName": "Blob Capacity",
               "displayDescription": "The amount of storage used by the storage account’s Blob service in bytes.",
               "unit": "Bytes",
               "aggregationType": "Average",
               "dimensions": [
                {
                 "name": "BlobType",
                 "displayName": "Blob type"
                }
               ],
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "BlobCount",
               "displayName": "Blob Count",
               "displayDescription": "The number of Blob in the storage account’s Blob service.",
               "unit": "Count",
               "aggregationType": "Average",
               "dimensions": [
                {
                 "name": "BlobType",
                 "displayName": "Blob type"
                }
               ],
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "ContainerCount",
               "displayName": "Blob Container Count",
               "displayDescription": "The number of containers in the storage account’s Blob service.",
               "unit": "Count",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "BlobProvisionedSize",
               "displayName": "Blob Provisioned Size",
               "displayDescription": "The amount of storage provisioned in the storage account’s Blob service in bytes.",
               "unit": "Bytes",
               "aggregationType": "Average",
               "dimensions": [
                {
                 "name": "BlobType",
                 "displayName": "Blob type"
                }
               ],
               "fillGapWithZero": false,
               "category": "Capacity"
              }
             ]
            }
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/blobServices/providers/Microsoft.Insights/diagnosticSettings/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Blob service",
            "operation": "Read diagnostic setting",
            "description": "Gets the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/blobServices/providers/Microsoft.Insights/diagnosticSettings/write",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Blob service",
            "operation": "Write diagnostic setting",
            "description": "Creates or updates the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/tableServices/providers/Microsoft.Insights/metricDefinitions/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Table service",
            "operation": "Get list of Microsoft Storage Metrics definitions",
            "description": "Get list of Microsoft Storage Metrics definitions."
           },
           "origin": "system",
           "properties": {
            "serviceSpecification": {
             "metricSpecifications": [
              {
               "name": "TableCapacity",
               "displayName": "Table Capacity",
               "displayDescription": "The amount of storage used by the storage account’s Table service in bytes.",
               "unit": "Bytes",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "TableCount",
               "displayName": "Table Count",
               "displayDescription": "The number of table in the storage account’s Table service.",
               "unit": "Count",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "TableEntityCount",
               "displayName": "Table Entity Count",
               "displayDescription": "The number of table entities in the storage account’s Table service.",
               "unit": "Count",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              }
             ]
            }
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/tableServices/providers/Microsoft.Insights/diagnosticSettings/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Table service",
            "operation": "Read diagnostic setting",
            "description": "Gets the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/tableServices/providers/Microsoft.Insights/diagnosticSettings/write",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Table service",
            "operation": "Write diagnostic setting",
            "description": "Creates or updates the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/queueServices/providers/Microsoft.Insights/metricDefinitions/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Queue service",
            "operation": "Get list of Microsoft Storage Metrics definitions",
            "description": "Get list of Microsoft Storage Metrics definitions."
           },
           "origin": "system",
           "properties": {
            "serviceSpecification": {
             "metricSpecifications": [
              {
               "name": "QueueCapacity",
               "displayName": "Queue Capacity",
               "displayDescription": "The amount of storage used by the storage account’s Queue service in bytes.",
               "unit": "Bytes",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "QueueCount",
               "displayName": "Queue Count",
               "displayDescription": "The number of queue in the storage account’s Queue service.",
               "unit": "Count",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "QueueMessageCount",
               "displayName": "Queue Message Count",
               "displayDescription": "The approximate number of queue messages in the storage account’s Queue service.",
               "unit": "Count",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              }
             ]
            }
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/queueServices/providers/Microsoft.Insights/diagnosticSettings/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Queue service",
            "operation": "Read diagnostic setting",
            "description": "Gets the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/queueServices/providers/Microsoft.Insights/diagnosticSettings/write",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "Queue service",
            "operation": "Write diagnostic setting",
            "description": "Creates or updates the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/fileServices/providers/Microsoft.Insights/metricDefinitions/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "File service",
            "operation": "Get list of Microsoft Storage Metrics definitions",
            "description": "Get list of Microsoft Storage Metrics definitions."
           },
           "origin": "system",
           "properties": {
            "serviceSpecification": {
             "metricSpecifications": [
              {
               "name": "FileCapacity",
               "displayName": "File Capacity",
               "displayDescription": "The amount of storage used by the storage account’s File service in bytes.",
               "unit": "Bytes",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "FileProvisionedSize",
               "displayName": "File Provisioned Size",
               "displayDescription": "The amount of storage provisioned in the storage account’s File service in bytes.",
               "unit": "Bytes",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "FileCount",
               "displayName": "File Count",
               "displayDescription": "The number of file in the storage account’s File service.",
               "unit": "Count",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              },
              {
               "name": "FileShareCount",
               "displayName": "File Share Count",
               "displayDescription": "The number of file shares in the storage account’s File service.",
               "unit": "Count",
               "aggregationType": "Average",
               "fillGapWithZero": false,
               "category": "Capacity"
              }
             ]
            }
           }
          },
          {
           "name": "Microsoft.Storage/storageAccounts/fileServices/providers/Microsoft.Insights/diagnosticSettings/read",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "File service",
            "operation": "Read diagnostic setting",
            "description": "Gets the diagnostic setting for the resource."
           },
           "origin": "system"
          },
          {
           "name": "Microsoft.Storage/storageAccounts/fileServices/providers/Microsoft.Insights/diagnosticSettings/write",
           "display": {
            "provider": "Microsoft Storage",
            "resource": "File service",
            "operation": "Write diagnostic setting",
            "description": "Creates or updates the diagnostic setting for the resource."
           },
           "origin": "system"
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:23"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:0",
      "description": "OK. The request has succeeded."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:1": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1skus"
    ]
   }
  },
  "path:1.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1skus"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "Skus"
    ],
    "operationId": "Skus_List",
    "description": "Lists the available SKUs supported by Microsoft.Storage for given subscription.",
    "x-ms-examples": {
     "SkuList": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "api-version": "2024-01-01"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "eastus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "eastus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "true"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2(stage)"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2(stage)"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2(stage)"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2(stage)"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "eastus2(stage)"
           ],
           "capabilities": [
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2(stage)"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2(stage)"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2(stage)"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "westus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westus"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "westeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westeurope"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westeurope"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westeurope"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "eastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastasia"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastasia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastasia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southeastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southeastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southeastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southeastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "southeastasia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southeastasia"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southeastasia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southeastasia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "japaneast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "japaneast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "japaneast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "japaneast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "japaneast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "japaneast"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "japaneast"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "japaneast"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "japanwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "japanwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "japanwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "japanwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "japanwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "japanwest"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "japanwest"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "japanwest"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "northcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "northcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "northcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "northcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "northcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "northcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "northcentralus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "northcentralus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "southcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southcentralus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southcentralus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "centralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centralus"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centralus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centralus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "northeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "northeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "northeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "northeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "northeurope"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "northeurope"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "northeurope"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "northeurope"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "brazilsouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "brazilsouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "brazilsouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "brazilsouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "brazilsouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "brazilsouth"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "brazilsouth"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "brazilsouth"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "australiaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "australiaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "australiaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "australiaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "australiaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "australiaeast"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "australiaeast"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "australiaeast"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "australiasoutheast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "australiasoutheast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "australiasoutheast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "australiasoutheast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "australiasoutheast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "australiasoutheast"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "australiasoutheast"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "australiasoutheast"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "southindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "southindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southindia"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southindia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "southindia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centralindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centralindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centralindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centralindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "centralindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centralindia"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centralindia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centralindia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "westindia"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westindia"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westindia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westindia"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "canadaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "canadaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "canadaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "canadaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "canadaeast"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "canadaeast"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "canadaeast"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "canadaeast"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "canadacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "canadacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "canadacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "canadacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "canadacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "canadacentral"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "canadacentral"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "canadacentral"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "westus2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westus2"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westus2"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westus2"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "westcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "westcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westcentralus"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westcentralus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "westcentralus"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "true"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uksouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uksouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uksouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uksouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "uksouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uksouth"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uksouth"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uksouth"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "ukwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "ukwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "ukwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "ukwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "ukwest"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "ukwest"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "ukwest"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "ukwest"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "koreacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "koreacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "koreacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "koreacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "koreacentral"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "koreacentral"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "koreacentral"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "koreacentral"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "koreasouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "koreasouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "koreasouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "koreasouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "koreasouth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "koreasouth"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "koreasouth"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "koreasouth"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uknorth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uknorth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uknorth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uknorth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "uknorth"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uknorth"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uknorth"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uknorth"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uksouth2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uksouth2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uksouth2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "uksouth2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "uksouth2"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uksouth2"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uksouth2"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "uksouth2"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "false"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2euap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2euap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2euap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "eastus2euap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "eastus2euap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2euap"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2euap"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "eastus2euap"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centraluseuap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_ZRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centraluseuap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centraluseuap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "Storage",
           "locations": [
            "centraluseuap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "true"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Premium_LRS",
           "tier": "Premium",
           "kind": "Storage",
           "locations": [
            "centraluseuap"
           ],
           "capabilities": [
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_LRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centraluseuap"
           ],
           "capabilities": [
            {
             "name": "supportsarchivepreview",
             "value": "false"
            },
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_GRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centraluseuap"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "true"
            }
           ],
           "restrictions": []
          },
          {
           "resourceType": "storageAccounts",
           "name": "Standard_RAGRS",
           "tier": "Standard",
           "kind": "BlobStorage",
           "locations": [
            "centraluseuap"
           ],
           "capabilities": [
            {
             "name": "supportschangenotification",
             "value": "true"
            },
            {
             "name": "supportsfileencryption",
             "value": "false"
            },
            {
             "name": "supportshoeboxcapacitymetrics",
             "value": "false"
            },
            {
             "name": "supportsnetworkacls",
             "value": "false"
            }
           ],
           "restrictions": []
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:1",
      "description": "OK -- List of storage SKUs in the given subscription retrieved and returned successfully."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:2": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1checkNameAvailability"
    ]
   }
  },
  "path:2.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1checkNameAvailability"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_CheckNameAvailability",
    "description": "Checks that the storage account name is valid and is not already in use.",
    "x-ms-examples": {
     "StorageAccountCheckNameAvailability": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "api-version": "2024-01-01",
       "accountName": {
        "name": "sto3363",
        "type": "Microsoft.Storage/storageAccounts"
       }
      },
      "responses": {
       "200": {
        "body": {
         "nameAvailable": true
        }
       }
      }
     }
    },
    "requestBody": {
     "x-ms-requestBody-name": "accountName",
     "$ref": "#/components/requestBodies/requestBodies:0",
     "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:2",
      "description": "OK -- Operation to check the storage account name availability was successful."
     }
    }
   }
  },
  "path:3": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   }
  },
  "path:3.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_Create",
    "description": "Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.",
    "x-ms-examples": {
     "StorageAccountCreate": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Standard_GRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "extendedLocation": {
         "type": "EdgeZone",
         "name": "losangeles001"
        },
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "isHnsEnabled": true,
         "isSftpEnabled": true,
         "allowBlobPublicAccess": false,
         "defaultToOAuthAuthentication": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "requireInfrastructureEncryption": false,
          "keySource": "Microsoft.Storage"
         }
        },
        "tags": {
         "key1": "value1",
         "key2": "value2"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "extendedLocation": {
          "type": "EdgeZone",
          "name": "losangeles001"
         },
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "isHnsEnabled": true,
          "isSftpEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto4445-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto4445-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto4445-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto4445-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto4445-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto4445-internetrouting.web.core.windows.net/",
            "dfs": "https://sto4445-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-internetrouting.blob.core.windows.net/",
            "file": "https://sto4445-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2euap",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "requireInfrastructureEncryption": false,
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "centraluseuap",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": true
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "NfsV3AccountCreate": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Premium_LRS"
        },
        "kind": "BlockBlobStorage",
        "location": "eastus",
        "properties": {
         "isHnsEnabled": true,
         "isNfsV3Enabled": true,
         "enableExtendedGroups": true,
         "supportsHttpsTrafficOnly": false,
         "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow",
          "ipRules": [],
          "virtualNetworkRules": [
           {
            "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Network/virtualNetworks/net123/subnets/subnet12"
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "BlockBlobStorage",
         "location": "eastus",
         "name": "sto4445",
         "properties": {
          "isHnsEnabled": true,
          "isNfsV3Enabled": true,
          "enableExtendedGroups": true,
          "supportsHttpsTrafficOnly": false,
          "networkAcls": {
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": [
            {
             "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Network/virtualNetworks/net123/subnets/subnet12"
            }
           ]
          }
         },
         "sku": {
          "name": "Premium_LRS",
          "tier": "Premium"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateUserAssignedEncryptionIdentityWithCMK": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "identity": {
         "type": "UserAssigned",
         "userAssignedIdentities": {
          "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}": {}
         }
        },
        "sku": {
         "name": "Standard_LRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "properties": {
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "keyvaultproperties": {
           "keyvaulturi": "https://myvault8569.vault.azure.net",
           "keyname": "wrappingKey",
           "keyversion": ""
          },
          "keySource": "Microsoft.Keyvault",
          "identity": {
           "userAssignedIdentity": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}"
          }
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "identity": {
          "userAssignedIdentities": {
           "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}": {
            "principalId": "8d823284-1060-42a5-9ec4-ed3d831e24d7",
            "clientId": "fbaa6278-1ecc-415c-819f-6e2058d3acb5"
           }
          },
          "type": "UserAssigned"
         },
         "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
         },
         "kind": "StorageV2",
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "name": "sto4445",
         "type": "Microsoft.Storage/storageAccounts",
         "location": "eastus",
         "tags": {},
         "properties": {
          "privateEndpointConnections": [],
          "networkAcls": {
           "bypass": "AzureServices",
           "virtualNetworkRules": [],
           "ipRules": [],
           "defaultAction": "Allow"
          },
          "supportsHttpsTrafficOnly": true,
          "encryption": {
           "identity": {
            "userAssignedIdentity": "/subscriptions/{subscription-id}/resourcegroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}"
           },
           "keyvaultproperties": {
            "keyvaulturi": "https://myvault8569.vault.azure.net",
            "keyname": "wrappingKey",
            "keyversion": "",
            "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
            "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
           },
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2020-12-15T00:43:14.1739587Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2020-12-15T00:43:14.1739587Z"
            }
           },
           "keySource": "Microsoft.Keyvault"
          },
          "accessTier": "Hot",
          "provisioningState": "Succeeded",
          "creationTime": "2020-12-15T00:43:14.0839093Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/"
          },
          "primaryLocation": "eastus",
          "statusOfPrimary": "available"
         }
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateWithImmutabilityPolicy": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Standard_GRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "extendedLocation": {
         "type": "EdgeZone",
         "name": "losangeles001"
        },
        "properties": {
         "immutableStorageWithVersioning": {
          "immutabilityPolicy": {
           "immutabilityPeriodSinceCreationInDays": 15,
           "allowProtectedAppendWrites": true,
           "state": "Unlocked"
          },
          "enabled": true
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "extendedLocation": {
          "type": "EdgeZone",
          "name": "losangeles001"
         },
         "properties": {
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/"
          },
          "primaryLocation": "eastus2euap",
          "provisioningState": "Succeeded",
          "immutableStorageWithVersioning": {
           "immutabilityPolicy": {
            "immutabilityPeriodSinceCreationInDays": 15,
            "allowProtectedAppendWrites": true,
            "state": "Unlocked"
           },
           "enabled": true
          }
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateDisallowPublicNetworkAccess": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Standard_GRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "extendedLocation": {
         "type": "EdgeZone",
         "name": "losangeles001"
        },
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "isHnsEnabled": true,
         "allowBlobPublicAccess": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "publicNetworkAccess": "Disabled",
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "requireInfrastructureEncryption": false,
          "keySource": "Microsoft.Storage"
         }
        },
        "tags": {
         "key1": "value1",
         "key2": "value2"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "extendedLocation": {
          "type": "EdgeZone",
          "name": "losangeles001"
         },
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto4445-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto4445-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto4445-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto4445-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto4445-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto4445-internetrouting.web.core.windows.net/",
            "dfs": "https://sto4445-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-internetrouting.blob.core.windows.net/",
            "file": "https://sto4445-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2euap",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "requireInfrastructureEncryption": false,
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "centraluseuap",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": true,
          "publicNetworkAccess": "Disabled"
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateEnablePublicNetworkAccess": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Standard_GRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "extendedLocation": {
         "type": "EdgeZone",
         "name": "losangeles001"
        },
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "isHnsEnabled": true,
         "allowBlobPublicAccess": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "publicNetworkAccess": "Enabled",
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "requireInfrastructureEncryption": false,
          "keySource": "Microsoft.Storage"
         }
        },
        "tags": {
         "key1": "value1",
         "key2": "value2"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "extendedLocation": {
          "type": "EdgeZone",
          "name": "losangeles001"
         },
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto4445-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto4445-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto4445-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto4445-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto4445-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto4445-internetrouting.web.core.windows.net/",
            "dfs": "https://sto4445-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-internetrouting.blob.core.windows.net/",
            "file": "https://sto4445-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2euap",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "requireInfrastructureEncryption": false,
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "centraluseuap",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": true,
          "publicNetworkAccess": "Enabled"
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateUserAssignedIdentityWithFederatedIdentityClientId.": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res131918",
       "accountName": "sto131918",
       "api-version": "2024-01-01",
       "parameters": {
        "identity": {
         "type": "UserAssigned",
         "userAssignedIdentities": {
          "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}": {}
         }
        },
        "sku": {
         "name": "Standard_LRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "properties": {
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "keyvaultproperties": {
           "keyvaulturi": "https://myvault8569.vault.azure.net",
           "keyname": "wrappingKey",
           "keyversion": ""
          },
          "keySource": "Microsoft.Keyvault",
          "identity": {
           "userAssignedIdentity": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}",
           "federatedIdentityClientId": "f83c6b1b-4d34-47e4-bb34-9d83df58b540"
          }
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "identity": {
          "userAssignedIdentities": {
           "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}": {
            "principalId": "8d823284-1060-42a5-9ec4-ed3d831e24d7",
            "clientId": "fbaa6278-1ecc-415c-819f-6e2058d3acb5"
           }
          },
          "type": "UserAssigned"
         },
         "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
         },
         "kind": "StorageV2",
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "name": "sto4445",
         "type": "Microsoft.Storage/storageAccounts",
         "location": "eastus",
         "tags": {},
         "properties": {
          "privateEndpointConnections": [],
          "networkAcls": {
           "bypass": "AzureServices",
           "virtualNetworkRules": [],
           "ipRules": [],
           "defaultAction": "Allow"
          },
          "supportsHttpsTrafficOnly": true,
          "encryption": {
           "identity": {
            "userAssignedIdentity": "/subscriptions/{subscription-id}/resourcegroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}",
            "federatedIdentityClientId": "f83c6b1b-4d34-47e4-bb34-9d83df58b540"
           },
           "keyvaultproperties": {
            "keyvaulturi": "https://myvault8569.vault.azure.net",
            "keyname": "wrappingKey",
            "keyversion": "",
            "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
            "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
           },
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2020-12-15T00:43:14.1739587Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2020-12-15T00:43:14.1739587Z"
            }
           },
           "keySource": "Microsoft.Keyvault"
          },
          "accessTier": "Hot",
          "provisioningState": "Succeeded",
          "creationTime": "2020-12-15T00:43:14.0839093Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/"
          },
          "primaryLocation": "eastus",
          "statusOfPrimary": "available"
         }
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateAllowedCopyScopeToPrivateLink": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Standard_GRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "isHnsEnabled": true,
         "allowBlobPublicAccess": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "allowedCopyScope": "PrivateLink",
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "requireInfrastructureEncryption": false,
          "keySource": "Microsoft.Storage"
         }
        },
        "tags": {
         "key1": "value1",
         "key2": "value2"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "extendedLocation": {
          "type": "EdgeZone",
          "name": "losangeles001"
         },
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto4445-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto4445-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto4445-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto4445-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto4445-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto4445-internetrouting.web.core.windows.net/",
            "dfs": "https://sto4445-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-internetrouting.blob.core.windows.net/",
            "file": "https://sto4445-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2euap",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "requireInfrastructureEncryption": false,
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "centraluseuap",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": true,
          "allowedCopyScope": "PrivateLink"
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateAllowedCopyScopeToAAD": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Standard_GRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "isHnsEnabled": true,
         "allowBlobPublicAccess": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "allowedCopyScope": "AAD",
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "requireInfrastructureEncryption": false,
          "keySource": "Microsoft.Storage"
         }
        },
        "tags": {
         "key1": "value1",
         "key2": "value2"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "extendedLocation": {
          "type": "EdgeZone",
          "name": "losangeles001"
         },
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto4445-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto4445-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto4445-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto4445-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto4445-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto4445-internetrouting.web.core.windows.net/",
            "dfs": "https://sto4445-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-internetrouting.blob.core.windows.net/",
            "file": "https://sto4445-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2euap",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "requireInfrastructureEncryption": false,
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "centraluseuap",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": true,
          "allowedCopyScope": "AAD"
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreatePremiumBlockBlobStorage": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Premium_LRS"
        },
        "kind": "BlockBlobStorage",
        "location": "eastus",
        "properties": {
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "requireInfrastructureEncryption": false,
          "keySource": "Microsoft.Storage"
         }
        },
        "tags": {
         "key1": "value1",
         "key2": "value2"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "properties": {
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "blob": "https://sto4445.blob.core.windows.net/",
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/"
          },
          "primaryLocation": "eastus2euap",
          "accessTier": "Premium",
          "provisioningState": "Succeeded",
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "requireInfrastructureEncryption": false,
           "keySource": "Microsoft.Storage"
          },
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": true
         },
         "sku": {
          "name": "Premium_LRS",
          "tier": "Premium"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateDnsEndpointTypeToAzureDnsZone": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Standard_GRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "extendedLocation": {
         "type": "EdgeZone",
         "name": "losangeles001"
        },
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "dnsEndpointType": "AzureDnsZone",
         "isHnsEnabled": true,
         "isSftpEnabled": true,
         "allowBlobPublicAccess": false,
         "defaultToOAuthAuthentication": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "requireInfrastructureEncryption": false,
          "keySource": "Microsoft.Storage"
         }
        },
        "tags": {
         "key1": "value1",
         "key2": "value2"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "extendedLocation": {
          "type": "EdgeZone",
          "name": "losangeles001"
         },
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "dnsEndpointType": "AzureDnsZone",
          "isHnsEnabled": true,
          "isSftpEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "web": "https://sto4445.z24.web.storage.azure.net/",
           "dfs": "https://sto4445.z24.dfs.storage.azure.net/",
           "blob": "https://sto4445.z24.blob.storage.azure.net/",
           "file": "https://sto4445.z24.file.storage.azure.net/",
           "queue": "https://sto4445.z24.queue.storage.azure.net/",
           "table": "https://sto4445.z24.table.storage.azure.net/",
           "microsoftEndpoints": {
            "web": "https://sto4445-microsoftrouting.z24.web.storage.azure.net/",
            "dfs": "https://sto4445-microsoftrouting.z24.dfs.storage.azure.net/",
            "blob": "https://sto4445-microsoftrouting.z24.blob.storage.azure.net/",
            "file": "https://sto4445-microsoftrouting.z24.file.storage.azure.net/",
            "queue": "https://sto4445-microsoftrouting.z24.queue.storage.azure.net/",
            "table": "https://sto4445-microsoftrouting.z24.table.storage.azure.net/"
           },
           "internetEndpoints": {
            "web": "https://sto4445-internetrouting.z24.web.storage.azure.net/",
            "dfs": "https://sto4445-internetrouting.z24.dfs.storage.azure.net/",
            "blob": "https://sto4445-internetrouting.z24.blob.storage.azure.net/",
            "file": "https://sto4445-internetrouting.z24.file.storage.azure.net/"
           }
          },
          "primaryLocation": "eastus2euap",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "requireInfrastructureEncryption": false,
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "centraluseuap",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": true
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     },
     "StorageAccountCreateDnsEndpointTypeToStandard": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "sku": {
         "name": "Standard_GRS"
        },
        "kind": "Storage",
        "location": "eastus",
        "extendedLocation": {
         "type": "EdgeZone",
         "name": "losangeles001"
        },
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "dnsEndpointType": "Standard",
         "isHnsEnabled": true,
         "isSftpEnabled": true,
         "allowBlobPublicAccess": false,
         "defaultToOAuthAuthentication": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "requireInfrastructureEncryption": false,
          "keySource": "Microsoft.Storage"
         }
        },
        "tags": {
         "key1": "value1",
         "key2": "value2"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "kind": "Storage",
         "location": "eastus",
         "name": "sto4445",
         "extendedLocation": {
          "type": "EdgeZone",
          "name": "losangeles001"
         },
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "dnsEndpointType": "Standard",
          "isHnsEnabled": true,
          "isSftpEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-05-24T13:25:33.4863236Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto4445-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto4445-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto4445-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto4445-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto4445-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto4445-internetrouting.web.core.windows.net/",
            "dfs": "https://sto4445-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto4445-internetrouting.blob.core.windows.net/",
            "file": "https://sto4445-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2euap",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "requireInfrastructureEncryption": false,
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "centraluseuap",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": true
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       },
       "202": {}
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "parameters",
     "$ref": "#/components/requestBodies/requestBodies:1",
     "description": "The parameters to provide for the created account."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:3",
      "description": "OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body."
     },
     "202": {
      "$ref": "#/components/responses/responses:4",
      "description": "Accepted -- Create or update request accepted; operation will complete asynchronously."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:3.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_Delete",
    "description": "Deletes a storage account in Microsoft Azure.",
    "x-ms-examples": {
     "StorageAccountDelete": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res4228",
       "accountName": "sto2434",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {},
       "204": {}
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:5",
      "description": "OK -- storage account deleted successfully."
     },
     "204": {
      "$ref": "#/components/responses/responses:6",
      "description": "NoContent -- account does not exist in the subscription."
     }
    }
   }
  },
  "path:3.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_GetProperties",
    "description": "Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.",
    "x-ms-examples": {
     "StorageAccountGetProperties": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "geoReplicationStats": {
           "status": "Live",
           "lastSyncTime": "2018-10-30T00:25:34Z",
           "canFailover": true
          },
          "isHnsEnabled": true,
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": [],
           "resourceAccessRules": [
            {
             "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
             "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
            }
           ]
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto8596-internetrouting.web.core.windows.net/",
            "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
            "file": "https://sto8596-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false,
          "isSkuConversionBlocked": false,
          "accountMigrationInProgress": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountGetPropertiesCMKEnabled": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "identity": {
          "principalId": "911871cc-ffd1-4fc4-ac11-7a316433ea66",
          "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
          "type": "SystemAssigned"
         },
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "geoReplicationStats": {
           "status": "Live",
           "lastSyncTime": "2018-10-30T00:25:34Z",
           "canFailover": true
          },
          "isHnsEnabled": true,
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": [],
           "resourceAccessRules": []
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto8596-internetrouting.web.core.windows.net/",
            "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
            "file": "https://sto8596-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Keyvault",
           "keyvaultproperties": {
            "keyvaulturi": "https://myvault8569.vault.azure.net",
            "keyname": "wrappingKey",
            "keyversion": "",
            "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
            "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
           }
          },
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountGetAsyncSkuConversionStatus": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "StorageV2",
         "location": "eastus",
         "name": "sto8596",
         "properties": {
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "storageAccountSkuConversionStatus": {
           "skuConversionStatus": "InProgress",
           "targetSkuName": "Standard_GRS",
           "startTime": "2022-09-01T02:53:39.0932539Z",
           "endTime": "2021-09-02T02:53:39.0932539Z"
          }
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountGetPropertiesCMKVersionExpirationTime": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "identity": {
          "principalId": "911871cc-ffd1-4fc4-ac11-7a316433ea66",
          "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
          "type": "SystemAssigned"
         },
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "geoReplicationStats": {
           "status": "Live",
           "lastSyncTime": "2018-10-30T00:25:34Z",
           "canFailover": true
          },
          "isHnsEnabled": true,
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": [],
           "resourceAccessRules": []
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto8596-internetrouting.web.core.windows.net/",
            "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
            "file": "https://sto8596-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Keyvault",
           "keyvaultproperties": {
            "keyvaulturi": "https://myvault8569.vault.azure.net",
            "keyname": "wrappingKey",
            "keyversion": "",
            "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
            "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z",
            "currentVersionedKeyExpirationTimestamp": "2019-12-13T20:36:23.7023290Z"
           }
          },
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountGetPropertiesGeoReplicationStatscanFailoverTrue": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true",
       "$expand": "geoReplicationStats"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "geoReplicationStats": {
           "status": "Live",
           "lastSyncTime": "2018-10-30T00:25:34Z",
           "canFailover": true,
           "canPlannedFailover": true,
           "postFailoverRedundancy": "Standard_LRS",
           "postPlannedFailoverRedundancy": "Standard_GRS"
          },
          "isHnsEnabled": true,
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": [],
           "resourceAccessRules": [
            {
             "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
             "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
            }
           ]
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto8596-internetrouting.web.core.windows.net/",
            "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
            "file": "https://sto8596-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false,
          "isSkuConversionBlocked": false,
          "accountMigrationInProgress": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountGetPropertiesGeoReplicationStatscanFailoverFalse": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true",
       "$expand": "geoReplicationStats"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "geoReplicationStats": {
           "status": "Live",
           "lastSyncTime": "2018-10-30T00:25:34Z",
           "canFailover": false,
           "canPlannedFailover": false,
           "postFailoverRedundancy": "Standard_LRS",
           "postPlannedFailoverRedundancy": "Standard_GRS"
          },
          "isHnsEnabled": true,
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": [],
           "resourceAccessRules": [
            {
             "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
             "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
            }
           ]
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto8596-internetrouting.web.core.windows.net/",
            "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
            "file": "https://sto8596-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false,
          "isSkuConversionBlocked": false,
          "accountMigrationInProgress": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:9",
      "description": "May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus."
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:7",
      "description": "OK -- properties retrieved successfully for the storage account."
     }
    }
   }
  },
  "path:3.patch": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}"
    ]
   },
   "patch": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_Update",
    "description": "The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.",
    "x-ms-examples": {
     "StorageAccountUpdate": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "allowBlobPublicAccess": false,
         "isSftpEnabled": true,
         "isLocalUserEnabled": true,
         "enableExtendedGroups": true,
         "defaultToOAuthAuthentication": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "networkAcls": {
          "resourceAccessRules": [
           {
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
           }
          ],
          "defaultAction": "Allow"
         },
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "keySource": "Microsoft.Storage"
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false,
          "isSftpEnabled": true,
          "isLocalUserEnabled": true,
          "enableExtendedGroups": true,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
           "resourceAccessRules": [
            {
             "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
             "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
            }
           ],
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": []
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto8596-internetrouting.web.core.windows.net/",
            "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
            "file": "https://sto8596-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Storage"
          },
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountEnableAD": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "properties": {
         "azureFilesIdentityBasedAuthentication": {
          "directoryServiceOptions": "AD",
          "activeDirectoryProperties": {
           "domainName": "adtest.com",
           "netBiosDomainName": "adtest.com",
           "forestName": "adtest.com",
           "domainGuid": "aebfc118-9fa9-4732-a21f-d98e41a77ae1",
           "domainSid": "S-1-5-21-2400535526-2334094090-2402026252",
           "azureStorageSid": "S-1-5-21-2400535526-2334094090-2402026252-0012",
           "samAccountName": "sam12498",
           "accountType": "User"
          }
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "azureFilesIdentityBasedAuthentication": {
           "directoryServiceOptions": "AD",
           "activeDirectoryProperties": {
            "domainName": "adtest.com",
            "netBiosDomainName": "adtest.com",
            "forestName": "adtest.com",
            "domainGuid": "aebfc118-9fa9-4732-a21f-d98e41a77ae1",
            "domainSid": "S-1-5-21-2400535526-2334094090-2402026252",
            "azureStorageSid": "S-1-5-21-2400535526-2334094090-2402026252-0012",
            "samAccountName": "sam12498",
            "accountType": "User"
           }
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/"
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountEnableCMK": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "properties": {
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "keySource": "Microsoft.Keyvault",
          "keyvaultproperties": {
           "keyvaulturi": "https://myvault8569.vault.azure.net",
           "keyname": "wrappingKey",
           "keyversion": ""
          }
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "identity": {
          "principalId": "911871cc-ffd1-4fc4-ac11-7a316433ea66",
          "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
          "type": "SystemAssigned"
         },
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Keyvault",
           "keyvaultproperties": {
            "keyvaulturi": "https://myvault8569.vault.azure.net",
            "keyname": "wrappingKey",
            "keyversion": "",
            "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
            "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
           }
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/"
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountUpdateUserAssignedEncryptionIdentityWithCMK": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "identity": {
         "type": "UserAssigned",
         "userAssignedIdentities": {
          "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}": {}
         }
        },
        "sku": {
         "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "keyvaultproperties": {
           "keyvaulturi": "https://myvault8569.vault.azure.net",
           "keyname": "wrappingKey",
           "keyversion": ""
          },
          "keySource": "Microsoft.Keyvault",
          "identity": {
           "userAssignedIdentity": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}"
          }
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "identity": {
          "userAssignedIdentities": {
           "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}": {
            "principalId": "8d823284-1060-42a5-9ec4-ed3d831e24d7",
            "clientId": "fbaa6278-1ecc-415c-819f-6e2058d3acb5"
           }
          },
          "type": "UserAssigned"
         },
         "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
         },
         "kind": "StorageV2",
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "name": "sto4445",
         "type": "Microsoft.Storage/storageAccounts",
         "location": "eastus",
         "tags": {},
         "properties": {
          "privateEndpointConnections": [],
          "networkAcls": {
           "bypass": "AzureServices",
           "virtualNetworkRules": [],
           "ipRules": [],
           "defaultAction": "Allow"
          },
          "supportsHttpsTrafficOnly": true,
          "encryption": {
           "identity": {
            "userAssignedIdentity": "/subscriptions/{subscription-id}/resourcegroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}"
           },
           "keyvaultproperties": {
            "keyvaulturi": "https://myvault8569.vault.azure.net",
            "keyname": "wrappingKey",
            "keyversion": "",
            "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
            "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
           },
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2020-12-15T00:43:14.1739587Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2020-12-15T00:43:14.1739587Z"
            }
           },
           "keySource": "Microsoft.Keyvault"
          },
          "accessTier": "Hot",
          "provisioningState": "Succeeded",
          "creationTime": "2020-12-15T00:43:14.0839093Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/"
          },
          "primaryLocation": "eastus",
          "statusOfPrimary": "available"
         }
        }
       }
      }
     },
     "StorageAccountUpdateDisablePublicNetworkAccess": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "allowBlobPublicAccess": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "networkAcls": {
          "resourceAccessRules": [
           {
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
           }
          ],
          "defaultAction": "Allow"
         },
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "keySource": "Microsoft.Storage"
         },
         "publicNetworkAccess": "Disabled"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
           "resourceAccessRules": [
            {
             "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
             "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
            }
           ],
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": []
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto8596-internetrouting.web.core.windows.net/",
            "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
            "file": "https://sto8596-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Storage"
          },
          "publicNetworkAccess": "Disabled",
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountUpdateWithImmutabilityPolicy": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "properties": {
         "immutableStorageWithVersioning": {
          "immutabilityPolicy": {
           "immutabilityPeriodSinceCreationInDays": 15,
           "allowProtectedAppendWrites": true,
           "state": "Locked"
          },
          "enabled": true
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "immutableStorageWithVersioning": {
           "immutabilityPolicy": {
            "immutabilityPeriodSinceCreationInDays": 15,
            "allowProtectedAppendWrites": true,
            "state": "Locked"
           },
           "enabled": true
          }
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     },
     "StorageAccountUpdateUserAssignedIdentityWithFederatedIdentityClientId": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res131918",
       "accountName": "sto131918",
       "api-version": "2024-01-01",
       "parameters": {
        "identity": {
         "type": "UserAssigned",
         "userAssignedIdentities": {
          "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}": {}
         }
        },
        "sku": {
         "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "keyvaultproperties": {
           "keyvaulturi": "https://myvault8569.vault.azure.net",
           "keyname": "wrappingKey",
           "keyversion": ""
          },
          "keySource": "Microsoft.Keyvault",
          "identity": {
           "userAssignedIdentity": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}",
           "federatedIdentityClientId": "3109d1c4-a5de-4d84-8832-feabb916a4b6"
          }
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "identity": {
          "userAssignedIdentities": {
           "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}": {
            "principalId": "8d823284-1060-42a5-9ec4-ed3d831e24d7",
            "clientId": "fbaa6278-1ecc-415c-819f-6e2058d3acb5"
           }
          },
          "type": "UserAssigned"
         },
         "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
         },
         "kind": "StorageV2",
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
         "name": "sto4445",
         "type": "Microsoft.Storage/storageAccounts",
         "location": "eastus",
         "tags": {},
         "properties": {
          "privateEndpointConnections": [],
          "networkAcls": {
           "bypass": "AzureServices",
           "virtualNetworkRules": [],
           "ipRules": [],
           "defaultAction": "Allow"
          },
          "supportsHttpsTrafficOnly": true,
          "encryption": {
           "identity": {
            "userAssignedIdentity": "/subscriptions/{subscription-id}/resourcegroups/res9101/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{managed-identity-name}",
            "federatedIdentityClientId": "3109d1c4-a5de-4d84-8832-feabb916a4b6"
           },
           "keyvaultproperties": {
            "keyvaulturi": "https://myvault8569.vault.azure.net",
            "keyname": "wrappingKey",
            "keyversion": "",
            "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
            "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
           },
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2020-12-15T00:43:14.1739587Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2020-12-15T00:43:14.1739587Z"
            }
           },
           "keySource": "Microsoft.Keyvault"
          },
          "accessTier": "Hot",
          "provisioningState": "Succeeded",
          "creationTime": "2020-12-15T00:43:14.0839093Z",
          "primaryEndpoints": {
           "web": "https://sto4445.web.core.windows.net/",
           "dfs": "https://sto4445.dfs.core.windows.net/",
           "blob": "https://sto4445.blob.core.windows.net/",
           "file": "https://sto4445.file.core.windows.net/",
           "queue": "https://sto4445.queue.core.windows.net/",
           "table": "https://sto4445.table.core.windows.net/"
          },
          "primaryLocation": "eastus",
          "statusOfPrimary": "available"
         }
        }
       }
      }
     },
     "StorageAccountUpdateAllowedCopyScopeToAAD": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9407",
       "accountName": "sto8596",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "properties": {
         "keyPolicy": {
          "keyExpirationPeriodInDays": 20
         },
         "sasPolicy": {
          "sasExpirationPeriod": "1.15:59:59",
          "expirationAction": "Log"
         },
         "allowBlobPublicAccess": false,
         "minimumTlsVersion": "TLS1_2",
         "allowSharedKeyAccess": true,
         "networkAcls": {
          "resourceAccessRules": [
           {
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
           }
          ],
          "defaultAction": "Allow"
         },
         "routingPreference": {
          "routingChoice": "MicrosoftRouting",
          "publishMicrosoftEndpoints": true,
          "publishInternetEndpoints": true
         },
         "encryption": {
          "services": {
           "file": {
            "keyType": "Account",
            "enabled": true
           },
           "blob": {
            "keyType": "Account",
            "enabled": true
           }
          },
          "keySource": "Microsoft.Storage"
         },
         "allowedCopyScope": "AAD"
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
         "kind": "Storage",
         "location": "eastus2(stage)",
         "name": "sto8596",
         "properties": {
          "keyPolicy": {
           "keyExpirationPeriodInDays": 20
          },
          "sasPolicy": {
           "sasExpirationPeriod": "1.15:59:59",
           "expirationAction": "Log"
          },
          "keyCreationTime": {
           "key1": "2021-03-18T04:42:22.4322836Z",
           "key2": "2021-03-18T04:42:22.4322836Z"
          },
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "allowSharedKeyAccess": true,
          "creationTime": "2017-06-01T02:42:41.7633306Z",
          "networkAcls": {
           "resourceAccessRules": [
            {
             "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
             "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
            }
           ],
           "bypass": "AzureServices",
           "defaultAction": "Allow",
           "ipRules": [],
           "virtualNetworkRules": []
          },
          "primaryEndpoints": {
           "web": "https://sto8596.web.core.windows.net/",
           "dfs": "https://sto8596.dfs.core.windows.net/",
           "blob": "https://sto8596.blob.core.windows.net/",
           "file": "https://sto8596.file.core.windows.net/",
           "queue": "https://sto8596.queue.core.windows.net/",
           "table": "https://sto8596.table.core.windows.net/",
           "microsoftEndpoints": {
            "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
            "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
            "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
            "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
            "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
           },
           "internetEndpoints": {
            "web": "https://sto8596-internetrouting.web.core.windows.net/",
            "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
            "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
            "file": "https://sto8596-internetrouting.file.core.windows.net/"
           }
          },
          "primaryLocation": "eastus2(stage)",
          "provisioningState": "Succeeded",
          "routingPreference": {
           "routingChoice": "MicrosoftRouting",
           "publishMicrosoftEndpoints": true,
           "publishInternetEndpoints": true
          },
          "encryption": {
           "services": {
            "file": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            },
            "blob": {
             "keyType": "Account",
             "enabled": true,
             "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
            }
           },
           "keySource": "Microsoft.Storage"
          },
          "allowedCopyScope": "AAD",
          "secondaryLocation": "northcentralus(stage)",
          "statusOfPrimary": "available",
          "statusOfSecondary": "available",
          "supportsHttpsTrafficOnly": false
         },
         "sku": {
          "name": "Standard_GRS",
          "tier": "Standard"
         },
         "tags": {
          "key1": "value1",
          "key2": "value2"
         },
         "type": "Microsoft.Storage/storageAccounts"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "parameters",
     "$ref": "#/components/requestBodies/requestBodies:2",
     "description": "The parameters to provide for the updated account."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:8",
      "description": "OK -- storage account properties updated successfully."
     }
    }
   }
  },
  "path:4": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1deletedAccounts"
    ]
   }
  },
  "path:4.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1deletedAccounts"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "DeletedAccounts"
    ],
    "operationId": "DeletedAccounts_List",
    "description": "Lists deleted accounts under the subscription.",
    "x-ms-examples": {
     "DeletedAccountList": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/providers/Microsoft.Storage/locations/eastus/deletedAccounts/sto1125",
           "name": "sto1125",
           "type": "Microsoft.Storage/deletedAccounts",
           "properties": {
            "storageAccountResourceId": "/subscriptions/{subscription-id}/resourceGroups/sto/providers/Microsoft.Storage/storageAccounts/sto1125",
            "location": "eastus",
            "restoreReference": "sto1125|2020-08-17T03:35:37.4588848Z",
            "creationTime": "2020-08-17T03:35:37.4588848Z",
            "deletionTime": "2020-08-17T04:41:37.3442475Z"
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/providers/Microsoft.Storage/locations/eastus/deletedAccounts/sto1126",
           "name": "sto1126",
           "type": "Microsoft.Storage/deletedAccounts",
           "properties": {
            "storageAccountResourceId": "/subscriptions/{subscription-id}/resourceGroups/sto/providers/Microsoft.Storage/storageAccounts/sto1126",
            "location": "eastus",
            "restoreReference": "sto1126|2020-08-17T03:35:37.4588848Z",
            "creationTime": "2020-08-19T15:10:21.5902165Z",
            "deletionTime": "2020-08-20T06:11:55.1957302Z"
           }
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:9",
      "description": "OK -- List of deleted accounts was retrieved and returned successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:10",
      "description": "Error response describing why the operation failed."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:5": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1deletedAccounts~1{deletedAccountName}"
    ]
   }
  },
  "path:5.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1deletedAccounts~1{deletedAccountName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "DeletedAccounts"
    ],
    "operationId": "DeletedAccounts_Get",
    "description": "Get properties of specified deleted account resource.",
    "x-ms-examples": {
     "DeletedAccountGet": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "deletedAccountName": "sto1125",
       "location": "eastus",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/providers/Microsoft.Storage/locations/eastus/deletedAccounts/sto1125",
         "name": "sto1125",
         "type": "Microsoft.Storage/deletedAccounts",
         "properties": {
          "storageAccountResourceId": "/subscriptions/{subscription-id}/resourceGroups/sto/providers/Microsoft.Storage/storageAccounts/sto1125",
          "location": "eastus",
          "restoreReference": "sto1125|2020-08-17T03:35:37.4588848Z",
          "creationTime": "2020-08-17T03:35:37.4588848Z",
          "deletionTime": "2020-08-17T04:41:37.3442475Z"
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:2"
     },
     {
      "$ref": "#/components/parameters/parameters:10",
      "description": "The location of the deleted storage account."
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:11",
      "description": "OK -- properties retrieved and returned successfully for the deleted account."
     },
     "default": {
      "$ref": "#/components/responses/responses:12",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:6": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1storageAccounts"
    ]
   }
  },
  "path:6.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1storageAccounts"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_List",
    "description": "Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.",
    "x-ms-examples": {
     "StorageAccountList": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res2627/providers/Microsoft.Storage/storageAccounts/sto1125",
           "kind": "Storage",
           "location": "eastus",
           "name": "sto1125",
           "properties": {
            "isHnsEnabled": true,
            "creationTime": "2017-05-24T13:28:53.4540398Z",
            "primaryEndpoints": {
             "web": "https://sto1125.web.core.windows.net/",
             "dfs": "https://sto1125.dfs.core.windows.net/",
             "blob": "https://sto1125.blob.core.windows.net/",
             "file": "https://sto1125.file.core.windows.net/",
             "queue": "https://sto1125.queue.core.windows.net/",
             "table": "https://sto1125.table.core.windows.net/",
             "microsoftEndpoints": {
              "web": "https://sto1125-microsoftrouting.web.core.windows.net/",
              "dfs": "https://sto1125-microsoftrouting.dfs.core.windows.net/",
              "blob": "https://sto1125-microsoftrouting.blob.core.windows.net/",
              "file": "https://sto1125-microsoftrouting.file.core.windows.net/",
              "queue": "https://sto1125-microsoftrouting.queue.core.windows.net/",
              "table": "https://sto1125-microsoftrouting.table.core.windows.net/"
             },
             "internetEndpoints": {
              "web": "https://sto1125-internetrouting.web.core.windows.net/",
              "dfs": "https://sto1125-internetrouting.dfs.core.windows.net/",
              "blob": "https://sto1125-internetrouting.blob.core.windows.net/",
              "file": "https://sto1125-internetrouting.file.core.windows.net/"
             }
            },
            "primaryLocation": "eastus",
            "provisioningState": "Succeeded",
            "routingPreference": {
             "routingChoice": "MicrosoftRouting",
             "publishMicrosoftEndpoints": true,
             "publishInternetEndpoints": true
            },
            "encryption": {
             "services": {
              "file": {
               "keyType": "Account",
               "enabled": true,
               "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
              },
              "blob": {
               "keyType": "Account",
               "enabled": true,
               "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
              }
             },
             "keySource": "Microsoft.Storage"
            },
            "secondaryLocation": "centraluseuap",
            "statusOfPrimary": "available",
            "statusOfSecondary": "available",
            "supportsHttpsTrafficOnly": false
           },
           "sku": {
            "name": "Standard_GRS",
            "tier": "Standard"
           },
           "tags": {
            "key1": "value1",
            "key2": "value2"
           },
           "type": "Microsoft.Storage/storageAccounts"
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/testcmk3/providers/Microsoft.Storage/storageAccounts/sto3699",
           "identity": {
            "principalId": "356d057d-cba5-44dd-8a30-b2e547bc416b",
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "type": "SystemAssigned"
           },
           "kind": "Storage",
           "location": "eastus",
           "name": "sto3699",
           "properties": {
            "creationTime": "2017-05-24T10:06:30.6093014Z",
            "primaryEndpoints": {
             "blob": "https://sto3699.blob.core.windows.net/",
             "file": "https://sto3699.file.core.windows.net/",
             "queue": "https://sto3699.queue.core.windows.net/",
             "table": "https://sto3699.table.core.windows.net/"
            },
            "primaryLocation": "eastus",
            "provisioningState": "Succeeded",
            "secondaryLocation": "centraluseuap",
            "statusOfPrimary": "available",
            "statusOfSecondary": "available",
            "supportsHttpsTrafficOnly": false
           },
           "sku": {
            "name": "Standard_GRS",
            "tier": "Standard"
           },
           "tags": {
            "key1": "value1",
            "key2": "value2"
           },
           "type": "Microsoft.Storage/storageAccounts"
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
           "identity": {
            "principalId": "911871cc-ffd1-4fc4-ac11-7a316433ea66",
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "type": "SystemAssigned"
           },
           "kind": "Storage",
           "location": "eastus2(stage)",
           "name": "sto8596",
           "properties": {
            "geoReplicationStats": {
             "status": "Live",
             "lastSyncTime": "2018-10-30T00:25:34Z",
             "canFailover": true
            },
            "isHnsEnabled": true,
            "creationTime": "2017-06-01T02:42:41.7633306Z",
            "networkAcls": {
             "resourceAccessRules": [
              {
               "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
               "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace"
              }
             ],
             "bypass": "AzureServices",
             "defaultAction": "Allow",
             "ipRules": [],
             "virtualNetworkRules": []
            },
            "primaryEndpoints": {
             "web": "https://sto8596.web.core.windows.net/",
             "dfs": "https://sto8596.dfs.core.windows.net/",
             "blob": "https://sto8596.blob.core.windows.net/",
             "file": "https://sto8596.file.core.windows.net/",
             "queue": "https://sto8596.queue.core.windows.net/",
             "table": "https://sto8596.table.core.windows.net/",
             "microsoftEndpoints": {
              "web": "https://sto8596-microsoftrouting.web.core.windows.net/",
              "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
              "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
              "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
              "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
              "table": "https://sto8596-microsoftrouting.table.core.windows.net/"
             },
             "internetEndpoints": {
              "web": "https://sto8596-internetrouting.web.core.windows.net/",
              "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
              "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
              "file": "https://sto8596-internetrouting.file.core.windows.net/"
             }
            },
            "primaryLocation": "eastus2(stage)",
            "provisioningState": "Succeeded",
            "routingPreference": {
             "routingChoice": "MicrosoftRouting",
             "publishMicrosoftEndpoints": true,
             "publishInternetEndpoints": true
            },
            "encryption": {
             "services": {
              "file": {
               "keyType": "Account",
               "enabled": true,
               "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
              },
              "blob": {
               "keyType": "Account",
               "enabled": true,
               "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
              }
             },
             "keySource": "Microsoft.Keyvault",
             "keyvaultproperties": {
              "keyvaulturi": "https://myvault8569.vault.azure.net",
              "keyname": "wrappingKey",
              "keyversion": "",
              "currentVersionedKeyIdentifier": "https://myvault8569.vault.azure.net/keys/wrappingKey/0682afdd9c104f4285df20107e956cad",
              "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
             }
            },
            "secondaryLocation": "northcentralus(stage)",
            "statusOfPrimary": "available",
            "statusOfSecondary": "available",
            "supportsHttpsTrafficOnly": false
           },
           "sku": {
            "name": "Standard_GRS",
            "tier": "Standard"
           },
           "tags": {
            "key1": "value1",
            "key2": "value2"
           },
           "type": "Microsoft.Storage/storageAccounts"
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/testcmk3/providers/Microsoft.Storage/storageAccounts/sto6637",
           "identity": {
            "principalId": "911871cc-ffd1-4fc4-ac11-7a316433ea66",
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "type": "SystemAssigned"
           },
           "kind": "Storage",
           "location": "eastus",
           "name": "sto6637",
           "properties": {
            "creationTime": "2017-05-24T10:09:39.5625175Z",
            "primaryEndpoints": {
             "blob": "https://sto6637.blob.core.windows.net/",
             "file": "https://sto6637.file.core.windows.net/",
             "queue": "https://sto6637.queue.core.windows.net/",
             "table": "https://sto6637.table.core.windows.net/"
            },
            "primaryLocation": "eastus",
            "provisioningState": "Succeeded",
            "secondaryLocation": "centraluseuap",
            "statusOfPrimary": "available",
            "statusOfSecondary": "available",
            "supportsHttpsTrafficOnly": false
           },
           "sku": {
            "name": "Standard_GRS",
            "tier": "Standard"
           },
           "tags": {
            "key1": "value1",
            "key2": "value2"
           },
           "type": "Microsoft.Storage/storageAccounts"
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res8186/providers/Microsoft.Storage/storageAccounts/sto834",
           "kind": "Storage",
           "location": "eastus",
           "name": "sto834",
           "properties": {
            "creationTime": "2017-05-24T13:28:20.8686541Z",
            "primaryEndpoints": {
             "blob": "https://sto834.blob.core.windows.net/",
             "file": "https://sto834.file.core.windows.net/",
             "queue": "https://sto834.queue.core.windows.net/",
             "table": "https://sto834.table.core.windows.net/"
            },
            "primaryLocation": "eastus",
            "provisioningState": "Succeeded",
            "secondaryLocation": "centraluseuap",
            "statusOfPrimary": "available",
            "statusOfSecondary": "available",
            "supportsHttpsTrafficOnly": false
           },
           "sku": {
            "name": "Standard_GRS",
            "tier": "Standard"
           },
           "tags": {
            "key1": "value1",
            "key2": "value2"
           },
           "type": "Microsoft.Storage/storageAccounts"
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/testcmk3/providers/Microsoft.Storage/storageAccounts/sto9174",
           "identity": {
            "principalId": "933e3ddf-1802-4a51-9469-18a33b576f88",
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "type": "SystemAssigned"
           },
           "kind": "Storage",
           "location": "eastus",
           "name": "sto9174",
           "properties": {
            "creationTime": "2017-05-24T09:46:19.6556989Z",
            "primaryEndpoints": {
             "blob": "https://sto9174.blob.core.windows.net/",
             "file": "https://sto9174.file.core.windows.net/",
             "queue": "https://sto9174.queue.core.windows.net/",
             "table": "https://sto9174.table.core.windows.net/"
            },
            "primaryLocation": "eastus",
            "provisioningState": "Succeeded",
            "secondaryLocation": "centraluseuap",
            "statusOfPrimary": "available",
            "statusOfSecondary": "available",
            "supportsHttpsTrafficOnly": false
           },
           "sku": {
            "name": "Standard_GRS",
            "tier": "Standard"
           },
           "tags": {
            "key1": "value1",
            "key2": "value2"
           },
           "type": "Microsoft.Storage/storageAccounts"
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:13",
      "description": "OK -- List of storage accounts was retrieved and returned successfully."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:7": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts"
    ]
   }
  },
  "path:7.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_ListByResourceGroup",
    "description": "Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.",
    "x-ms-examples": {
     "StorageAccountListByResourceGroup": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6117",
       "api-version": "2024-01-01"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6117/providers/Microsoft.Storage/storageAccounts/sto4036",
           "kind": "Storage",
           "location": "eastus",
           "name": "sto4036",
           "properties": {
            "isHnsEnabled": true,
            "creationTime": "2017-05-24T13:24:47.818801Z",
            "primaryEndpoints": {
             "web": "https://sto4036.web.core.windows.net/",
             "dfs": "https://sto4036.dfs.core.windows.net/",
             "blob": "https://sto4036.blob.core.windows.net/",
             "file": "https://sto4036.file.core.windows.net/",
             "queue": "https://sto4036.queue.core.windows.net/",
             "table": "https://sto4036.table.core.windows.net/"
            },
            "primaryLocation": "eastus",
            "provisioningState": "Succeeded",
            "secondaryLocation": "centraluseuap",
            "statusOfPrimary": "available",
            "statusOfSecondary": "available",
            "supportsHttpsTrafficOnly": false
           },
           "sku": {
            "name": "Standard_GRS",
            "tier": "Standard"
           },
           "tags": {
            "key1": "value1",
            "key2": "value2"
           },
           "type": "Microsoft.Storage/storageAccounts"
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6117/providers/Microsoft.Storage/storageAccounts/sto4452",
           "kind": "Storage",
           "location": "eastus",
           "name": "sto4452",
           "properties": {
            "creationTime": "2017-05-24T13:24:15.7068366Z",
            "primaryEndpoints": {
             "blob": "https://sto4452.blob.core.windows.net/",
             "file": "https://sto4452.file.core.windows.net/",
             "queue": "https://sto4452.queue.core.windows.net/",
             "table": "https://sto4452.table.core.windows.net/"
            },
            "primaryLocation": "eastus",
            "provisioningState": "Succeeded",
            "secondaryLocation": "centraluseuap",
            "statusOfPrimary": "available",
            "statusOfSecondary": "available",
            "supportsHttpsTrafficOnly": false
           },
           "sku": {
            "name": "Standard_GRS",
            "tier": "Standard"
           },
           "tags": {
            "key1": "value1",
            "key2": "value2"
           },
           "type": "Microsoft.Storage/storageAccounts"
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:14",
      "description": "OK -- List of storage accounts in the given resource group retrieved and returned successfully."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:8": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1listKeys"
    ]
   }
  },
  "path:8.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1listKeys"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_ListKeys",
    "description": "Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.",
    "x-ms-examples": {
     "StorageAccountListKeys": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res418",
       "accountName": "sto2220",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "keys": [
          {
           "keyName": "key1",
           "permissions": "Full",
           "value": "<value>"
          },
          {
           "keyName": "key2",
           "permissions": "Full",
           "value": "<value>"
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:11",
      "description": "Specifies type of the key to be listed. Possible value is kerb."
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:15",
      "description": "OK -- list of keys retrieved and returned successfully."
     }
    }
   }
  },
  "path:9": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1regenerateKey"
    ]
   }
  },
  "path:9.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1regenerateKey"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_RegenerateKey",
    "description": "Regenerates one of the access keys or Kerberos keys for the specified storage account.",
    "x-ms-examples": {
     "StorageAccountRegenerateKey": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res4167",
       "accountName": "sto3539",
       "api-version": "2024-01-01",
       "monitor": "true",
       "regenerateKey": {
        "keyName": "key2"
       }
      },
      "responses": {
       "200": {
        "body": {
         "keys": [
          {
           "keyName": "key1",
           "permissions": "Full",
           "value": "<value>"
          },
          {
           "keyName": "key2",
           "permissions": "Full",
           "value": "<value>"
          }
         ]
        }
       }
      }
     },
     "StorageAccountRegenerateKerbKey": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res4167",
       "accountName": "sto3539",
       "api-version": "2024-01-01",
       "monitor": "true",
       "regenerateKey": {
        "keyName": "kerb1"
       }
      },
      "responses": {
       "200": {
        "body": {
         "keys": [
          {
           "keyName": "key1",
           "permissions": "Full",
           "value": "<value>"
          },
          {
           "keyName": "key2",
           "permissions": "Full",
           "value": "<value>"
          },
          {
           "keyName": "kerb1",
           "permissions": "Full",
           "value": "<value>"
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "regenerateKey",
     "$ref": "#/components/requestBodies/requestBodies:3",
     "description": "Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:16",
      "description": "OK -- specified key regenerated successfully."
     }
    }
   }
  },
  "path:10": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1usages"
    ]
   }
  },
  "path:10.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1usages"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "LocationUsage"
    ],
    "operationId": "Usages_ListByLocation",
    "description": "Gets the current usage count and the limit for the resources of the location under the subscription.",
    "x-ms-examples": {
     "UsageList": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "location": "eastus2(stage)",
       "api-version": "2024-01-01"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "unit": "Count",
           "currentValue": 55,
           "limit": 250,
           "name": {
            "value": "StorageAccounts",
            "localizedValue": "Storage Accounts"
           }
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:12",
      "description": "The location of the Azure Storage resource."
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:17",
      "description": "OK -- current usage count and limit retrieved and returned successfully."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:11": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListAccountSas"
    ]
   }
  },
  "path:11.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListAccountSas"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_ListAccountSAS",
    "description": "List SAS credentials of a storage account.",
    "x-ms-examples": {
     "StorageAccountListAccountSAS": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7985",
       "accountName": "sto8588",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "signedServices": "b",
        "signedResourceTypes": "s",
        "signedPermission": "r",
        "signedProtocol": "https,http",
        "signedStart": "2017-05-24T10:42:03.1567373Z",
        "signedExpiry": "2017-05-24T11:42:03.1567373Z",
        "keyToSign": "key1"
       }
      },
      "responses": {
       "200": {
        "body": {
         "accountSasToken": "sv=2015-04-05&ss=b&srt=s&sp=r&st=2017-05-24T10%3A42%3A03Z&se=2017-05-24T11%3A42%3A03Z&spr=https,http&sig=Z0I%2BEpM%2BPPlTC8ApfUf%2BcffO2aahMgZim3U0iArqsS0%3D"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "parameters",
     "$ref": "#/components/requestBodies/requestBodies:4",
     "description": "The parameters to provide to list SAS credentials for the storage account."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:18",
      "description": "OK -- returned the account SAS created for the storage account requested."
     }
    }
   }
  },
  "path:12": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListServiceSas"
    ]
   }
  },
  "path:12.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListServiceSas"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_ListServiceSAS",
    "description": "List service SAS credentials of a specific resource.",
    "x-ms-examples": {
     "StorageAccountListServiceSAS": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7439",
       "accountName": "sto1299",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "canonicalizedResource": "/blob/sto1299/music",
        "signedResource": "c",
        "signedPermission": "l",
        "signedExpiry": "2017-05-24T11:32:48.8457197Z"
       }
      },
      "responses": {
       "200": {
        "body": {
         "serviceSasToken": "sv=2015-04-05&sr=c&se=2017-05-24T11%3A32%3A48Z&sp=l&sig=PoF8yBUGixsjzwroLmw7vG3VbGz4KB2woZC2D4C2oio%3D"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "parameters",
     "$ref": "#/components/requestBodies/requestBodies:5",
     "description": "The parameters to provide to list service SAS credentials."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:19",
      "description": "OK -- returned the service SAS created for the storage service requested."
     }
    }
   }
  },
  "path:13": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1failover"
    ]
   }
  },
  "path:13.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1failover"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_Failover",
    "description": "A failover request can be triggered for a storage account in the event a primary endpoint becomes unavailable for any reason. The failover occurs from the storage account's primary cluster to the secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and the account is converted to LRS. In the case of a Planned Failover, the primary and secondary clusters are swapped after failover and the account remains geo-replicated. Failover should continue to be used in the event of availability issues as Planned failover is only available while the primary and secondary endpoints are available. The primary use case of a Planned Failover is disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter to 'Planned'. Learn more about the failover options here- https://learn.microsoft.com/azure/storage/common/storage-disaster-recovery-guidance",
    "x-ms-examples": {
     "StorageAccountFailover": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res4228",
       "accountName": "sto2434",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {},
       "202": {
        "headers": {
         "Location": "https://endpoint:port/subscriptions/{subscription-id}/providers/Microsoft.Storage/locations/{location}/asyncoperations/{operationid}?monitor=true&api-version=2022-09-01"
        }
       }
      }
     },
     "StorageAccountFailoverPlanned": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res4228",
       "accountName": "sto2434",
       "api-version": "2024-01-01",
       "monitor": "true",
       "failoverType": "Planned"
      },
      "responses": {
       "200": {},
       "202": {
        "headers": {
         "Location": "https://endpoint:port/subscriptions/{subscription-id}/providers/Microsoft.Storage/locations/{location}/asyncoperations/{operationid}?monitor=true&api-version=2022-09-01"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:13",
      "description": "The parameter is set to 'Planned' to indicate whether a Planned failover is requested."
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:20",
      "description": "OK -- Returned when the storage account failover is completed, and the secondary cluster has become primary."
     },
     "202": {
      "$ref": "#/components/responses/responses:21",
      "description": "Accepted -- Failover request accepted; operation will complete asynchronously."
     }
    },
    "x-ms-long-running-operation": true,
    "x-ms-long-running-operation-options": {
     "final-state-via": "location"
    }
   }
  },
  "path:14": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1hnsonmigration"
    ]
   }
  },
  "path:14.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1hnsonmigration"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_HierarchicalNamespaceMigration",
    "description": "Live Migration of storage account to enable Hns",
    "x-ms-examples": {
     "StorageAccountHierarchicalNamespaceMigration": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res4228",
       "accountName": "sto2434",
       "api-version": "2024-01-01",
       "requestType": "HnsOnValidationRequest"
      },
      "responses": {
       "200": {},
       "202": {
        "headers": {
         "Location": "https://endpoint:port/subscriptions/{subscription-id}/providers/Microsoft.Storage/locations/{location}/asyncoperations/{operationid}?monitor=true&api-version=2022-09-01"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:14",
      "description": "Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account."
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:22",
      "description": "OK -- Returned when the storage account migration to hierarchical namespace is completed."
     },
     "202": {
      "$ref": "#/components/responses/responses:23",
      "description": "Accepted -- Hierarchical namespace migration request accepted; operation will complete asynchronously."
     },
     "default": {
      "$ref": "#/components/responses/responses:24",
      "description": "Error response describing why the operation failed."
     }
    },
    "x-ms-long-running-operation": true,
    "x-ms-long-running-operation-options": {
     "final-state-via": "location"
    }
   }
  },
  "path:15": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1aborthnsonmigration"
    ]
   }
  },
  "path:15.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1aborthnsonmigration"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_AbortHierarchicalNamespaceMigration",
    "description": "Abort live Migration of storage account to enable Hns",
    "x-ms-examples": {
     "StorageAccountAbortHierarchicalNamespaceMigration": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res4228",
       "accountName": "sto2434",
       "api-version": "2024-01-01"
      },
      "responses": {
       "200": {},
       "202": {
        "headers": {
         "Location": "https://endpoint:port/subscriptions/{subscription-id}/providers/Microsoft.Storage/locations/{location}/asyncoperations/{operationid}?monitor=true&api-version=2022-09-01"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:25",
      "description": "OK -- Returned when the storage account migration to hierarchical namespace is aborted."
     },
     "202": {
      "$ref": "#/components/responses/responses:26",
      "description": "Accepted -- Abort hierarchical namespace migration request accepted; operation will complete asynchronously."
     },
     "default": {
      "$ref": "#/components/responses/responses:27",
      "description": "Error response describing why the operation failed."
     }
    },
    "x-ms-long-running-operation": true,
    "x-ms-long-running-operation-options": {
     "final-state-via": "location"
    }
   }
  },
  "path:16": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/startAccountMigration",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1startAccountMigration"
    ]
   }
  },
  "path:16.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/startAccountMigration",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1startAccountMigration"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "AccountMigrations"
    ],
    "operationId": "StorageAccounts_CustomerInitiatedMigration",
    "description": "Account Migration request can be triggered for a storage account to change its redundancy level. The migration updates the non-zonal redundant storage account to a zonal redundant account or vice-versa in order to have better reliability and availability. Zone-redundant storage (ZRS) replicates your storage account synchronously across three Azure availability zones in the primary region.",
    "x-ms-examples": {
     "StorageAccountPostMigration": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "resource-group-name",
       "accountName": "accountname",
       "api-version": "2024-01-01",
       "monitor": "true",
       "parameters": {
        "properties": {
         "targetSkuName": "Standard_ZRS"
        }
       }
      },
      "responses": {
       "200": {},
       "202": {
        "headers": {
         "location": "https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000?api-version=2022-09-01"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "parameters",
     "$ref": "#/components/requestBodies/requestBodies:6",
     "description": "The request parameters required to perform storage account migration."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:28",
      "description": "OK -- Returned when the request is just for validating the migration request, it does not actually initiate migration; applicable in cross region migration currently."
     },
     "202": {
      "$ref": "#/components/responses/responses:29",
      "description": "Accepted -- Migration request accepted; operation will complete asynchronously."
     },
     "default": {
      "$ref": "#/components/responses/responses:30",
      "description": "Error response describing why the operation failed."
     }
    },
    "x-ms-long-running-operation": true,
    "x-ms-long-running-operation-options": {
     "final-state-via": "location"
    }
   }
  },
  "path:17": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/accountMigrations/{migrationName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1accountMigrations~1{migrationName}"
    ]
   }
  },
  "path:17.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/accountMigrations/{migrationName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1accountMigrations~1{migrationName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "AccountMigrations"
    ],
    "operationId": "StorageAccounts_GetCustomerInitiatedMigration",
    "description": "Gets the status of the ongoing migration for the specified storage account.",
    "x-ms-examples": {
     "StorageAccountGetMigrationFailed": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "resource-group-name",
       "accountName": "accountname",
       "api-version": "2024-01-01",
       "migrationName": "default",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/accountMigrations/default",
         "name": "default",
         "type": "Microsoft.Storage/storageAccounts/accountMigrations",
         "properties": {
          "targetSkuName": "Standard_ZRS",
          "migrationStatus": "Failed",
          "migrationFailedReason": "ZrsNotSupportedForAccountWithArchiveData",
          "migrationFailedDetailedReason": "ZRS is not supported for accounts with archive data."
         }
        }
       }
      }
     },
     "StorageAccountGetMigrationInProgress": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "resource-group-name",
       "accountName": "accountname",
       "api-version": "2024-01-01",
       "migrationName": "default",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/accountMigrations/default",
         "name": "default",
         "type": "Microsoft.Storage/storageAccounts/accountMigrations",
         "properties": {
          "targetSkuName": "Standard_ZRS",
          "migrationStatus": "InProgress"
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:4"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:31",
      "description": "OK -- Get the details of the ongoing or completed migration successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:32",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:18": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1restoreBlobRanges"
    ]
   }
  },
  "path:18.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1restoreBlobRanges"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_RestoreBlobRanges",
    "description": "Restore blobs in the specified blob ranges",
    "x-ms-examples": {
     "BlobRangesRestore": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res9101",
       "accountName": "sto4445",
       "api-version": "2024-01-01",
       "parameters": {
        "timeToRestore": "2019-04-20T15:30:00.0000000Z",
        "blobRanges": [
         {
          "startRange": "container/blobpath1",
          "endRange": "container/blobpath2"
         },
         {
          "startRange": "container2/blobpath3",
          "endRange": ""
         }
        ]
       }
      },
      "responses": {
       "200": {
        "body": {
         "status": "Succeeded",
         "restoreId": "{restore_id}",
         "parameters": {
          "timeToRestore": "2019-04-20T15:30:00.0000000Z",
          "blobRanges": [
           {
            "startRange": "container/blobpath1",
            "endRange": "container/blobpath2"
           },
           {
            "startRange": "container2/blobpath3",
            "endRange": ""
           }
          ]
         }
        }
       },
       "202": {
        "headers": {
         "location": "https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/locations/eastus/operationResults/00000000-0000-0000-0000-000000000000?api-version=2022-09-01"
        },
        "body": {
         "status": "InProgress",
         "restoreId": "{restore_id}",
         "parameters": {
          "timeToRestore": "2019-04-20T15:30:00.0000000Z",
          "blobRanges": [
           {
            "startRange": "container/blobpath1",
            "endRange": "container/blobpath2"
           },
           {
            "startRange": "container2/blobpath3",
            "endRange": ""
           }
          ]
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "parameters",
     "$ref": "#/components/requestBodies/requestBodies:7",
     "description": "The parameters to provide for restore blob ranges."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:33",
      "description": "OK -- returned when blob ranges are restored completely with the same properties specified in the request body."
     },
     "202": {
      "$ref": "#/components/responses/responses:34",
      "description": "Accepted -- Blob restore request accepted; operation will complete asynchronously."
     }
    },
    "x-ms-long-running-operation": true,
    "x-ms-long-running-operation-options": {
     "final-state-via": "location"
    }
   }
  },
  "path:19": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}"
    ]
   }
  },
  "path:19.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ManagementPolicies"
    ],
    "operationId": "ManagementPolicies_Get",
    "description": "Gets the managementpolicy associated with the specified storage account.",
    "x-ms-examples": {
     "StorageAccountGetManagementPolicies": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer"
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToCool": {
                 "daysAfterModificationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterModificationGreaterThan": 90
                },
                "delete": {
                 "daysAfterModificationGreaterThan": 1000
                }
               },
               "snapshot": {
                "delete": {
                 "daysAfterCreationGreaterThan": 30
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2018-06-08T03:01:55.7168089Z"
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:3"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:35",
      "description": "OK -- Get the managementpolicy successfully."
     }
    }
   }
  },
  "path:19.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ManagementPolicies"
    ],
    "operationId": "ManagementPolicies_CreateOrUpdate",
    "description": "Sets the managementpolicy to the specified storage account.",
    "x-ms-examples": {
     "StorageAccountSetManagementPolicies": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "rules": [
           {
            "enabled": true,
            "name": "olcmtest1",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer1"
              ]
             },
             "actions": {
              "baseBlob": {
               "tierToCool": {
                "daysAfterModificationGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterModificationGreaterThan": 90
               },
               "delete": {
                "daysAfterModificationGreaterThan": 1000
               }
              },
              "snapshot": {
               "delete": {
                "daysAfterCreationGreaterThan": 30
               }
              }
             }
            }
           },
           {
            "enabled": true,
            "name": "olcmtest2",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer2"
              ],
              "blobIndexMatch": [
               {
                "name": "tag1",
                "op": "==",
                "value": "val1"
               },
               {
                "name": "tag2",
                "op": "==",
                "value": "val2"
               }
              ]
             },
             "actions": {
              "baseBlob": {
               "tierToCool": {
                "daysAfterModificationGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterModificationGreaterThan": 90
               },
               "delete": {
                "daysAfterModificationGreaterThan": 1000
               }
              }
             }
            }
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest1",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer1"
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToCool": {
                 "daysAfterModificationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterModificationGreaterThan": 90
                },
                "delete": {
                 "daysAfterModificationGreaterThan": 1000
                }
               },
               "snapshot": {
                "delete": {
                 "daysAfterCreationGreaterThan": 30
                }
               }
              }
             }
            },
            {
             "enabled": true,
             "name": "olcmtest2",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer2"
               ],
               "blobIndexMatch": [
                {
                 "name": "tag1",
                 "op": "==",
                 "value": "val1"
                },
                {
                 "name": "tag2",
                 "op": "==",
                 "value": "val2"
                }
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToCool": {
                 "daysAfterModificationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterModificationGreaterThan": 90
                },
                "delete": {
                 "daysAfterModificationGreaterThan": 1000
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2018-06-08T02:53:39.0932539Z"
         }
        }
       }
      }
     },
     "StorageAccountSetManagementPolicy_LastAccessTimeBasedBlobActions": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "rules": [
           {
            "enabled": true,
            "name": "olcmtest",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer"
              ]
             },
             "actions": {
              "baseBlob": {
               "tierToCool": {
                "daysAfterLastAccessTimeGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterLastAccessTimeGreaterThan": 90
               },
               "delete": {
                "daysAfterLastAccessTimeGreaterThan": 1000
               },
               "enableAutoTierToHotFromCool": true
              },
              "snapshot": {
               "delete": {
                "daysAfterCreationGreaterThan": 30
               }
              }
             }
            }
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer"
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToCool": {
                 "daysAfterLastAccessTimeGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterLastAccessTimeGreaterThan": 90
                },
                "delete": {
                 "daysAfterLastAccessTimeGreaterThan": 1000
                },
                "enableAutoTierToHotFromCool": true
               },
               "snapshot": {
                "delete": {
                 "daysAfterCreationGreaterThan": 30
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2018-06-08T02:53:39.0932539Z"
         }
        }
       }
      }
     },
     "StorageAccountSetManagementPolicyWithSnapshotAndVersion": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "rules": [
           {
            "enabled": true,
            "name": "olcmtest1",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer1"
              ]
             },
             "actions": {
              "baseBlob": {
               "tierToCool": {
                "daysAfterModificationGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterModificationGreaterThan": 90
               },
               "delete": {
                "daysAfterModificationGreaterThan": 1000
               }
              },
              "snapshot": {
               "tierToCool": {
                "daysAfterCreationGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterCreationGreaterThan": 90
               },
               "delete": {
                "daysAfterCreationGreaterThan": 1000
               }
              },
              "version": {
               "tierToCool": {
                "daysAfterCreationGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterCreationGreaterThan": 90
               },
               "delete": {
                "daysAfterCreationGreaterThan": 1000
               }
              }
             }
            }
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest1",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer1"
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToCool": {
                 "daysAfterModificationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterModificationGreaterThan": 90
                },
                "delete": {
                 "daysAfterModificationGreaterThan": 1000
                }
               },
               "snapshot": {
                "tierToCool": {
                 "daysAfterCreationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterCreationGreaterThan": 90
                },
                "delete": {
                 "daysAfterCreationGreaterThan": 1000
                }
               },
               "version": {
                "tierToCool": {
                 "daysAfterCreationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterCreationGreaterThan": 90
                },
                "delete": {
                 "daysAfterCreationGreaterThan": 1000
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2018-06-08T02:53:39.0932539Z"
         }
        }
       }
      }
     },
     "StorageAccountSetManagementPolicyForBlockAndAppendBlobs": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "rules": [
           {
            "enabled": true,
            "name": "olcmtest1",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob",
               "appendBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer1"
              ]
             },
             "actions": {
              "baseBlob": {
               "delete": {
                "daysAfterModificationGreaterThan": 90
               }
              },
              "snapshot": {
               "delete": {
                "daysAfterCreationGreaterThan": 90
               }
              },
              "version": {
               "delete": {
                "daysAfterCreationGreaterThan": 90
               }
              }
             }
            }
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest1",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob",
                "appendBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer1"
               ]
              },
              "actions": {
               "baseBlob": {
                "delete": {
                 "daysAfterModificationGreaterThan": 90
                }
               },
               "snapshot": {
                "delete": {
                 "daysAfterCreationGreaterThan": 90
                }
               },
               "version": {
                "delete": {
                 "daysAfterCreationGreaterThan": 90
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2018-06-08T02:53:39.0932539Z"
         }
        }
       }
      }
     },
     "StorageAccountSetManagementPolicy_LastTierChangeTimeActions": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "rules": [
           {
            "enabled": true,
            "name": "olcmtest",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer"
              ]
             },
             "actions": {
              "baseBlob": {
               "tierToCool": {
                "daysAfterModificationGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterModificationGreaterThan": 90,
                "daysAfterLastTierChangeGreaterThan": 120
               },
               "delete": {
                "daysAfterModificationGreaterThan": 1000
               }
              },
              "snapshot": {
               "tierToArchive": {
                "daysAfterCreationGreaterThan": 30,
                "daysAfterLastTierChangeGreaterThan": 90
               }
              },
              "version": {
               "tierToArchive": {
                "daysAfterCreationGreaterThan": 30,
                "daysAfterLastTierChangeGreaterThan": 90
               }
              }
             }
            }
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer"
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToCool": {
                 "daysAfterModificationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterModificationGreaterThan": 90,
                 "daysAfterLastTierChangeGreaterThan": 120
                },
                "delete": {
                 "daysAfterModificationGreaterThan": 1000
                }
               },
               "snapshot": {
                "tierToArchive": {
                 "daysAfterCreationGreaterThan": 30,
                 "daysAfterLastTierChangeGreaterThan": 90
                }
               },
               "version": {
                "tierToArchive": {
                 "daysAfterCreationGreaterThan": 30,
                 "daysAfterLastTierChangeGreaterThan": 90
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2018-06-08T02:53:39.0932539Z"
         }
        }
       }
      }
     },
     "StorageAccountSetManagementPolicy_BaseBlobDaysAfterCreationActions": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "rules": [
           {
            "enabled": true,
            "name": "olcmtest1",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer1"
              ]
             },
             "actions": {
              "baseBlob": {
               "tierToCool": {
                "daysAfterCreationGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterCreationGreaterThan": 90
               },
               "delete": {
                "daysAfterCreationGreaterThan": 1000
               }
              }
             }
            }
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest1",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer1"
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToCool": {
                 "daysAfterCreationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterCreationGreaterThan": 90
                },
                "delete": {
                 "daysAfterCreationGreaterThan": 1000
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2021-06-08T02:53:39.0932539Z"
         }
        }
       }
      }
     },
     "StorageAccountSetManagementPolicyColdTierActions": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "rules": [
           {
            "enabled": true,
            "name": "olcmtest1",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer1"
              ]
             },
             "actions": {
              "baseBlob": {
               "tierToCool": {
                "daysAfterModificationGreaterThan": 30
               },
               "tierToArchive": {
                "daysAfterModificationGreaterThan": 90
               },
               "tierToCold": {
                "daysAfterModificationGreaterThan": 30
               },
               "delete": {
                "daysAfterModificationGreaterThan": 1000
               }
              },
              "snapshot": {
               "tierToCold": {
                "daysAfterCreationGreaterThan": 30
               },
               "delete": {
                "daysAfterCreationGreaterThan": 30
               }
              },
              "version": {
               "tierToCold": {
                "daysAfterCreationGreaterThan": 30
               },
               "delete": {
                "daysAfterCreationGreaterThan": 30
               }
              }
             }
            }
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest1",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer1"
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToCool": {
                 "daysAfterModificationGreaterThan": 30
                },
                "tierToArchive": {
                 "daysAfterModificationGreaterThan": 90
                },
                "tierToCold": {
                 "daysAfterModificationGreaterThan": 30
                },
                "delete": {
                 "daysAfterModificationGreaterThan": 1000
                }
               },
               "snapshot": {
                "tierToCold": {
                 "daysAfterCreationGreaterThan": 30
                },
                "delete": {
                 "daysAfterCreationGreaterThan": 30
                }
               },
               "version": {
                "tierToCold": {
                 "daysAfterCreationGreaterThan": 30
                },
                "delete": {
                 "daysAfterCreationGreaterThan": 30
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2021-06-08T02:53:39.0932539Z"
         }
        }
       }
      }
     },
     "StorageAccountSetManagementPolicyHotTierActions": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "rules": [
           {
            "enabled": true,
            "name": "olcmtest1",
            "type": "Lifecycle",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob"
              ],
              "prefixMatch": [
               "olcmtestcontainer1"
              ]
             },
             "actions": {
              "baseBlob": {
               "tierToHot": {
                "daysAfterModificationGreaterThan": 30
               }
              },
              "snapshot": {
               "tierToHot": {
                "daysAfterCreationGreaterThan": 30
               }
              },
              "version": {
               "tierToHot": {
                "daysAfterCreationGreaterThan": 30
               }
              }
             }
            }
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/managementPolicies/default",
         "name": "DefaultManagementPolicy",
         "type": "Microsoft.Storage/storageAccounts/managementPolicies",
         "properties": {
          "policy": {
           "rules": [
            {
             "enabled": true,
             "name": "olcmtest1",
             "type": "Lifecycle",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob"
               ],
               "prefixMatch": [
                "olcmtestcontainer1"
               ]
              },
              "actions": {
               "baseBlob": {
                "tierToHot": {
                 "daysAfterModificationGreaterThan": 30
                }
               },
               "snapshot": {
                "tierToHot": {
                 "daysAfterCreationGreaterThan": 30
                }
               },
               "version": {
                "tierToHot": {
                 "daysAfterCreationGreaterThan": 30
                }
               }
              }
             }
            }
           ]
          },
          "lastModifiedTime": "2021-06-08T02:53:39.0932539Z"
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:3"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "properties",
     "$ref": "#/components/requestBodies/requestBodies:8",
     "description": "The ManagementPolicy set to a storage account."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:36",
      "description": "OK -- Put managementpolicy successfully."
     }
    }
   }
  },
  "path:19.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ManagementPolicies"
    ],
    "operationId": "ManagementPolicies_Delete",
    "description": "Deletes the managementpolicy associated with the specified storage account.",
    "x-ms-examples": {
     "StorageAccountDeleteManagementPolicies": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "managementPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {},
       "204": {}
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:3"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:37",
      "description": "OK -- Delete the managementpolicy successfully."
     },
     "204": {
      "$ref": "#/components/responses/responses:38",
      "description": "No Content -- The managementpolicy does not exist."
     }
    }
   }
  },
  "path:20": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}"
    ]
   }
  },
  "path:20.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobInventoryPolicies"
    ],
    "operationId": "BlobInventoryPolicies_Get",
    "description": "Gets the blob inventory policy associated with the specified storage account.",
    "x-ms-examples": {
     "StorageAccountGetBlobInventoryPolicy": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "blobInventoryPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default",
         "name": "DefaultInventoryPolicy",
         "type": "Microsoft.Storage/storageAccounts/inventoryPolicies",
         "properties": {
          "policy": {
           "enabled": true,
           "type": "Inventory",
           "rules": [
            {
             "enabled": true,
             "name": "inventoryPolicyRule1",
             "destination": "container1",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob",
                "appendBlob",
                "pageBlob"
               ],
               "prefixMatch": [
                "inventoryprefix1",
                "inventoryprefix2"
               ],
               "includeSnapshots": true,
               "includeBlobVersions": true
              },
              "format": "Csv",
              "schedule": "Daily",
              "objectType": "Blob",
              "schemaFields": [
               "Name",
               "Creation-Time",
               "Last-Modified",
               "Content-Length",
               "Content-MD5",
               "BlobType",
               "AccessTier",
               "AccessTierChangeTime",
               "Snapshot",
               "VersionId",
               "IsCurrentVersion",
               "Metadata"
              ]
             }
            }
           ]
          },
          "lastModifiedTime": "2020-10-05T02:53:39.0932539Z"
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:39",
      "description": "OK -- Get the blob inventory policy successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:40",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:20.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobInventoryPolicies"
    ],
    "operationId": "BlobInventoryPolicies_CreateOrUpdate",
    "description": "Sets the blob inventory policy to the specified storage account.",
    "x-ms-examples": {
     "StorageAccountSetBlobInventoryPolicy": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "blobInventoryPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "enabled": true,
          "type": "Inventory",
          "rules": [
           {
            "enabled": true,
            "name": "inventoryPolicyRule1",
            "destination": "container1",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob",
               "appendBlob",
               "pageBlob"
              ],
              "prefixMatch": [
               "inventoryprefix1",
               "inventoryprefix2"
              ],
              "creationTime": {
               "lastNDays": 1000
              },
              "includeSnapshots": true,
              "includeBlobVersions": true
             },
             "format": "Csv",
             "schedule": "Daily",
             "objectType": "Blob",
             "schemaFields": [
              "Name",
              "Creation-Time",
              "Last-Modified",
              "Content-Length",
              "Content-MD5",
              "BlobType",
              "AccessTier",
              "AccessTierChangeTime",
              "Snapshot",
              "VersionId",
              "IsCurrentVersion",
              "Metadata"
             ]
            }
           },
           {
            "enabled": true,
            "name": "inventoryPolicyRule2",
            "definition": {
             "format": "Parquet",
             "schedule": "Weekly",
             "objectType": "Container",
             "schemaFields": [
              "Name",
              "Last-Modified",
              "Metadata",
              "LeaseStatus",
              "LeaseState",
              "LeaseDuration",
              "PublicAccess",
              "HasImmutabilityPolicy",
              "HasLegalHold"
             ]
            },
            "destination": "container2"
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default",
         "name": "DefaultInventoryPolicy",
         "type": "Microsoft.Storage/storageAccounts/inventoryPolicies",
         "properties": {
          "policy": {
           "enabled": true,
           "type": "Inventory",
           "rules": [
            {
             "enabled": true,
             "name": "inventoryPolicyRule1",
             "destination": "container1",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob",
                "appendBlob",
                "pageBlob"
               ],
               "prefixMatch": [
                "inventoryprefix1",
                "inventoryprefix2"
               ],
               "creationTime": {
                "lastNDays": 1000
               },
               "includeSnapshots": true,
               "includeBlobVersions": true
              },
              "format": "Csv",
              "schedule": "Daily",
              "objectType": "Blob",
              "schemaFields": [
               "Name",
               "Creation-Time",
               "Last-Modified",
               "Content-Length",
               "Content-MD5",
               "BlobType",
               "AccessTier",
               "AccessTierChangeTime",
               "Snapshot",
               "VersionId",
               "IsCurrentVersion",
               "Metadata"
              ]
             }
            },
            {
             "enabled": true,
             "name": "inventoryPolicyRule2",
             "definition": {
              "format": "Parquet",
              "schedule": "Weekly",
              "objectType": "Container",
              "schemaFields": [
               "Name",
               "Last-Modified",
               "Metadata",
               "LeaseStatus",
               "LeaseState",
               "LeaseDuration",
               "PublicAccess",
               "HasImmutabilityPolicy",
               "HasLegalHold"
              ]
             },
             "destination": "container2"
            }
           ]
          },
          "lastModifiedTime": "2020-10-05T02:53:39.0932539Z"
         }
        }
       }
      }
     },
     "StorageAccountSetBlobInventoryPolicyIncludeDeleteAndNewSchemaForHnsAccount": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "blobInventoryPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "enabled": true,
          "type": "Inventory",
          "rules": [
           {
            "enabled": true,
            "name": "inventoryPolicyRule1",
            "destination": "container1",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob",
               "appendBlob",
               "pageBlob"
              ],
              "prefixMatch": [
               "inventoryprefix1",
               "inventoryprefix2"
              ],
              "excludePrefix": [
               "excludeprefix1",
               "excludeprefix2"
              ],
              "includeSnapshots": true,
              "includeBlobVersions": true,
              "includeDeleted": true
             },
             "format": "Csv",
             "schedule": "Daily",
             "objectType": "Blob",
             "schemaFields": [
              "Name",
              "Creation-Time",
              "Last-Modified",
              "Content-Length",
              "Content-MD5",
              "BlobType",
              "AccessTier",
              "AccessTierChangeTime",
              "Snapshot",
              "VersionId",
              "IsCurrentVersion",
              "ContentType",
              "ContentEncoding",
              "ContentLanguage",
              "ContentCRC64",
              "CacheControl",
              "Metadata",
              "DeletionId",
              "Deleted",
              "DeletedTime",
              "RemainingRetentionDays"
             ]
            }
           },
           {
            "enabled": true,
            "name": "inventoryPolicyRule2",
            "definition": {
             "format": "Parquet",
             "schedule": "Weekly",
             "objectType": "Container",
             "schemaFields": [
              "Name",
              "Last-Modified",
              "Metadata",
              "LeaseStatus",
              "LeaseState",
              "LeaseDuration",
              "PublicAccess",
              "HasImmutabilityPolicy",
              "HasLegalHold",
              "Etag",
              "DefaultEncryptionScope",
              "DenyEncryptionScopeOverride",
              "ImmutableStorageWithVersioningEnabled",
              "Deleted",
              "Version",
              "DeletedTime",
              "RemainingRetentionDays"
             ]
            },
            "destination": "container2"
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default",
         "name": "DefaultInventoryPolicy",
         "type": "Microsoft.Storage/storageAccounts/inventoryPolicies",
         "properties": {
          "policy": {
           "enabled": true,
           "type": "Inventory",
           "rules": [
            {
             "enabled": true,
             "name": "inventoryPolicyRule1",
             "destination": "container1",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob",
                "appendBlob",
                "pageBlob"
               ],
               "prefixMatch": [
                "inventoryprefix1",
                "inventoryprefix2"
               ],
               "excludePrefix": [
                "excludeprefix1",
                "excludeprefix2"
               ],
               "includeSnapshots": true,
               "includeBlobVersions": true,
               "includeDeleted": true
              },
              "format": "Csv",
              "schedule": "Daily",
              "objectType": "Blob",
              "schemaFields": [
               "Name",
               "Creation-Time",
               "Last-Modified",
               "Content-Length",
               "Content-MD5",
               "BlobType",
               "AccessTier",
               "AccessTierChangeTime",
               "Snapshot",
               "VersionId",
               "IsCurrentVersion",
               "ContentType",
               "ContentEncoding",
               "ContentLanguage",
               "ContentCRC64",
               "CacheControl",
               "Metadata",
               "DeletionId",
               "Deleted",
               "DeletedTime",
               "RemainingRetentionDays"
              ]
             }
            },
            {
             "enabled": true,
             "name": "inventoryPolicyRule2",
             "definition": {
              "format": "Parquet",
              "schedule": "Weekly",
              "objectType": "Container",
              "schemaFields": [
               "Name",
               "Last-Modified",
               "Metadata",
               "LeaseStatus",
               "LeaseState",
               "LeaseDuration",
               "PublicAccess",
               "HasImmutabilityPolicy",
               "HasLegalHold",
               "Etag",
               "DefaultEncryptionScope",
               "DenyEncryptionScopeOverride",
               "ImmutableStorageWithVersioningEnabled",
               "Deleted",
               "Version",
               "DeletedTime",
               "RemainingRetentionDays"
              ]
             },
             "destination": "container2"
            }
           ]
          }
         }
        }
       }
      }
     },
     "StorageAccountSetBlobInventoryPolicyIncludeDeleteAndNewSchemaForNonHnsAccount": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "blobInventoryPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "policy": {
          "enabled": true,
          "type": "Inventory",
          "rules": [
           {
            "enabled": true,
            "name": "inventoryPolicyRule1",
            "destination": "container1",
            "definition": {
             "filters": {
              "blobTypes": [
               "blockBlob",
               "appendBlob",
               "pageBlob"
              ],
              "prefixMatch": [
               "inventoryprefix1",
               "inventoryprefix2"
              ],
              "excludePrefix": [
               "excludeprefix1",
               "excludeprefix2"
              ],
              "includeSnapshots": true,
              "includeBlobVersions": true,
              "includeDeleted": true
             },
             "format": "Csv",
             "schedule": "Daily",
             "objectType": "Blob",
             "schemaFields": [
              "Name",
              "Creation-Time",
              "Last-Modified",
              "Content-Length",
              "Content-MD5",
              "BlobType",
              "AccessTier",
              "AccessTierChangeTime",
              "Snapshot",
              "VersionId",
              "IsCurrentVersion",
              "Tags",
              "ContentType",
              "ContentEncoding",
              "ContentLanguage",
              "ContentCRC64",
              "CacheControl",
              "Metadata",
              "Deleted",
              "RemainingRetentionDays"
             ]
            }
           },
           {
            "enabled": true,
            "name": "inventoryPolicyRule2",
            "definition": {
             "format": "Parquet",
             "schedule": "Weekly",
             "objectType": "Container",
             "schemaFields": [
              "Name",
              "Last-Modified",
              "Metadata",
              "LeaseStatus",
              "LeaseState",
              "LeaseDuration",
              "PublicAccess",
              "HasImmutabilityPolicy",
              "HasLegalHold",
              "Etag",
              "DefaultEncryptionScope",
              "DenyEncryptionScopeOverride",
              "ImmutableStorageWithVersioningEnabled",
              "Deleted",
              "Version",
              "DeletedTime",
              "RemainingRetentionDays"
             ]
            },
            "destination": "container2"
           }
          ]
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default",
         "name": "DefaultInventoryPolicy",
         "type": "Microsoft.Storage/storageAccounts/inventoryPolicies",
         "properties": {
          "policy": {
           "enabled": true,
           "type": "Inventory",
           "rules": [
            {
             "enabled": true,
             "name": "inventoryPolicyRule1",
             "destination": "container1",
             "definition": {
              "filters": {
               "blobTypes": [
                "blockBlob",
                "appendBlob",
                "pageBlob"
               ],
               "prefixMatch": [
                "inventoryprefix1",
                "inventoryprefix2"
               ],
               "excludePrefix": [
                "excludeprefix1",
                "excludeprefix2"
               ],
               "includeSnapshots": true,
               "includeBlobVersions": true,
               "includeDeleted": true
              },
              "format": "Csv",
              "schedule": "Daily",
              "objectType": "Blob",
              "schemaFields": [
               "Name",
               "Creation-Time",
               "Last-Modified",
               "Content-Length",
               "Content-MD5",
               "BlobType",
               "AccessTier",
               "AccessTierChangeTime",
               "Snapshot",
               "VersionId",
               "IsCurrentVersion",
               "Tags",
               "ContentType",
               "ContentEncoding",
               "ContentLanguage",
               "ContentCRC64",
               "CacheControl",
               "Metadata",
               "Deleted",
               "RemainingRetentionDays"
              ]
             }
            },
            {
             "enabled": true,
             "name": "inventoryPolicyRule2",
             "definition": {
              "format": "Parquet",
              "schedule": "Weekly",
              "objectType": "Container",
              "schemaFields": [
               "Name",
               "Last-Modified",
               "Metadata",
               "LeaseStatus",
               "LeaseState",
               "LeaseDuration",
               "PublicAccess",
               "HasImmutabilityPolicy",
               "HasLegalHold",
               "Etag",
               "DefaultEncryptionScope",
               "DenyEncryptionScopeOverride",
               "ImmutableStorageWithVersioningEnabled",
               "Deleted",
               "Version",
               "DeletedTime",
               "RemainingRetentionDays"
              ]
             },
             "destination": "container2"
            }
           ]
          }
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "properties",
     "$ref": "#/components/requestBodies/requestBodies:9",
     "description": "The blob inventory policy set to a storage account."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:41",
      "description": "OK -- Put blob inventory policy successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:42",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:20.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobInventoryPolicies"
    ],
    "operationId": "BlobInventoryPolicies_Delete",
    "description": "Deletes the blob inventory policy associated with the specified storage account.",
    "x-ms-examples": {
     "StorageAccountDeleteBlobInventoryPolicy": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "blobInventoryPolicyName": "default",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {},
       "204": {}
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:43",
      "description": "OK -- Delete the blob inventory policy successfully."
     },
     "204": {
      "$ref": "#/components/responses/responses:44",
      "description": "No Content -- The blob inventory policy does not exist."
     },
     "default": {
      "$ref": "#/components/responses/responses:45",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:21": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies"
    ]
   }
  },
  "path:21.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "BlobInventoryPolicies"
    ],
    "operationId": "BlobInventoryPolicies_List",
    "description": "Gets the blob inventory policy associated with the specified storage account.",
    "x-ms-examples": {
     "StorageAccountGetBlobInventoryPolicy": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default",
           "name": "DefaultInventoryPolicy",
           "type": "Microsoft.Storage/storageAccounts/inventoryPolicies",
           "properties": {
            "policy": {
             "enabled": true,
             "type": "Inventory",
             "rules": [
              {
               "enabled": true,
               "name": "inventoryPolicyRule1",
               "destination": "container1",
               "definition": {
                "filters": {
                 "blobTypes": [
                  "blockBlob",
                  "appendBlob",
                  "pageBlob"
                 ],
                 "prefixMatch": [
                  "inventoryprefix1",
                  "inventoryprefix2"
                 ],
                 "includeSnapshots": true,
                 "includeBlobVersions": true
                },
                "format": "Csv",
                "schedule": "Daily",
                "objectType": "Blob",
                "schemaFields": [
                 "Name",
                 "Creation-Time",
                 "Last-Modified",
                 "Content-Length",
                 "Content-MD5",
                 "BlobType",
                 "AccessTier",
                 "AccessTierChangeTime",
                 "Snapshot",
                 "VersionId",
                 "IsCurrentVersion",
                 "Metadata"
                ]
               }
              }
             ]
            },
            "lastModifiedTime": "2020-10-05T02:53:39.0932539Z"
           }
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:46",
      "description": "OK -- Get the blob inventory policies successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:47",
      "description": "Error response describing why the operation failed."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:22": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections"
    ]
   }
  },
  "path:22.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateEndpointConnections"
    ],
    "operationId": "PrivateEndpointConnections_List",
    "description": "List all the private endpoint connections associated with the storage account.",
    "x-ms-examples": {
     "StorageAccountListPrivateEndpointConnections": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/privateEndpointConnections/{privateEndpointConnectionName}",
           "name": "{privateEndpointConnectionName}",
           "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
           "properties": {
            "provisioningState": "Succeeded",
            "privateEndpoint": {
             "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Network/privateEndpoints/petest01"
            },
            "privateLinkServiceConnectionState": {
             "status": "Approved",
             "description": "Auto-Approved",
             "actionRequired": "None"
            }
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/privateEndpointConnections/{privateEndpointConnectionName}",
           "name": "{privateEndpointConnectionName}",
           "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
           "properties": {
            "provisioningState": "Succeeded",
            "privateEndpoint": {
             "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Network/privateEndpoints/petest02"
            },
            "privateLinkServiceConnectionState": {
             "status": "Approved",
             "description": "Auto-Approved",
             "actionRequired": "None"
            }
           }
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:48",
      "description": "OK -- Successfully retrieved private endpoint connections."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:23": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}"
    ]
   }
  },
  "path:23.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateEndpointConnections"
    ],
    "operationId": "PrivateEndpointConnections_Get",
    "description": "Gets the specified private endpoint connection associated with the storage account.",
    "x-ms-examples": {
     "StorageAccountGetPrivateEndpointConnection": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "privateEndpointConnectionName": "{privateEndpointConnectionName}",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/privateEndpointConnections/{privateEndpointConnectionName}",
         "name": "{privateEndpointConnectionName}",
         "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
         "properties": {
          "provisioningState": "Succeeded",
          "privateEndpoint": {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Network/privateEndpoints/petest01"
          },
          "privateLinkServiceConnectionState": {
           "status": "Approved",
           "description": "Auto-Approved",
           "actionRequired": "None"
          }
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:36"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:49",
      "description": "OK -- Get the private endpoint connection properties successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:50",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:23.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateEndpointConnections"
    ],
    "operationId": "PrivateEndpointConnections_Put",
    "description": "Update the state of specified private endpoint connection associated with the storage account.",
    "x-ms-examples": {
     "StorageAccountPutPrivateEndpointConnection": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "sto9699",
       "privateEndpointConnectionName": "{privateEndpointConnectionName}",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "privateLinkServiceConnectionState": {
          "status": "Approved",
          "description": "Auto-Approved"
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Storage/storageAccounts/sto288/privateEndpointConnections/{privateEndpointConnectionName}",
         "name": "{privateEndpointConnectionName}",
         "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
         "properties": {
          "provisioningState": "Succeeded",
          "privateEndpoint": {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res7231/providers/Microsoft.Network/privateEndpoints/petest01"
          },
          "privateLinkServiceConnectionState": {
           "status": "Approved",
           "description": "Auto-Approved",
           "actionRequired": "None"
          }
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:36"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "properties",
     "$ref": "#/components/requestBodies/requestBodies:10",
     "description": "The private endpoint connection properties."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:51",
      "description": "OK -- Update the private endpoint connection properties successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:52",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:23.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateEndpointConnections"
    ],
    "operationId": "PrivateEndpointConnections_Delete",
    "description": "Deletes the specified private endpoint connection associated with the storage account.",
    "x-ms-examples": {
     "StorageAccountDeletePrivateEndpointConnection": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "privateEndpointConnectionName": "{privateEndpointConnectionName}",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {},
       "204": {}
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:36"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:53",
      "description": "OK -- Delete the private endpoint connection successfully."
     },
     "204": {
      "$ref": "#/components/responses/responses:54",
      "description": "No Content -- The private endpoint connection does not exist."
     },
     "default": {
      "$ref": "#/components/responses/responses:55",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:24": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateLinkResources"
    ]
   }
  },
  "path:24.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateLinkResources"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "PrivateLinkResources"
    ],
    "operationId": "PrivateLinkResources_ListByStorageAccount",
    "description": "Gets the private link resources that need to be created for a storage account.",
    "x-ms-examples": {
     "StorageAccountListPrivateLinkResources": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/privateLinkResources/blob",
           "name": "blob",
           "type": "Microsoft.Storage/storageAccounts/privateLinkResources",
           "properties": {
            "groupId": "blob",
            "requiredMembers": [
             "blob"
            ],
            "requiredZoneNames": [
             "privatelink.blob.core.windows.net"
            ]
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/privateLinkResources/blob_secondary",
           "name": "blob_secondary",
           "type": "Microsoft.Storage/storageAccounts/privateLinkResources",
           "properties": {
            "groupId": "blob_secondary",
            "requiredMembers": [
             "blob_secondary"
            ],
            "requiredZoneNames": [
             "privatelink.blob.core.windows.net"
            ]
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/privateLinkResources/table",
           "name": "table",
           "type": "Microsoft.Storage/storageAccounts/privateLinkResources",
           "properties": {
            "groupId": "table",
            "requiredMembers": [
             "table"
            ],
            "requiredZoneNames": [
             "privatelink.table.core.windows.net"
            ]
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/privateLinkResources/table_secondary",
           "name": "table_secondary",
           "type": "Microsoft.Storage/storageAccounts/privateLinkResources",
           "properties": {
            "groupId": "table_secondary",
            "requiredMembers": [
             "table_secondary"
            ],
            "requiredZoneNames": [
             "privatelink.table.core.windows.net"
            ]
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/privateLinkResources/dfs",
           "name": "dfs",
           "type": "Microsoft.Storage/storageAccounts/privateLinkResources",
           "properties": {
            "groupId": "dfs",
            "requiredMembers": [
             "dfs"
            ],
            "requiredZoneNames": [
             "privatelink.dfs.core.windows.net"
            ]
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/privateLinkResources/dfs_secondary",
           "name": "dfs_secondary",
           "type": "Microsoft.Storage/storageAccounts/privateLinkResources",
           "properties": {
            "groupId": "dfs_secondary",
            "requiredMembers": [
             "dfs_secondary"
            ],
            "requiredZoneNames": [
             "privatelink.dfs.core.windows.net"
            ]
           }
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:56",
      "description": "Successfully retrieved private link resources."
     }
    }
   }
  },
  "path:25": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies"
    ]
   }
  },
  "path:25.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ObjectReplicationPolicies"
    ],
    "operationId": "ObjectReplicationPolicies_List",
    "description": "List the object replication policies associated with the storage account.",
    "x-ms-examples": {
     "StorageAccountListObjectReplicationPolicies": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/objectReplicationPolicies/c6c23999-fd4e-433a-bcf9-1db69d27cd8a",
           "name": "c6c23999-fd4e-433a-bcf9-1db69d27cd8a",
           "type": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
           "properties": {
            "sourceAccount": "sto2527",
            "destinationAccount": "destAccount1"
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res9290/providers/Microsoft.Storage/storageAccounts/sto1590/objectReplicationPolicies/141d23dc-8958-4b48-b6e6-5a40bf1af116",
           "name": "141d23dc-8958-4b48-b6e6-5a40bf1af116",
           "type": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
           "properties": {
            "sourceAccount": "sto2527",
            "destinationAccount": "destAccount2",
            "metrics": {
             "enabled": true
            }
           }
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:57",
      "description": "OK -- List object replication policies successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:58",
      "description": "Error response describing why the operation failed."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:26": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}"
    ]
   }
  },
  "path:26.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ObjectReplicationPolicies"
    ],
    "operationId": "ObjectReplicationPolicies_Get",
    "description": "Get the object replication policy of the storage account by policy ID.",
    "x-ms-examples": {
     "StorageAccountGetObjectReplicationPolicies": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "objectReplicationPolicyId": "{objectReplicationPolicy-Id}",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/objectReplicationPolicies/{objectReplicationPolicy-Id}",
         "name": "{objectReplicationPolicy-Id}",
         "type": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
         "properties": {
          "policyId": "{objectReplicationPolicy-Id}",
          "enabledTime": "2019-06-08T03:01:55.7168089Z",
          "sourceAccount": "sto2527",
          "destinationAccount": "destAccount1",
          "rules": [
           {
            "sourceContainer": "sourceContainer1",
            "destinationContainer": "destContainer1",
            "filters": {
             "prefixMatch": [
              "blobA",
              "blobB"
             ]
            }
           },
           {
            "sourceContainer": "sourceContainer1",
            "destinationContainer": "destContainer1",
            "filters": {
             "prefixMatch": [
              "blobC",
              "blobD"
             ]
            }
           }
          ],
          "metrics": {
           "enabled": true
          }
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:59",
      "description": "OK -- Get the object replication policy successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:60",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:26.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ObjectReplicationPolicies"
    ],
    "operationId": "ObjectReplicationPolicies_CreateOrUpdate",
    "description": "Create or update the object replication policy of the storage account.",
    "x-ms-examples": {
     "StorageAccountCreateObjectReplicationPolicyOnDestination": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "dst112",
       "objectReplicationPolicyId": "default",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "sourceAccount": "src1122",
         "destinationAccount": "dst112",
         "rules": [
          {
           "sourceContainer": "scont139",
           "destinationContainer": "dcont139",
           "filters": {
            "prefixMatch": [
             "blobA",
             "blobB"
            ]
           }
          }
         ],
         "metrics": {
          "enabled": true
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/dst112/objectReplicationPolicies/2a20bb73-5717-4635-985a-5d4cf777438f",
         "name": "2a20bb73-5717-4635-985a-5d4cf777438f",
         "type": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
         "properties": {
          "policyId": "2a20bb73-5717-4635-985a-5d4cf777438f",
          "sourceAccount": "src1122",
          "destinationAccount": "dst112",
          "rules": [
           {
            "ruleId": "d5d18a48-8801-4554-aeaa-74faf65f5ef9",
            "sourceContainer": "sourceContainer1",
            "destinationContainer": "destContainer1",
            "filters": {
             "prefixMatch": [
              "blobA",
              "blobB"
             ]
            }
           }
          ],
          "metrics": {
           "enabled": true
          }
         }
        }
       }
      }
     },
     "StorageAccountCreateObjectReplicationPolicyOnSource": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "src1122",
       "objectReplicationPolicyId": "2a20bb73-5717-4635-985a-5d4cf777438f",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "sourceAccount": "src1122",
         "destinationAccount": "dst112",
         "rules": [
          {
           "ruleId": "d5d18a48-8801-4554-aeaa-74faf65f5ef9",
           "sourceContainer": "scont139",
           "destinationContainer": "dcont139",
           "filters": {
            "prefixMatch": [
             "blobA",
             "blobB"
            ],
            "minCreationTime": "2020-02-19T16:05:00Z"
           }
          }
         ],
         "metrics": {
          "enabled": true
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/src1122/objectReplicationPolicies/2a20bb73-5717-4635-985a-5d4cf777438f",
         "name": "2a20bb73-5717-4635-985a-5d4cf777438f",
         "type": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
         "properties": {
          "policyId": "2a20bb73-5717-4635-985a-5d4cf777438f",
          "enabledTime": "2019-06-08T03:01:55.7168089Z",
          "sourceAccount": "src1122",
          "destinationAccount": "dst112",
          "rules": [
           {
            "ruleId": "d5d18a48-8801-4554-aeaa-74faf65f5ef9",
            "sourceContainer": "sourceContainer1",
            "destinationContainer": "destContainer1",
            "filters": {
             "prefixMatch": [
              "blobA",
              "blobB"
             ],
             "minCreationTime": "2020-02-19T16:05:00Z"
            }
           }
          ],
          "metrics": {
           "enabled": true
          }
         }
        }
       }
      }
     },
     "StorageAccountUpdateObjectReplicationPolicyOnDestination": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "dst112",
       "objectReplicationPolicyId": "2a20bb73-5717-4635-985a-5d4cf777438f",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "sourceAccount": "src1122",
         "destinationAccount": "dst112",
         "rules": [
          {
           "ruleId": "d5d18a48-8801-4554-aeaa-74faf65f5ef9",
           "sourceContainer": "scont139",
           "destinationContainer": "dcont139",
           "filters": {
            "prefixMatch": [
             "blobA",
             "blobB"
            ]
           }
          },
          {
           "sourceContainer": "scont179",
           "destinationContainer": "dcont179"
          }
         ],
         "metrics": {
          "enabled": true
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/dst112/objectReplicationPolicies/2a20bb73-5717-4635-985a-5d4cf777438f",
         "name": "2a20bb73-5717-4635-985a-5d4cf777438f",
         "type": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
         "properties": {
          "policyId": "2a20bb73-5717-4635-985a-5d4cf777438f",
          "sourceAccount": "src1122",
          "destinationAccount": "dst112",
          "rules": [
           {
            "ruleId": "d5d18a48-8801-4554-aeaa-74faf65f5ef9",
            "sourceContainer": "sourceContainer1",
            "destinationContainer": "destContainer1",
            "filters": {
             "prefixMatch": [
              "blobA",
              "blobB"
             ]
            }
           },
           {
            "ruleId": "cfbb4bc2-8b60-429f-b05a-d1e0942b33b2",
            "sourceContainer": "scont179",
            "destinationContainer": "dcont179"
           }
          ],
          "metrics": {
           "enabled": true
          }
         }
        }
       }
      }
     },
     "StorageAccountUpdateObjectReplicationPolicyOnSource": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res7687",
       "accountName": "src1122",
       "objectReplicationPolicyId": "2a20bb73-5717-4635-985a-5d4cf777438f",
       "api-version": "2024-01-01",
       "monitor": "true",
       "properties": {
        "properties": {
         "sourceAccount": "src1122",
         "destinationAccount": "dst112",
         "rules": [
          {
           "ruleId": "d5d18a48-8801-4554-aeaa-74faf65f5ef9",
           "sourceContainer": "scont139",
           "destinationContainer": "dcont139",
           "filters": {
            "prefixMatch": [
             "blobA",
             "blobB"
            ]
           }
          },
          {
           "ruleId": "cfbb4bc2-8b60-429f-b05a-d1e0942b33b2",
           "sourceContainer": "scont179",
           "destinationContainer": "dcont179"
          }
         ],
         "metrics": {
          "enabled": true
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/src1122/objectReplicationPolicies/2a20bb73-5717-4635-985a-5d4cf777438f",
         "name": "2a20bb73-5717-4635-985a-5d4cf777438f",
         "type": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
         "properties": {
          "policyId": "2a20bb73-5717-4635-985a-5d4cf777438f",
          "enabledTime": "2019-06-08T03:01:55.7168089Z",
          "sourceAccount": "src1122",
          "destinationAccount": "dst112",
          "rules": [
           {
            "ruleId": "d5d18a48-8801-4554-aeaa-74faf65f5ef9",
            "sourceContainer": "sourceContainer1",
            "destinationContainer": "destContainer1",
            "filters": {
             "prefixMatch": [
              "blobA",
              "blobB"
             ]
            }
           },
           {
            "ruleId": "cfbb4bc2-8b60-429f-b05a-d1e0942b33b2",
            "sourceContainer": "scont179",
            "destinationContainer": "dcont179"
           }
          ],
          "metrics": {
           "enabled": true
          }
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "properties",
     "$ref": "#/components/requestBodies/requestBodies:11",
     "description": "The object replication policy set to a storage account. A unique policy ID will be created if absent."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:61",
      "description": "OK -- Put object replication policy successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:62",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:26.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "ObjectReplicationPolicies"
    ],
    "operationId": "ObjectReplicationPolicies_Delete",
    "description": "Deletes the object replication policy associated with the specified storage account.",
    "x-ms-examples": {
     "StorageAccountDeleteObjectReplicationPolicies": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "objectReplicationPolicyId": "{objectReplicationPolicy-Id}",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {},
       "204": {}
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:63",
      "description": "OK -- Delete the object replication policy successfully."
     },
     "204": {
      "$ref": "#/components/responses/responses:64",
      "description": "No Content -- The object replication policy does not exist."
     },
     "default": {
      "$ref": "#/components/responses/responses:65",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:27": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1revokeUserDelegationKeys"
    ]
   }
  },
  "path:27.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1revokeUserDelegationKeys"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "StorageAccounts"
    ],
    "operationId": "StorageAccounts_RevokeUserDelegationKeys",
    "description": "Revoke user delegation keys.",
    "x-ms-examples": {
     "StorageAccountRevokeUserDelegationKeys": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res4167",
       "accountName": "sto3539",
       "api-version": "2024-01-01"
      },
      "responses": {
       "200": {}
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:15",
      "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:66",
      "description": "OK -- revoke user delegation keys succeeded."
     }
    }
   }
  },
  "path:28": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers"
    ]
   }
  },
  "path:28.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "LocalUsers"
    ],
    "operationId": "LocalUsers_List",
    "description": "List the local users associated with the storage account.",
    "x-ms-examples": {
     "ListLocalUsers": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/loalUsers/user1",
           "name": "user1",
           "type": "Microsoft.Storage/storageAccounts/localUsers",
           "properties": {
            "permissionScopes": [
             {
              "permissions": "rwd",
              "service": "file",
              "resourceName": "share1"
             },
             {
              "permissions": "rw",
              "service": "file",
              "resourceName": "share2"
             }
            ],
            "homeDirectory": "homedirectory",
            "sid": "S-1-2-0-125132-153423-36235-1000",
            "hasSharedKey": true,
            "hasSshKey": true,
            "hasSshPassword": true,
            "userId": 1000,
            "groupId": 2000,
            "allowAclAuthorization": true
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res9290/providers/Microsoft.Storage/storageAccounts/sto1590/loalUsers/user2",
           "name": "user2",
           "type": "Microsoft.Storage/storageAccounts/localUsers",
           "properties": {
            "permissionScopes": [
             {
              "permissions": "rw",
              "service": "blob",
              "resourceName": "resourcename"
             }
            ],
            "sid": "S-1-2-0-533672-235636-66334-1001",
            "hasSharedKey": true,
            "hasSshKey": false,
            "hasSshPassword": true,
            "userId": 1001,
            "groupId": 2000,
            "allowAclAuthorization": true
           }
          }
         ],
         "nextLink": null
        }
       }
      }
     },
     "ListNFSv3EnabledLocalUsers": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "api-version": "2024-01-01",
       "$include": "nfsv3",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/loalUsers/user1",
           "name": "user1",
           "type": "Microsoft.Storage/storageAccounts/localUsers",
           "properties": {
            "permissionScopes": [
             {
              "permissions": "rwd",
              "service": "file",
              "resourceName": "share1"
             },
             {
              "permissions": "rw",
              "service": "file",
              "resourceName": "share2"
             }
            ],
            "homeDirectory": "homedirectory",
            "sid": "S-1-2-0-125132-153423-36235-1000",
            "hasSharedKey": true,
            "hasSshKey": true,
            "hasSshPassword": true,
            "userId": 1000,
            "groupId": 2000,
            "allowAclAuthorization": true,
            "extendedGroups": [
             1001,
             1005,
             2005
            ],
            "isNFSv3Enabled": true
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/res9290/providers/Microsoft.Storage/storageAccounts/sto1590/loalUsers/user2",
           "name": "user2",
           "type": "Microsoft.Storage/storageAccounts/localUsers",
           "properties": {
            "permissionScopes": [
             {
              "permissions": "rw",
              "service": "blob",
              "resourceName": "resourcename"
             }
            ],
            "sid": "S-1-2-0-533672-235636-66334-1001",
            "hasSharedKey": true,
            "hasSshKey": false,
            "hasSshPassword": true,
            "userId": 1001,
            "groupId": 2000,
            "allowAclAuthorization": true,
            "extendedGroups": [
             1001,
             1005,
             2005
            ],
            "isNFSv3Enabled": true
           }
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:16",
      "description": "Optional, specifies the maximum number of local users that will be included in the list response."
     },
     {
      "$ref": "#/components/parameters/parameters:17",
      "description": "Optional. When specified, only local user names starting with the filter will be listed."
     },
     {
      "$ref": "#/components/parameters/parameters:18",
      "description": "Optional, when specified, will list local users enabled for the specific protocol. Lists all users by default."
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:67",
      "description": "OK -- List local users successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:68",
      "description": "Error response describing why the operation failed."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:29": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}"
    ]
   }
  },
  "path:29.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "LocalUsers"
    ],
    "operationId": "LocalUsers_Get",
    "description": "Get the local user of the storage account by username.",
    "x-ms-examples": {
     "GetLocalUser": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "username": "user1",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/loalUsers/user1",
         "name": "user1",
         "type": "Microsoft.Storage/storageAccounts/localUsers",
         "properties": {
          "permissionScopes": [
           {
            "permissions": "rwd",
            "service": "file",
            "resourceName": "share1"
           },
           {
            "permissions": "rw",
            "service": "file",
            "resourceName": "share2"
           }
          ],
          "homeDirectory": "homedirectory",
          "sid": "S-1-2-0-125132-153423-36235-1000",
          "hasSharedKey": true,
          "hasSshKey": true,
          "hasSshPassword": true,
          "userId": 1000,
          "groupId": 2000,
          "allowAclAuthorization": true,
          "extendedGroups": [
           1001,
           1005,
           2005
          ],
          "isNFSv3Enabled": true
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:69",
      "description": "OK -- Get the local user properties successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:70",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:29.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "LocalUsers"
    ],
    "operationId": "LocalUsers_CreateOrUpdate",
    "description": "Create or update the properties of a local user associated with the storage account. Properties for NFSv3 enablement and extended groups cannot be set with other properties.",
    "x-ms-examples": {
     "CreateLocalUser": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "username": "user1",
       "api-version": "2024-01-01",
       "properties": {
        "properties": {
         "permissionScopes": [
          {
           "permissions": "rwd",
           "service": "file",
           "resourceName": "share1"
          },
          {
           "permissions": "rw",
           "service": "file",
           "resourceName": "share2"
          }
         ],
         "homeDirectory": "homedirectory",
         "hasSshPassword": true,
         "sshAuthorizedKeys": [
          {
           "description": "key name",
           "key": "ssh-rsa keykeykeykeykey="
          }
         ],
         "groupId": 2000,
         "allowAclAuthorization": true
        }
       },
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/loalUsers/user1",
         "name": "user1",
         "type": "Microsoft.Storage/storageAccounts/localUsers",
         "properties": {
          "permissionScopes": [
           {
            "permissions": "rwd",
            "service": "file",
            "resourceName": "share1"
           },
           {
            "permissions": "rw",
            "service": "file",
            "resourceName": "share2"
           }
          ],
          "homeDirectory": "homedirectory",
          "sshAuthorizedKeys": [
           {
            "description": "key name",
            "key": "ssh-rsa keykeykeykeykey="
           }
          ],
          "sid": "S-1-2-0-125132-153423-36235-1000",
          "userId": 1000,
          "groupId": 2000,
          "allowAclAuthorization": true
         }
        }
       }
      }
     },
     "CreateNFSv3EnabledLocalUser": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "username": "user1",
       "api-version": "2024-01-01",
       "properties": {
        "properties": {
         "extendedGroups": [
          1001,
          1005,
          2005
         ],
         "isNFSv3Enabled": true
        }
       },
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/loalUsers/user1",
         "name": "user1",
         "type": "Microsoft.Storage/storageAccounts/localUsers",
         "properties": {
          "permissionScopes": [
           {
            "permissions": "rwd",
            "service": "file",
            "resourceName": "share1"
           },
           {
            "permissions": "rw",
            "service": "file",
            "resourceName": "share2"
           }
          ],
          "homeDirectory": "homedirectory",
          "sshAuthorizedKeys": [
           {
            "description": "key name",
            "key": "ssh-rsa keykeykeykeykey="
           }
          ],
          "sid": "S-1-2-0-125132-153423-36235-1000",
          "userId": 1000,
          "groupId": 2000,
          "allowAclAuthorization": true,
          "extendedGroups": [
           1001,
           1005,
           2005
          ],
          "isNFSv3Enabled": true
         }
        }
       }
      }
     },
     "UpdateLocalUser": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "username": "user1",
       "api-version": "2024-01-01",
       "properties": {
        "properties": {
         "homeDirectory": "homedirectory2",
         "hasSharedKey": false,
         "hasSshPassword": false,
         "hasSshKey": false,
         "groupId": 3000,
         "allowAclAuthorization": false,
         "extendedGroups": [
          1001,
          1005,
          2005
         ],
         "isNFSv3Enabled": true
        }
       },
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527/loalUsers/user1",
         "name": "user1",
         "type": "Microsoft.Storage/storageAccounts/localUsers",
         "properties": {
          "homeDirectory": "homedirectory2",
          "sid": "S-1-2-0-3528686663-1788730862-2791910117-1000",
          "hasSharedKey": false,
          "hasSshPassword": false,
          "hasSshKey": false,
          "userId": 1000,
          "groupId": 3000,
          "allowAclAuthorization": false,
          "extendedGroups": [
           1001,
           1005,
           2005
          ],
          "isNFSv3Enabled": true
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "properties",
     "$ref": "#/components/requestBodies/requestBodies:12",
     "description": "The local user associated with a storage account."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:71",
      "description": "OK -- Put local user successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:72",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:29.delete": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}"
    ]
   },
   "delete": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "LocalUsers"
    ],
    "operationId": "LocalUsers_Delete",
    "description": "Deletes the local user associated with the specified storage account.",
    "x-ms-examples": {
     "DeleteLocalUser": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "username": "user1",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {},
       "204": {}
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:73",
      "description": "OK -- Delete the local user successfully."
     },
     "204": {
      "$ref": "#/components/responses/responses:74",
      "description": "No content -- Delete the local user successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:75",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:30": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/listKeys",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1listKeys"
    ]
   }
  },
  "path:30.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/listKeys",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1listKeys"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "LocalUsers"
    ],
    "operationId": "LocalUsers_ListKeys",
    "description": "List SSH authorized keys and shared key of the local user.",
    "x-ms-examples": {
     "ListLocalUserKeys": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "username": "user1",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "sshAuthorizedKeys": [
          {
           "description": "key name",
           "key": "ssh-rsa keykeykeykeykew="
          }
         ],
         "sharedKey": "<REDACTED>"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:76",
      "description": "OK -- Get the local user keys successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:77",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:31": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/regeneratePassword",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1regeneratePassword"
    ]
   }
  },
  "path:31.post": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/regeneratePassword",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1regeneratePassword"
    ]
   },
   "post": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "LocalUsers"
    ],
    "operationId": "LocalUsers_RegeneratePassword",
    "description": "Regenerate the local user SSH password.",
    "x-ms-examples": {
     "RegenerateLocalUserPassword": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "res6977",
       "accountName": "sto2527",
       "username": "user1",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "sshPassword": "<REDACTED>"
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:78",
      "description": "OK -- Regenerate local user password successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:79",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:32": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}"
    ]
   }
  },
  "path:32.put": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}"
    ]
   },
   "put": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "EncryptionScopes"
    ],
    "operationId": "EncryptionScopes_Put",
    "description": "Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.",
    "x-ms-examples": {
     "StorageAccountPutEncryptionScope": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "resource-group-name",
       "accountName": "accountname",
       "encryptionScopeName": "{encryption-scope-name}",
       "api-version": "2024-01-01",
       "monitor": "true",
       "encryptionScope": {}
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/encryptionScopes/{encryption-scope-name}",
         "name": "{encryption-scope-name}",
         "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
         "properties": {
          "source": "Microsoft.Storage",
          "state": "Enabled",
          "creationTime": "2018-10-16T02:42:41.7633306Z",
          "lastModifiedTime": "2018-10-16T02:42:41.7633306Z"
         }
        }
       },
       "201": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/encryptionScopes/{encryption-scope-name}",
         "name": "{encryption-scope-name}",
         "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
         "properties": {
          "source": "Microsoft.Storage",
          "state": "Enabled",
          "creationTime": "2018-10-16T02:42:41.7633306Z",
          "lastModifiedTime": "2018-10-16T02:42:41.7633306Z"
         }
        }
       }
      }
     },
     "StorageAccountPutEncryptionScopeWithInfrastructureEncryption": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "resource-group-name",
       "accountName": "accountname",
       "encryptionScopeName": "{encryption-scope-name}",
       "api-version": "2024-01-01",
       "monitor": "true",
       "encryptionScope": {
        "properties": {
         "requireInfrastructureEncryption": true
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/encryptionScopes/{encryption-scope-name}",
         "name": "{encryption-scope-name}",
         "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
         "properties": {
          "requireInfrastructureEncryption": true,
          "source": "Microsoft.Storage",
          "state": "Enabled",
          "creationTime": "2018-10-16T02:42:41.7633306Z",
          "lastModifiedTime": "2018-10-16T02:42:41.7633306Z"
         }
        }
       },
       "201": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/encryptionScopes/{encryption-scope-name}",
         "name": "{encryption-scope-name}",
         "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
         "properties": {
          "requireInfrastructureEncryption": true,
          "source": "Microsoft.Storage",
          "state": "Enabled",
          "creationTime": "2018-10-16T02:42:41.7633306Z",
          "lastModifiedTime": "2018-10-16T02:42:41.7633306Z"
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "encryptionScope",
     "$ref": "#/components/requestBodies/requestBodies:13",
     "description": "Encryption scope properties to be used for the create or update."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:80",
      "description": "OK -- Update encryption scope operation completed successfully."
     },
     "201": {
      "$ref": "#/components/responses/responses:81",
      "description": "Created -- Create encryption scope operation completed successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:82",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:32.patch": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}"
    ]
   },
   "patch": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "EncryptionScopes"
    ],
    "operationId": "EncryptionScopes_Patch",
    "description": "Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.",
    "x-ms-examples": {
     "StorageAccountPatchEncryptionScope": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "resource-group-name",
       "accountName": "accountname",
       "encryptionScopeName": "{encryption-scope-name}",
       "api-version": "2024-01-01",
       "monitor": "true",
       "encryptionScope": {
        "properties": {
         "source": "Microsoft.KeyVault",
         "keyVaultProperties": {
          "keyUri": "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c"
         }
        }
       }
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/encryptionScopes/{encryption-scope-name}",
         "name": "{encryption-scope-name}",
         "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
         "properties": {
          "source": "Microsoft.KeyVault",
          "state": "Enabled",
          "keyVaultProperties": {
           "keyUri": "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c",
           "currentVersionedKeyIdentifier": "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c",
           "lastKeyRotationTimestamp": "2019-12-13T20:36:23.7023290Z"
          },
          "creationTime": "2018-10-16T02:42:41.7633306Z",
          "lastModifiedTime": "2018-10-17T06:23:14.4513306Z"
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     }
    ],
    "requestBody": {
     "x-ms-requestBody-name": "encryptionScope",
     "$ref": "#/components/requestBodies/requestBodies:14",
     "description": "Encryption scope properties to be used for the update."
    },
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:83",
      "description": "OK -- Update encryption scope operation completed successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:84",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:32.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "EncryptionScopes"
    ],
    "operationId": "EncryptionScopes_Get",
    "description": "Returns the properties for the specified encryption scope.",
    "x-ms-examples": {
     "StorageAccountGetEncryptionScope": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "resource-group-name",
       "accountName": "accountname",
       "encryptionScopeName": "{encryption-scope-name}",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/encryptionScopes/{encryption-scope-name}",
         "name": "{encyrption-scope-name}",
         "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
         "properties": {
          "source": "Microsoft.Storage",
          "state": "Enabled",
          "creationTime": "2018-10-16T02:42:41.7633306Z",
          "lastModifiedTime": "2018-10-16T02:42:41.7633306Z"
         }
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:85",
      "description": "OK -- Get encryption scope operation completed successfully."
     },
     "default": {
      "$ref": "#/components/responses/responses:86",
      "description": "Error response describing why the operation failed."
     }
    }
   }
  },
  "path:33": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes"
    ]
   }
  },
  "path:33.get": {
   "x-ms-metadata": {
    "apiVersions": [
     "2024-01-01"
    ],
    "filename": [
     "mem:///258?oai3.shaken.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes",
    "originalLocations": [
     "file:///Users/takashi.idobe/go/src/github.com/DataDog/azure-rest-api-specs/specification/storage/resource-manager/Microsoft.Storage/stable/2024-01-01/storage.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes"
    ]
   },
   "get": {
    "servers": [
     {
      "url": "https://management.azure.com/"
     }
    ],
    "tags": [
     "EncryptionScopes"
    ],
    "operationId": "EncryptionScopes_List",
    "description": "Lists all the encryption scopes available under the specified storage account.",
    "x-ms-examples": {
     "StorageAccountEncryptionScopeList": {
      "parameters": {
       "subscriptionId": "{subscription-id}",
       "resourceGroupName": "resource-group-name",
       "accountName": "accountname",
       "api-version": "2024-01-01",
       "monitor": "true"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/encryptionScopes/scope-1",
           "name": "scope-1",
           "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
           "properties": {
            "source": "Microsoft.Storage",
            "state": "Enabled",
            "creationTime": "2018-10-16T02:42:41.7633306Z",
            "lastModifiedTime": "2018-10-16T02:42:41.7633306Z"
           }
          },
          {
           "id": "/subscriptions/{subscription-id}/resourceGroups/resource-group-name/providers/Microsoft.Storage/storageAccounts/accountname/encryptionScopes/scope-2",
           "name": "scope-2",
           "type": "Microsoft.Storage/storageAccounts/encryptionScopes",
           "properties": {
            "source": "Microsoft.KeyVault",
            "state": "Enabled",
            "keyVaultProperties": {
             "keyUri": "https://testvault.vault.core.windows.net/keys/key1/863425f1358359c"
            },
            "creationTime": "2018-10-16T04:32:14.3355306Z",
            "lastModifiedTime": "2018-10-17T06:23:14.4513306Z"
           }
          }
         ],
         "nextLink": null
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "$ref": "#/components/parameters/parameters:1"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "$ref": "#/components/parameters/parameters:19",
      "description": "Optional, specifies the maximum number of encryption scopes that will be included in the list response."
     },
     {
      "$ref": "#/components/parameters/parameters:20",
      "description": "Optional. When specified, only encryption scope names starting with the filter will be listed."
     },
     {
      "$ref": "#/components/parameters/parameters:21",
      "description": "Optional, when specified, will list encryption scopes with the specific state. Defaults to All"
     }
    ],
    "responses": {
     "200": {
      "$ref": "#/components/responses/responses:87",
      "description": "OK -- List encryption scopes operation completed successfully."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  }
 },
 "openapi": "3.0.0",
 "info": {
  "x-ms-metadata": {
   "merged": true,
   "apiVersions": [
    "2024-01-01"
   ]
  },
  "title": "StorageManagementClient",
  "description": "The Azure Storage Management API.",
  "version": "2024-01-01"
 },
 "security": [
  {
   "azure_auth": [
    "user_impersonation"
   ]
  }
 ],
 "servers": [
  {
   "url": "https://management.azure.com/"
  }
 ]
}